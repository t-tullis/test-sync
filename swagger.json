{
  "openapi": "3.0.1",
  "info": {
    "title": "Endpoints",
    "description": "Invoices Public API to call Tipalti Services (Build Version:  2024-02-08-952396)",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "GL accounts",
      "x-displayName": "GL accounts"
    },
    {
      "name": "Invoice batches",
      "x-displayName": "Invoice batches"
    },
    {
      "name": "Invoices",
      "x-displayName": "Invoices"
    },
    {
      "name": "Tax codes",
      "x-displayName": "Tax codes"
    },
    {
      "name": "Custom fields",
      "x-displayName": "Custom fields"
    },
    {
      "name": "Payees",
      "x-displayName": "Payees"
    },
    {
      "name": "Payer entities",
      "x-displayName": "Payer entities"
    },
    {
      "name": "Payment batches",
      "x-displayName": "Payment batches"
    },
    {
      "name": "Payments",
      "x-displayName": "Payments"
    }
  ],
  "paths": {
    "/api/v1/gl-accounts": {
      "get": {
        "tags": ["GL accounts"],
        "summary": "Get list of GL accounts",
        "description": "Retrieves a list of GL accounts according to specific search/filtering criteria. If a filter is not specified, the API response will include all GL accounts.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.gl-account.read</a></p>",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The filter query string.\nSee <a href=\"/reference/filtering-1 \" target=\"_blank\">Filtering</a> for query specifications. Available filterable parameters are described below."
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlAccountResponseResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "3468489550001234567890000",
                          "externalId": "112311",
                          "name": "Office Expenses",
                          "number": "707713",
                          "description": "Office Expenses",
                          "currency": "GBP",
                          "isClosed": false,
                          "report1099Type": "MISC7",
                          "category": "EXPENSE",
                          "erpAccountType": "Income",
                          "payerEntityIds": [
                            "4013963901901227929740003",
                            "4013963901901227929740005"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/gl-accounts/{id}": {
      "get": {
        "tags": ["GL accounts"],
        "summary": "Get GL account by ID",
        "description": "Retrieves information about a specific GL account by using its given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.gl-account.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the GL account in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlAccountResponse"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000",
                      "externalId": "112311",
                      "name": "Office Expenses",
                      "number": "707713",
                      "description": "Office Expenses",
                      "currency": "GBP",
                      "isClosed": false,
                      "report1099Type": "MISC7",
                      "category": "EXPENSE",
                      "erpAccountType": "Income",
                      "payerEntityIds": [
                        "4013963901901227929740003",
                        "4013963901901227929740005"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/invoice-batches": {
      "post": {
        "tags": ["Invoice batches"],
        "summary": "Create invoice batch",
        "description": "Initiates an asynchronous process for creating a batch of invoices.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.invoice-batch.write</a></p>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InvoiceWithLinesRequestIEnumerableAsyncBatchRequest"
                  }
                ]
              },
              "examples": {
                "Create invoice batch request": {
                  "value": {
                    "batchHeader": {
                      "operationType": "CREATE"
                    },
                    "items": [
                      [
                        {
                          "batchItemId": "String value",
                          "refCode": "RefCode1234",
                          "invoiceNumber": "String value",
                          "subject": "String value",
                          "payeeVatNumber": "String value",
                          "invoiceDate": "1970-01-01T00:00:00",
                          "dueDate": "1970-01-01T00:00:00",
                          "currency": "String value",
                          "payeeId": "1234555550001234567890000",
                          "description": "String value",
                          "payerEntityId": "String value",
                          "apAccountId": "String value",
                          "incomeType": "String value",
                          "customFieldValues": [
                            {
                              "customFieldId": "1111489550001234567890000",
                              "valuesIds": null,
                              "value": "MyCustomFieldValue"
                            },
                            {
                              "customFieldId": "2222489550001234567893456",
                              "valuesIds": [
                                "2222333344441234567890000",
                                "2222333344441234567890011"
                              ],
                              "value": null
                            }
                          ],
                          "lines": [
                            {
                              "description": "String value",
                              "quantity": 1.1,
                              "unitPrice": 1.1,
                              "netAmount": 1.1,
                              "taxAmount": 1.1,
                              "taxCodeId": "String value",
                              "customFieldValues": [
                                {
                                  "customFieldId": "1111489550001234567890000",
                                  "valuesIds": null,
                                  "value": "MyCustomFieldValue"
                                },
                                {
                                  "customFieldId": "2222489550001234567893456",
                                  "valuesIds": [
                                    "2222333344441234567890000",
                                    "2222333344441234567890011"
                                  ],
                                  "value": null
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InvoiceWithLinesRequestIEnumerableAsyncBatchRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InvoiceWithLinesRequestIEnumerableAsyncBatchRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchHeader"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "4463092781618608436150000",
                      "status": "QUEUED",
                      "timeCreated": "2023-10-03T00:00:00Z",
                      "operationType": "CREATE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/invoice-batches/{id}": {
      "get": {
        "tags": ["Invoice batches"],
        "summary": "Get invoice batch upload summary by ID",
        "description": "Returns the processing status of the entire batch and the processing statuses of each invoice within the batch.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.invoice-batch.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the invoice batch in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchItemIBatchResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "batchHeader": {
                        "id": "4463092781618608436150000",
                        "status": "COMPLETED",
                        "timeCreated": "2023-10-02T00:00:00Z",
                        "timeCompleted": "2023-10-03T00:00:00Z",
                        "successfulItemsCount": 1,
                        "failedItemsCount": 1,
                        "operationType": "CREATE"
                      },
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "MzUwMA=="
                      },
                      "items": [
                        {
                          "batchItemId": "1",
                          "id": null,
                          "status": "FAILED",
                          "errors": [
                            {
                              "code": "INVC-123456",
                              "message": "Missing required parameter 'subject'",
                              "docUrl": "string",
                              "parameter": "subject"
                            }
                          ]
                        },
                        {
                          "batchItemId": "2",
                          "id": "4463092781618608436150001",
                          "status": "SUCCEEDED"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get list of invoices",
        "description": "Retrieves a list of invoices according to pre-defined search/filtering criteria. If a filter is not specified, the API response will include all invoices.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.invoice.read</a></p>",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The filter query string.\nSee <a href=\"/reference/filtering-1 \" target=\"_blank\">Filtering</a> for query specifications. Available filterable parameters are described below."
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "4463092781618608436150000",
                          "invoiceNumber": "INV_11223344",
                          "subject": "Beverages for company meeting",
                          "payeeVatNumber": "BE01239954XX",
                          "invoiceDate": "2023-01-08T00:00:00Z",
                          "dueDate": "2023-01-08T00:00:00Z",
                          "netAmount": {
                            "amount": 11302.52,
                            "currency": "USD"
                          },
                          "taxAmount": {
                            "amount": 11302.52,
                            "currency": "USD"
                          },
                          "totalAmount": {
                            "amount": 11302.52,
                            "currency": "USD"
                          },
                          "payeeId": "4465492781618608436150000",
                          "creationDate": "2023-01-08T00:00:00Z",
                          "description": "Food and beverages for the new year toast",
                          "refCode": "abcd123456",
                          "status": "PENDING_PAYMENT",
                          "payerEntityId": "4463092781618608987150000",
                          "apAccountId": "4463092781654308436150000",
                          "incomeType": "Patents",
                          "customFieldValues": [
                            {
                              "customFieldId": "5843667032817017816860000",
                              "valueType": "LIST",
                              "valuesIds": ["5843667032817017884160001"]
                            }
                          ],
                          "lines": [
                            {
                              "id": "4463092781618608436150000",
                              "description": "Pizza with toppings",
                              "quantity": 1,
                              "unitPrice": 100,
                              "netAmount": 100,
                              "taxAmount": 15,
                              "totalAmount": 115,
                              "taxCodeId": "4463092781618608478950000",
                              "customFieldValues": [
                                {
                                  "customFieldId": "5843661232817017815260000",
                                  "valueType": "LIST",
                                  "valuesIds": ["5843667056717017815260001"]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get invoice by ID",
        "description": "Retrieves information about a specific invoice by using its given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.invoice.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the invoice in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "4463092781618608436150000",
                      "invoiceNumber": "INV_11223344",
                      "subject": "Beverages for company meeting",
                      "payeeVatNumber": "BE01239954XX",
                      "invoiceDate": "2023-01-08T00:00:00Z",
                      "dueDate": "2023-01-08T00:00:00Z",
                      "netAmount": {
                        "amount": 11302.52,
                        "currency": "USD"
                      },
                      "taxAmount": {
                        "amount": 11302.52,
                        "currency": "USD"
                      },
                      "totalAmount": {
                        "amount": 11302.52,
                        "currency": "USD"
                      },
                      "payeeId": "4465492781618608436150000",
                      "creationDate": "2023-01-08T00:00:00Z",
                      "description": "Food and beverages for the new year toast",
                      "refCode": "abcd123456",
                      "status": "PENDING_PAYMENT",
                      "payerEntityId": "4463092781618608987150000",
                      "apAccountId": "4463092781654308436150000",
                      "incomeType": "Patents",
                      "customFieldValues": [
                        {
                          "customFieldId": "5843667032817017816860000",
                          "valueType": "LIST",
                          "valuesIds": ["5843667032817017884160001"]
                        }
                      ],
                      "lines": [
                        {
                          "id": "4463092781618608436150000",
                          "description": "Pizza with toppings",
                          "quantity": 1,
                          "unitPrice": 100,
                          "netAmount": 100,
                          "taxAmount": 15,
                          "totalAmount": 115,
                          "taxCodeId": "4463092781618608478950000",
                          "customFieldValues": [
                            {
                              "customFieldId": "5843661232817017815260000",
                              "valueType": "LIST",
                              "valuesIds": ["5843667056717017815260001"]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/lines": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get list of invoice lines",
        "description": "Retrieves a list of invoice lines by using the invoice's given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.invoice.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the invoice in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineResponseResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "4463092781618608436150000",
                          "description": "Pizza with toppings",
                          "quantity": 1,
                          "unitPrice": 100,
                          "netAmount": 100,
                          "taxAmount": 15,
                          "totalAmount": 115,
                          "taxCodeId": "4463092781618608478950000",
                          "customFieldValues": [
                            {
                              "customFieldId": "5843661232817017815260000",
                              "valueType": "LIST",
                              "valuesIds": ["5843667056717017815260001"]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{id}/lines/{line-id}": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get invoice line by ID",
        "description": "Retrieves information about a specific invoice line by using its given invoice line ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.invoice.read</a></p>",
        "parameters": [
          {
            "name": "line-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the invoice line in Tipalti."
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the invoice in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceLineResponse"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "4463092781618608436150000",
                      "description": "Pizza with toppings",
                      "quantity": 1,
                      "unitPrice": 100,
                      "netAmount": 100,
                      "taxAmount": 15,
                      "totalAmount": 115,
                      "taxCodeId": "4463092781618608478950000",
                      "customFieldValues": [
                        {
                          "customFieldId": "5843661232817017815260000",
                          "valueType": "LIST",
                          "valuesIds": ["5843667056717017815260001"]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/tax-codes": {
      "get": {
        "tags": ["Tax codes"],
        "summary": "Get list of tax codes",
        "description": "Retrieves a list of tax codes according to a specific search/filtering criteria. If a filter is not specified, the API response will include all tax codes.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.tax-code.read</a></p>",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The filter query string.\nSee <a href=\"/reference/filtering-1 \" target=\"_blank\">Filtering</a> for query specifications. Available filterable parameters are described below."
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCodeResponseResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "4463092781618608436150000",
                          "externalId": "4456",
                          "name": "Standard rate",
                          "rate": 17.005,
                          "isActive": true,
                          "payerEntityIds": [
                            "4013963901901227929740003",
                            "4013963901901227929740005"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/tax-codes/{id}": {
      "get": {
        "tags": ["Tax codes"],
        "summary": "Get tax code by ID",
        "description": "Retrieves information about a specific tax code by using its given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.tax-code.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the tax code in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCodeResponse"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "4463092781618608436150000",
                      "externalId": "4456",
                      "name": "Standard rate",
                      "rate": 17.005,
                      "isActive": true,
                      "payerEntityIds": [
                        "4013963901901227929740003",
                        "4013963901901227929740005"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm",
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/custom-fields": {
      "get": {
        "tags": ["Custom fields"],
        "summary": "Get list of custom fields",
        "description": "The get list of custom fields action retrieves a list of custom fields according to specific search/ filtering criteria.\nIf a filter is not specified, the API response will include all custom fields.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.custom-field.read</a></p>",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The filter query string.\nSee <a href=\"/reference/filtering-1 \" target=\"_blank\">Filtering</a> for query specifications. Available filterable parameters are described below."
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldModelResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "3468489550001234567890000",
                          "externalId": "ExternalId1234",
                          "name": "String value",
                          "description": "String value",
                          "resources": ["PAYMENT"],
                          "valueType": "TEXT",
                          "isActive": false,
                          "attributes": [
                            {
                              "name": "SUB_RESOURCE",
                              "value": "String value"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/custom-fields/{id}": {
      "get": {
        "tags": ["Custom fields"],
        "summary": "Get custom field by ID",
        "description": "The get custom field by ID action retrieves information about a specific custom field by using its given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.custom-field.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the custom field in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldModel"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000",
                      "externalId": "ExternalId1234",
                      "name": "String value",
                      "description": "String value",
                      "resources": ["PAYMENT"],
                      "valueType": "TEXT",
                      "isActive": false,
                      "attributes": [
                        {
                          "name": "SUB_RESOURCE",
                          "value": "String value"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/custom-fields/{id}/value-options": {
      "get": {
        "tags": ["Custom fields"],
        "summary": "Get list of value options",
        "description": "The get list of custom field value options action retrieves a list of custom field value options according to specific search/ filtering criteria.\nIf a filter is not specified, the API response will include all custom field value options for the given custom field.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.custom-field.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the custom field in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The filter query string.\nSee <a href=\"/reference/filtering-1 \" target=\"_blank\">Filtering</a> for query specifications. Available filterable parameters are described below."
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldValueOptionModelResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "value": "String value",
                          "id": "3468489550001234567890000",
                          "externalId": "ExternalId1234",
                          "isActive": false,
                          "payerEntityIds": ["String value"]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/custom-fields/{id}/value-options/{option-id}": {
      "get": {
        "tags": ["Custom fields"],
        "summary": "Get value option by ID",
        "description": "The get custom field value option by ID action retrieves information about a specific custom field value option by using its given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.custom-field.read</a></p>",
        "parameters": [
          {
            "name": "option-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier of the custom field value option in Tipalti."
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the custom field in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldValueOptionModel"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "value": "String value",
                      "id": "3468489550001234567890000",
                      "externalId": "ExternalId1234",
                      "isActive": false,
                      "payerEntityIds": ["String value"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payees": {
      "get": {
        "tags": ["Payees"],
        "summary": "Get list of payees",
        "description": "The Get List of Payees action retrieves a list of payees according to specific search/ filtering criteria.\nIf a filter is not specified, the API response will include all payees.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payee.read</a></p>",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The filter query string.\nSee <a href=\"/reference/filtering-1 \" target=\"_blank\">Filtering</a> for query specifications. Available filterable parameters are described below."
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeModelResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "3468489550001234567890000",
                          "refCode": "RefCode1234",
                          "preferredPayerEntityId": "String value",
                          "status": "ACTIVE",
                          "statusChangeDateTimeUTC": "1970-01-01T00:00:00",
                          "statusReason": "String value",
                          "entityType": "INDIVIDUAL",
                          "isAccountClosed": false,
                          "isPayable": false,
                          "lastChangeDateTimeUTC": "1970-01-01T00:00:00",
                          "contactInformation": {
                            "email": "String value",
                            "firstName": "James",
                            "middleName": "William",
                            "lastName": "Smith",
                            "companyName": "Tipalti",
                            "alias": "String value",
                            "address": "1051 E. Hillsdale Boulevard",
                            "address2": "Suite 600",
                            "city": "Foster City",
                            "zip": "94404",
                            "stateProvinceCode": "CA",
                            "beneficiaryCountryCode": "CA",
                            "paymentCountryCode": "US",
                            "phone": "5551234",
                            "phoneCountryCode": "US",
                            "countryOfBirthCode": "US",
                            "dateOfBirth": "1970-01-01T00:00:00",
                            "languageCode": "en"
                          },
                          "paymentMethod": {
                            "paymentMethodType": "NO_PAYMENT_METHOD",
                            "currency": "String value"
                          },
                          "customFieldValues": [
                            {
                              "customFieldId": "1111489550001234567890000",
                              "valueType": "TEXT",
                              "value": "MyCustomFieldValue"
                            },
                            {
                              "customFieldId": "2222489550001234567893456",
                              "valueType": "LIST",
                              "valuesIds": [
                                "2222333344441234567890000",
                                "2222333344441234567890011"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Payees"],
        "summary": "Create payee",
        "description": "The Create Payee action creates a new payee using the provided request body data, and returns the newly created payee information.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payee.write</a></p>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayeeCreateInput"
                  }
                ]
              },
              "examples": {
                "Request example": {
                  "value": {
                    "customFieldValues": [
                      {
                        "customFieldId": "1111489550001234567890000",
                        "valuesIds": null,
                        "value": "MyCustomFieldValue"
                      },
                      {
                        "customFieldId": "2222489550001234567893456",
                        "valuesIds": [
                          "2222333344441234567890000",
                          "2222333344441234567890011"
                        ],
                        "value": null
                      }
                    ],
                    "refCode": "RefCode1234",
                    "preferredPayerEntityId": "String value",
                    "entityType": "INDIVIDUAL",
                    "contactInformation": {
                      "email": "String value",
                      "firstName": "James",
                      "middleName": "William",
                      "lastName": "Smith",
                      "companyName": "Tipalti",
                      "alias": "String value",
                      "address": "1051 E. Hillsdale Boulevard",
                      "address2": "Suite 600",
                      "city": "Foster City",
                      "zip": "94404",
                      "stateProvinceCode": "CA",
                      "beneficiaryCountryCode": "CA",
                      "paymentCountryCode": "US",
                      "phone": "5551234",
                      "phoneCountryCode": "US",
                      "countryOfBirthCode": "US",
                      "dateOfBirth": "1970-01-01T00:00:00",
                      "languageCode": "en"
                    }
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayeeCreateInput"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayeeCreateInput"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeModel"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000",
                      "refCode": "RefCode1234",
                      "preferredPayerEntityId": "String value",
                      "status": "ACTIVE",
                      "statusChangeDateTimeUTC": "1970-01-01T00:00:00",
                      "statusReason": "String value",
                      "entityType": "INDIVIDUAL",
                      "isAccountClosed": false,
                      "isPayable": false,
                      "lastChangeDateTimeUTC": "1970-01-01T00:00:00",
                      "contactInformation": {
                        "email": "String value",
                        "firstName": "James",
                        "middleName": "William",
                        "lastName": "Smith",
                        "companyName": "Tipalti",
                        "alias": "String value",
                        "address": "1051 E. Hillsdale Boulevard",
                        "address2": "Suite 600",
                        "city": "Foster City",
                        "zip": "94404",
                        "stateProvinceCode": "CA",
                        "beneficiaryCountryCode": "CA",
                        "paymentCountryCode": "US",
                        "phone": "5551234",
                        "phoneCountryCode": "US",
                        "countryOfBirthCode": "US",
                        "dateOfBirth": "1970-01-01T00:00:00",
                        "languageCode": "en"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "NO_PAYMENT_METHOD",
                        "currency": "String value"
                      },
                      "customFieldValues": [
                        {
                          "customFieldId": "1111489550001234567890000",
                          "valueType": "TEXT",
                          "value": "MyCustomFieldValue"
                        },
                        {
                          "customFieldId": "2222489550001234567893456",
                          "valueType": "LIST",
                          "valuesIds": [
                            "2222333344441234567890000",
                            "2222333344441234567890011"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payees/{id}": {
      "get": {
        "tags": ["Payees"],
        "summary": "Get payee by ID",
        "description": "The Get Payee by ID action retrieves information about a specific payee by using its given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payee.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the payee in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeModel"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000",
                      "refCode": "RefCode1234",
                      "preferredPayerEntityId": "String value",
                      "status": "ACTIVE",
                      "statusChangeDateTimeUTC": "1970-01-01T00:00:00",
                      "statusReason": "String value",
                      "entityType": "INDIVIDUAL",
                      "isAccountClosed": false,
                      "isPayable": false,
                      "lastChangeDateTimeUTC": "1970-01-01T00:00:00",
                      "contactInformation": {
                        "email": "String value",
                        "firstName": "James",
                        "middleName": "William",
                        "lastName": "Smith",
                        "companyName": "Tipalti",
                        "alias": "String value",
                        "address": "1051 E. Hillsdale Boulevard",
                        "address2": "Suite 600",
                        "city": "Foster City",
                        "zip": "94404",
                        "stateProvinceCode": "CA",
                        "beneficiaryCountryCode": "CA",
                        "paymentCountryCode": "US",
                        "phone": "5551234",
                        "phoneCountryCode": "US",
                        "countryOfBirthCode": "US",
                        "dateOfBirth": "1970-01-01T00:00:00",
                        "languageCode": "en"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "NO_PAYMENT_METHOD",
                        "currency": "String value"
                      },
                      "customFieldValues": [
                        {
                          "customFieldId": "1111489550001234567890000",
                          "valueType": "TEXT",
                          "value": "MyCustomFieldValue"
                        },
                        {
                          "customFieldId": "2222489550001234567893456",
                          "valueType": "LIST",
                          "valuesIds": [
                            "2222333344441234567890000",
                            "2222333344441234567890011"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": ["Payees"],
        "summary": "Update payee",
        "description": "Updates a specific payee based on the data provided in the request body, and returns the updated payee information.\n\n > 📘 Note \n> \n> If a parameter is omitted, the value will not be changed. If a parameter is null or empty, the value will be deleted. \n> \n> The following parameters can't be null or empty: \n> - entityType \n> - status \n> - contactInformation \n> - customFieldValues \n<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payee.write</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the payee in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PayeeUpdateInputModel"
              },
              "example": {
                "entityType": "INDIVIDUAL",
                "status": "ACTIVE",
                "statusReason": null,
                "isAccountClosed": false,
                "contactInformation": {
                  "email": "String value",
                  "firstName": "James",
                  "middleName": "William",
                  "lastName": "Smith",
                  "companyName": "Tipalti",
                  "alias": "String value",
                  "address": "1051 E. Hillsdale Boulevard",
                  "address2": "Suite 600",
                  "city": "Foster City",
                  "zip": "94404",
                  "stateProvinceCode": "CA",
                  "beneficiaryCountryCode": "CA",
                  "paymentCountryCode": "US",
                  "phone": "5551234",
                  "phoneCountryCode": "US",
                  "countryOfBirthCode": "US",
                  "dateOfBirth": "1970-01-01T00:00:00.000Z",
                  "languageCode": "en"
                },
                "customFieldValues": [
                  {
                    "customFieldId": "1111489550001234567890000",
                    "valuesIds": null,
                    "value": "MyCustomFieldValue"
                  },
                  {
                    "customFieldId": "2222489550001234567893456",
                    "valuesIds": [
                      "2222333344441234567890000",
                      "2222333344441234567890011"
                    ],
                    "value": null
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayeeModel"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000",
                      "refCode": "RefCode1234",
                      "preferredPayerEntityId": "String value",
                      "status": "ACTIVE",
                      "statusChangeDateTimeUTC": "1970-01-01T00:00:00",
                      "statusReason": "String value",
                      "entityType": "INDIVIDUAL",
                      "isAccountClosed": false,
                      "isPayable": false,
                      "lastChangeDateTimeUTC": "1970-01-01T00:00:00",
                      "contactInformation": {
                        "email": "String value",
                        "firstName": "James",
                        "middleName": "William",
                        "lastName": "Smith",
                        "companyName": "Tipalti",
                        "alias": "String value",
                        "address": "1051 E. Hillsdale Boulevard",
                        "address2": "Suite 600",
                        "city": "Foster City",
                        "zip": "94404",
                        "stateProvinceCode": "CA",
                        "beneficiaryCountryCode": "CA",
                        "paymentCountryCode": "US",
                        "phone": "5551234",
                        "phoneCountryCode": "US",
                        "countryOfBirthCode": "US",
                        "dateOfBirth": "1970-01-01T00:00:00",
                        "languageCode": "en"
                      },
                      "paymentMethod": {
                        "paymentMethodType": "NO_PAYMENT_METHOD",
                        "currency": "String value"
                      },
                      "customFieldValues": [
                        {
                          "customFieldId": "1111489550001234567890000",
                          "valueType": "TEXT",
                          "value": "MyCustomFieldValue"
                        },
                        {
                          "customFieldId": "2222489550001234567893456",
                          "valueType": "LIST",
                          "valuesIds": [
                            "2222333344441234567890000",
                            "2222333344441234567890011"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors409"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "PYEE-100013",
                          "message": "Closed account cannot be updated",
                          "parameter": "isAccountClosed"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payer-entities": {
      "get": {
        "tags": ["Payer entities"],
        "summary": "Get list of payer entities",
        "description": "The Get list of payer entities action retrieves a list of payer entities according to specific search/filtering criteria.\nIf a filter is not specified, the API response will include all payer entities.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payer-entity.read</a></p>",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The filter query string.\nSee <a href=\"/reference/filtering-1 \" target=\"_blank\">Filtering</a> for query specifications. Available filterable parameters are described below."
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayerEntityModelResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "3468489550001234567890000",
                          "entityName": "String value",
                          "legalName": "String value",
                          "isDefault": false,
                          "brandName": "String value",
                          "externalId": "ExternalId1234",
                          "incomeTypes": ["String value"]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payer-entities/{id}": {
      "get": {
        "tags": ["Payer entities"],
        "summary": "Get payer entity by ID",
        "description": "The Get payer entity action retrieves a specific payer entity's information by using its given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payer-entity.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the payer entity in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayerEntityModel"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000",
                      "entityName": "String value",
                      "legalName": "String value",
                      "isDefault": false,
                      "brandName": "String value",
                      "externalId": "ExternalId1234",
                      "incomeTypes": ["String value"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payment-batches": {
      "post": {
        "tags": ["Payment batches"],
        "summary": "Create payment batch",
        "description": "The Create payment batch action joins together a list of payments into a single request.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payment-batch.write</a></p>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBatchPaymentsRequest"
                  }
                ],
                "description": "list of payments to be created in batch"
              },
              "examples": {
                "Request example": {
                  "value": {
                    "paymentInstructions": [
                      {
                        "payeeId": "1234555550001234567890000",
                        "amountSubmitted": {
                          "amount": 11,
                          "currency": "USD"
                        },
                        "refCode": "RefCode1234",
                        "scheduledDate": "1970-01-01T00:00:00",
                        "isVisibleToPayeeWhenScheduled": false,
                        "isThresholdIgnored": false,
                        "isMaxWithholdingApplied": false,
                        "isTaxValidationIgnored": false,
                        "eWalletMessage": "String value",
                        "bankingMessage": "String value",
                        "emailMessage": "String value",
                        "incomeType": "String value",
                        "additionalWithholding": 1.1,
                        "usSource": 1.1,
                        "payingEntityId": "1234489550001234567891111",
                        "customFieldValues": [
                          {
                            "customFieldId": "1111489550001234567890000",
                            "value": "MyCustomFieldValue"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBatchPaymentsRequest"
                  }
                ],
                "description": "list of payments to be created in batch"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBatchPaymentsRequest"
                  }
                ],
                "description": "list of payments to be created in batch"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBatchPaymentsResponse"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payment-batches/{id}": {
      "get": {
        "tags": ["Payment batches"],
        "summary": "Get payment batch upload summary by ID",
        "description": "The Get payment batch upload summary by ID action retrieves a payments batch's creation status and additional information by using its tracking batch ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payment-batch.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the payment batch in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsBatchSummaryModel"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000",
                      "status": "QUEUED",
                      "name": "String value",
                      "submissionDateTime": "1970-01-01T00:00:00",
                      "isValidForSubmission": false,
                      "fundsProvidersSummary": [
                        {
                          "provider": "String value",
                          "totalAmount": [
                            {
                              "amount": 11,
                              "currency": "USD"
                            }
                          ],
                          "immediateAmount": [
                            {
                              "amount": 11,
                              "currency": "USD"
                            }
                          ],
                          "payerFees": [
                            {
                              "amount": 11,
                              "currency": "USD"
                            }
                          ],
                          "scheduledAmount": [
                            {
                              "amount": 11,
                              "currency": "USD"
                            }
                          ],
                          "withholding": [
                            {
                              "amount": 11,
                              "currency": "USD"
                            }
                          ],
                          "additionalWithholding": [
                            {
                              "amount": 11,
                              "currency": "USD"
                            }
                          ],
                          "estimatedProviderFees": [
                            {
                              "amount": 11,
                              "currency": "USD"
                            }
                          ],
                          "fundsRequired": [
                            {
                              "amount": 11,
                              "currency": "USD"
                            }
                          ],
                          "outstandingPaymentsAmount": {
                            "amount": 11,
                            "currency": "USD"
                          },
                          "paymentAmount": {
                            "amount": 11,
                            "currency": "USD"
                          }
                        }
                      ],
                      "exchangeRateCautionBufferPercentage": 1.1,
                      "paymentsBatchErrors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payment-batches/{id}/instructions": {
      "get": {
        "tags": ["Payment batches"],
        "summary": "Get payment batch instructions by ID",
        "description": "The Get payment batch instructions by ID action retrieves a payments batch's information by using its tracking batch ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payment-batch.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the payment batch in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInstructionResponseResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "3468489550001234567890000",
                          "refCode": "RefCode1234",
                          "payeeId": "1234555550001234567890000",
                          "amountSubmitted": {
                            "amount": 11,
                            "currency": "USD"
                          },
                          "scheduledDate": "1970-01-01T00:00:00",
                          "instructionStatus": "OK",
                          "alerts": [
                            {
                              "code": "GNRL-123456",
                              "message": "Error message",
                              "type": "ERROR",
                              "docUrl": "https://documentation.tipalti.com"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payments": {
      "get": {
        "tags": ["Payments"],
        "summary": "Get list of payments",
        "description": "The Get list of payments action retrieves a list of payments according to pre-defined search/filtering criteria.\nIf a filter is not specified, the API response will include all payments.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payment.read</a></p>",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The filter query string.\nSee <a href=\"/reference/filtering-1 \" target=\"_blank\">Filtering</a> for query specifications. Available filterable parameters are described below."
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "The number of results displayed per page.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page size</a> for details and limitations.",
              "format": "int32"
            }
          },
          {
            "name": "page-cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "A cursor for pagination across multiple pages of results.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination - page cursor</a> for details and limitations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentModelResourceApiPage"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "totalCount": 2,
                      "pageInfo": {
                        "hasNextPage": true,
                        "nextPageCursor": "NextPageCursorValue"
                      },
                      "items": [
                        {
                          "id": "3468489550001234567890000",
                          "batchId": "String value",
                          "payeeId": "1234555550001234567890000",
                          "payerEntityId": "String value",
                          "refCode": "RefCode1234",
                          "providerTransactionRefCode": "String value",
                          "eWalletMessage": "String value",
                          "bankingMessage": "String value",
                          "emailSubject": "String value",
                          "submissionDate": "1970-01-01T00:00:00",
                          "scheduledDate": "1970-01-01T00:00:00",
                          "valueDate": "1970-01-01T00:00:00",
                          "transactionCompletionDate": "1970-01-01T00:00:00",
                          "paymentMethod": "NO_PAYMENT_METHOD",
                          "status": "PAID",
                          "payeePaidAmount": {
                            "amount": 11,
                            "currency": "USD"
                          },
                          "payerWithdrawAmount": {
                            "amount": 11,
                            "currency": "USD"
                          },
                          "amountSubmitted": {
                            "amount": 11,
                            "currency": "USD"
                          },
                          "payeeReceivedAmountInPayerAccountCurrency": {
                            "amount": 11,
                            "currency": "USD"
                          },
                          "fees": [
                            {
                              "type": "FX",
                              "entityType": "PAYEE",
                              "amount": {
                                "amount": 11,
                                "currency": "USD"
                              }
                            }
                          ],
                          "exchangeRates": [
                            {
                              "type": "SUBMITTED_CURRENCY_TO_PAYEE_CURRENCY",
                              "value": 1.1
                            }
                          ],
                          "tax": {
                            "region": "US",
                            "usTaxInfo": {
                              "withholdingAmount": {
                                "amount": 11,
                                "currency": "USD"
                              },
                              "taxWithholdingRate": 1.1,
                              "treatyCountryCode": "String value",
                              "incomeTypes": ["String value"]
                            }
                          },
                          "customFieldValues": [
                            {
                              "customFieldId": "1111489550001234567890000",
                              "value": "MyCustomFieldValue"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/v1/payments/{id}": {
      "get": {
        "tags": ["Payments"],
        "summary": "Get payment by ID",
        "description": "The Get payment by ID action retrieves a specific payment's information by using its given ID.<p><H3>Required Scopes</h3></p><p><a href=/docs/access-scopes  target=\"_blank\">tipalti.api.payment.read</a></p>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the payment in Tipalti.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentModel"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "id": "3468489550001234567890000",
                      "batchId": "String value",
                      "payeeId": "1234555550001234567890000",
                      "payerEntityId": "String value",
                      "refCode": "RefCode1234",
                      "providerTransactionRefCode": "String value",
                      "eWalletMessage": "String value",
                      "bankingMessage": "String value",
                      "emailSubject": "String value",
                      "submissionDate": "1970-01-01T00:00:00",
                      "scheduledDate": "1970-01-01T00:00:00",
                      "valueDate": "1970-01-01T00:00:00",
                      "transactionCompletionDate": "1970-01-01T00:00:00",
                      "paymentMethod": "NO_PAYMENT_METHOD",
                      "status": "PAID",
                      "payeePaidAmount": {
                        "amount": 11,
                        "currency": "USD"
                      },
                      "payerWithdrawAmount": {
                        "amount": 11,
                        "currency": "USD"
                      },
                      "amountSubmitted": {
                        "amount": 11,
                        "currency": "USD"
                      },
                      "payeeReceivedAmountInPayerAccountCurrency": {
                        "amount": 11,
                        "currency": "USD"
                      },
                      "fees": [
                        {
                          "type": "FX",
                          "entityType": "PAYEE",
                          "amount": {
                            "amount": 11,
                            "currency": "USD"
                          }
                        }
                      ],
                      "exchangeRates": [
                        {
                          "type": "SUBMITTED_CURRENCY_TO_PAYEE_CURRENCY",
                          "value": 1.1
                        }
                      ],
                      "tax": {
                        "region": "US",
                        "usTaxInfo": {
                          "withholdingAmount": {
                            "amount": 11,
                            "currency": "USD"
                          },
                          "taxWithholdingRate": 1.1,
                          "treatyCountryCode": "String value",
                          "incomeTypes": ["String value"]
                        }
                      },
                      "customFieldValues": [
                        {
                          "customFieldId": "1111489550001234567890000",
                          "value": "MyCustomFieldValue"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrors"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "errors": [
                        {
                          "code": "GNRL-123456",
                          "message": "Error message",
                          "docUrl": "https://documentation.tipalti.com",
                          "parameter": "invalidParameterName"
                        }
                      ],
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorTrace"
                },
                "examples": {
                  "Response example": {
                    "value": {
                      "traceId": "ab12c3456d7890123efg4h56ijk789lm"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AmountData": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The model's amount.",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "The amount's currency, as per <a href=\"https://en.wikipedia.org/wiki/ISO_4217 \" target=\"_blank\">ISO 4217</a> standard.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiError": {
        "required": ["code", "message"],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Error identifier of the response.\nSee <a href=\"/reference/http-status-codes-1#apierror-object \" target=\"_blank\">APIError object</a> for more information."
          },
          "message": {
            "minLength": 1,
            "type": "string",
            "description": "Informative error message explaining the nature of the error."
          },
          "docUrl": {
            "type": "string",
            "description": "Link to a general error page or a resource error page.",
            "nullable": true
          },
          "parameter": {
            "type": "string",
            "description": "Indicates the name of the invalid parameter in the request.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiErrorTrace": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "A unique identifier of the API request in Tipalti's servers.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiErrors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            },
            "description": "Array of ApiError objects.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "A unique identifier of the API request in Tipalti's servers.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AsyncBatchRequestIEnumerable": {
        "$ref": "#/components/schemas/InvoiceWithLinesRequestIEnumerableAsyncBatchRequest"
      },
      "BatchHeader": {
        "required": ["operationType"],
        "type": "object",
        "properties": {
          "operationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchOperationType"
              }
            ],
            "description": "Request type."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the batch.",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchStatus"
              }
            ],
            "description": "Status of the batch.\nSee <a href=\"../docs/statuses\" target=\"_blank\">batch statuses</a> for more information."
          },
          "timeCreated": {
            "type": "string",
            "description": "Date and time the batch was created.",
            "format": "date-time"
          },
          "timeCompleted": {
            "type": "string",
            "description": "Date and time the batch processing was completed. If the process is not yet completed, this field will be empty.",
            "format": "date-time",
            "nullable": true
          },
          "successfulItemsCount": {
            "type": "integer",
            "description": "Number of items successfully processed.",
            "format": "int64",
            "nullable": true
          },
          "failedItemsCount": {
            "type": "integer",
            "description": "Number of items that failed processing.",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchHeaderBase": {
        "required": ["operationType"],
        "type": "object",
        "properties": {
          "operationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchOperationType"
              }
            ],
            "description": "Request type."
          }
        },
        "additionalProperties": false
      },
      "BatchItem": {
        "type": "object",
        "properties": {
          "batchItemId": {
            "type": "string",
            "description": "Item ID provided by the payer when creating the batch.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "ID for each item within the batch generated by Tipalti upon batch creation.",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchItemStatus"
              }
            ],
            "description": "Processing status of an item within the batch."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            },
            "description": "List of errors when an item status is FAILED.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchItemIBatchResourceApiPage": {
        "type": "object",
        "properties": {
          "batchHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchHeader"
              }
            ],
            "description": "Details of the batch.",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of items in the request.",
            "format": "int32",
            "nullable": true
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchItem"
            },
            "description": "List of items in the batch.",
            "nullable": true
          },
          "batchErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            },
            "description": "List of errors when the batch status is FAILED.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchItemStatus": {
        "enum": ["FAILED", "SUCCEEDED"],
        "type": "string"
      },
      "BatchOperationType": {
        "enum": ["CREATE", "UPDATE", "DELETE"],
        "type": "string"
      },
      "BatchStatus": {
        "enum": ["QUEUED", "PROCESSING", "COMPLETED", "FAILED", "CANCELED"],
        "type": "string"
      },
      "CustomFieldResourceValuesInputModel": {
        "required": ["customFieldId"],
        "type": "object",
        "properties": {
          "customFieldId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the custom field."
          },
          "valuesIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the values in the value option list (for custom field of type LIST).",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The value of the custom field (for custom field of type TEXT).",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldResourceValuesModel": {
        "type": "object",
        "properties": {
          "customFieldId": {
            "type": "string",
            "description": "The unique identifier of the custom field."
          },
          "valueType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eCustomFieldValueType"
              }
            ],
            "description": "The type of the custom field.",
            "readOnly": true
          },
          "valuesIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the values in the value option list (for custom field of type LIST).",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The value of the custom field (for custom field of type TEXT).",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the GL account in Tipalti."
          },
          "externalId": {
            "type": "string",
            "description": "The unique identifier of the GL account in the ERP."
          },
          "name": {
            "type": "string",
            "description": "The GL account's name."
          },
          "number": {
            "type": "string",
            "description": "The GL account's number.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A short description of the GL account.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The GL account's selected payment currency, as per ISO 4217 standard.",
            "nullable": true
          },
          "isClosed": {
            "type": "boolean",
            "description": "Indicates if the GL account is closed.\r\nClosed accounts are not deleted from the system and can be displayed in certain searches. These accounts are uneditable."
          },
          "report1099Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eGlAccount1099Type"
              }
            ],
            "description": "The type of income for 1099 filling purposes, according to the box numbers of the Federal tax authorities.",
            "nullable": true
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eGlAccountCategory"
              }
            ],
            "description": "The GL account's category."
          },
          "erpAccountType": {
            "type": "string",
            "description": "The GL account's type received from the ERP."
          },
          "payerEntityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The payer entities assigned to the GL account.\r\nIf the array is empty, it indicates that the GL account is relevant to all payer entities."
          }
        },
        "additionalProperties": false
      },
      "GlAccountResponseResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of GL accounts that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlAccountResponse"
            },
            "description": "A list of GL accounts.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineRequest": {
        "required": ["customFieldValues", "netAmount"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A description of the expense in the line.",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of the good or service purchased.",
            "format": "double",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "The price of a single unit of the good or service purchased.",
            "format": "double",
            "nullable": true
          },
          "netAmount": {
            "type": "number",
            "description": "The net amount of the invoice line. If quantity and unitPrice are also provided for this line, net amount must equal quantity multiplied by unitPrice.",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "description": "The tax amount of the invoice line. If provided, taxAmount must equal the line's netAmount multiplied by the tax rate of the taxCodeId.",
            "format": "double",
            "nullable": true
          },
          "taxCodeId": {
            "type": "string",
            "description": "The unique identifier of the tax code in Tipalti. If either taxAmount or Tax code has a value, the other field must also have a value.",
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResourceValuesInputModel"
            },
            "description": "The custom fields that will be included in each of the invoice lines."
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the invoice line in Tipalti."
          },
          "description": {
            "type": "string",
            "description": "A description of the expense in the line.",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "The quantity of the good or service purchased.",
            "format": "double",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "description": "The price of a single unit of the good or service purchased.",
            "format": "double",
            "nullable": true
          },
          "netAmount": {
            "type": "number",
            "description": "The net amount of the invoice line. If quantity and unitPrice are also provided for this line, net amount must equal quantity multiplied by unitPrice.",
            "format": "double",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "description": "The tax amount of the invoice line. If provided, taxAmount must equal the line's netAmount multiplied by the tax rate of the taxCodeId.",
            "format": "double",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount (net + tax) of the invoice line.",
            "format": "double",
            "nullable": true
          },
          "taxCodeId": {
            "type": "string",
            "description": "The unique identifier of the tax code in Tipalti. If either taxAmount or Tax code has a value, the other field must also have a value.",
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResourceValuesModel"
            },
            "description": "The custom fields that will be included in each of the invoice lines.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineResponseResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of invoice lines that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineResponse"
            },
            "description": "A list of invoice lines.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the invoice in Tipalti."
          },
          "invoiceNumber": {
            "type": "string",
            "description": "The invoice number. Usually unique per payee, unless it's a duplicate invoice.",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "The invoice subject. A short description displayed at the top of the generated invoice.",
            "nullable": true
          },
          "payeeVatNumber": {
            "type": "string",
            "description": "The payee's VAT number.",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "The date the invoice was issued by the payer's system in UTC time, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO-8601</a> standard.",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "The invoice's due date in UTC time, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO-8601</a> standard.",
            "format": "date-time",
            "nullable": true
          },
          "netAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The total net amount as presented on the invoice. The currency must be the same in all invoice amounts.",
            "nullable": true
          },
          "taxAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The total tax amount as presented on the invoice. The currency must be the same in all invoice amounts.",
            "nullable": true
          },
          "totalAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The total invoice amount. Equal to the sum of net and tax amounts. The currency must be the same in all invoice amounts.",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "description": "The unique identifier of the payee in Tipalti.",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "The invoice's creation date, automatically generated by Tipalti in UTC time, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO-8601</a> standard.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "The invoice description. Can be used for internal notes.",
            "nullable": true
          },
          "refCode": {
            "type": "string",
            "description": "The invoice's unique reference code generated by Tipalti."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eInvoiceStatus"
              }
            ],
            "description": "The invoice's current processing status."
          },
          "payerEntityId": {
            "type": "string",
            "description": "The unique identifier of the subsidiary associated with the invoice.",
            "nullable": true
          },
          "apAccountId": {
            "type": "string",
            "description": "The unique identifier of the AP account (a GL account of type \"AP account\") associated with the invoice.",
            "nullable": true
          },
          "incomeType": {
            "enum": ["Patents", "Film&TV", "Copyrights", "OtherIncome"],
            "type": "string",
            "description": "The invoice <a href=\"https://documentation.tipalti.com/docs/income-types\" target=\"_blank\">income type</a>. Required for tax purposes when using Tipalti's tax withholding (US only).",
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResourceValuesModel"
            },
            "description": "The custom fields used on the invoice. To learn which custom fields are mandatory on your invoices go to Tipalti Hub, Administration -> Bill settings -> Bill field settings.",
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineResponse"
            },
            "description": "The invoice lines. Invoices may have up to 100 lines."
          }
        },
        "additionalProperties": false
      },
      "InvoiceResponseResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of invoices that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceResponse"
            },
            "description": "A list of invoices.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceWithLinesRequest": {
        "required": [
          "apAccountId",
          "batchItemId",
          "currency",
          "customFieldValues",
          "invoiceDate",
          "lines",
          "payeeId",
          "payerEntityId",
          "refCode",
          "subject"
        ],
        "type": "object",
        "properties": {
          "batchItemId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of a specific invoice in the batch. Used to identify the invoice's creation result in the response."
          },
          "refCode": {
            "minLength": 1,
            "type": "string",
            "description": "The Invoice's unique reference code provided by the payer.\nIn some flows, the reference code may be generated by Tipalti."
          },
          "invoiceNumber": {
            "type": "string",
            "description": "The invoice number. Usually unique per payee, unless it's a duplicate invoice.",
            "nullable": true
          },
          "subject": {
            "minLength": 1,
            "type": "string",
            "description": "The invoice subject. A short description displayed at the top of the generated invoice."
          },
          "payeeVatNumber": {
            "type": "string",
            "description": "The payee's VAT number.",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "The date the invoice was issued by the payer's system in UTC time, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO-8601</a> standard.",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "description": "The invoice's due date in UTC time, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO-8601</a> standard.",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "minLength": 1,
            "type": "string",
            "description": "The invoice amount's currency, as per <a href=\"https://en.wikipedia.org/wiki/ISO_4217 \" target=\"_blank\">ISO 4217</a> standard. Only Currencies that Tipalti supports."
          },
          "payeeId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the payee in Tipalti."
          },
          "description": {
            "type": "string",
            "description": "The invoice description. Can be used for internal notes.",
            "nullable": true
          },
          "payerEntityId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the subsidiary associated with the invoice."
          },
          "apAccountId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the AP account (a GL account of type \"AP account\") associated with the invoice."
          },
          "incomeType": {
            "enum": ["Patents", "Film&TV", "Copyrights", "OtherIncome"],
            "type": "string",
            "description": "The invoice <a href=\"https://documentation.tipalti.com/docs/income-types\" target=\"_blank\">income type</a>. Required for tax purposes when using Tipalti's tax withholding (US only).",
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResourceValuesInputModel"
            },
            "description": "The custom fields used on the invoice. To learn which custom fields are mandatory on your invoices go to Tipalti Hub, Administration -> Bill settings -> Bill field settings."
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineRequest"
            },
            "description": "The lines that will appear on the bill. At least a single line is required. The request is limited to 100 lines per invoice."
          }
        },
        "additionalProperties": false
      },
      "InvoiceWithLinesRequestIEnumerableAsyncBatchRequest": {
        "type": "object",
        "properties": {
          "batchHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchHeaderBase"
              }
            ],
            "description": "Request type.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InvoiceWithLinesRequest"
              }
            },
            "description": "List of items to be included in the batch.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JsonElementAsyncBatchRequest": {
        "type": "object",
        "properties": {
          "batchHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BatchHeaderBase"
              }
            ],
            "description": "Request type.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {},
            "description": "List of items to be included in the batch.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageApiInfo": {
        "type": "object",
        "properties": {
          "hasNextPage": {
            "type": "boolean",
            "description": "Indicates whether there is another page or not."
          },
          "nextPageCursor": {
            "type": "string",
            "description": "Page cursor to use on the next API request call to retrieve next items.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information."
      },
      "TaxCodeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the tax code in Tipalti."
          },
          "externalId": {
            "type": "string",
            "description": "The unique identifier of the tax code in the ERP."
          },
          "name": {
            "type": "string",
            "description": "The tax code's name."
          },
          "rate": {
            "type": "number",
            "description": "The tax code's rate.",
            "format": "double"
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates if the tax code is active. Inactive tax codes are not deleted from the system and can be displayed in certain searches."
          },
          "payerEntityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The payer entities assigned to the tax code. If the array is empty, it indicates the tax code is relevant to all payer entities."
          }
        },
        "additionalProperties": false
      },
      "TaxCodeResponseResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of tax codes that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxCodeResponse"
            },
            "description": "A list of tax codes.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "eCustomFieldValueType": {
        "enum": ["TEXT", "LIST"],
        "type": "string",
        "description": "The custom field's value type.\nFor more information see <a href=\"/docs/custom-fields \" target=\"_blank\">Custom fields</a>."
      },
      "eGlAccount1099Type": {
        "enum": [
          "NON_APPLICABLE",
          "MISC1",
          "MISC2",
          "MISC3",
          "MISC4",
          "MISC5",
          "MISC6",
          "MISC7",
          "MISC8",
          "MISC9",
          "MISC10",
          "MISC11",
          "MISC12",
          "MISC13",
          "MISC14",
          "MISC15A",
          "MISC15B",
          "MISC16",
          "MISC17",
          "MISC18",
          "NEC1",
          "NEC2"
        ],
        "type": "string"
      },
      "eGlAccountCategory": {
        "enum": [
          "AP_ACCOUNT",
          "BANK",
          "CREDIT_CARD",
          "EXPENSE",
          "OTHER",
          "INTERNAL_VALUE"
        ],
        "type": "string"
      },
      "eInvoiceStatus": {
        "enum": [
          "PENDING_PAYMENT",
          "PAYMENT_IN_PROCESS",
          "PAID",
          "DELETED",
          "DISPUTED",
          "INTERNAL_VALUE"
        ],
        "type": "string",
        "description": "The invoice's current processing status."
      },
      "AlertApiModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The alert code.\nSee <a href=\"/reference/payment-batch-business-logic-errors \" target=\"_blank\">Payment error codes</a> for more information.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "A short description of the alert.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ePaymentAlertType"
              }
            ],
            "description": "The type of payment alert.<li><b>ERROR</b> - There is an issue with the payment that prevents it from being processed.</li><li><b>WARNING</b> - There is an issue with the payment, but it will still be processed.</li>"
          },
          "docUrl": {
            "type": "string",
            "description": "URL referencing the documentation of the specified alert.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiErrors409": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            },
            "description": "Array of ApiError objects.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "A unique identifier of the API request in Tipalti's servers.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactInformationModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The payee's email.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The payee's first name.\nIf the `entityType` is **INDIVIDUAL**, this field is required.",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "The payee's middle name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The payee's last name.\nIf the `entityType` is **INDIVIDUAL**, this field is required.",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "The payee's company name.\nIf the `entityType` is **COMPANY**, this field is required.",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "description": "An alternate name for the payee, if applicable.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "The payee's address.",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "The payee's additional address information (apartment, entrance, suite, etc.).",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The payee's city.",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "description": "The payee's zip/ postal code.",
            "nullable": true
          },
          "stateProvinceCode": {
            "type": "string",
            "description": "The payee's state/ province code as per <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2 \" target=\"_blank\">ISO 3166-2</a> standard.",
            "nullable": true
          },
          "beneficiaryCountryCode": {
            "type": "string",
            "description": "The payee's country code as per <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2 \" target=\"_blank\">ISO 3166-2</a> standard.",
            "nullable": true
          },
          "paymentCountryCode": {
            "type": "string",
            "description": "The code of the country where the payee chooses to receive the payment as per <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2 \" target=\"_blank\">ISO 3166-2</a> standard.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The payee's phone number without the country dialing code.\nCountry code must be added in the `phoneCountryCode` field and match the specified country's phone number format.",
            "nullable": true
          },
          "phoneCountryCode": {
            "type": "string",
            "description": "This is required when the phone number is provided. The payee's phone number country code as per <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2 \" target=\"_blank\">ISO 3166-2</a> standard.",
            "nullable": true
          },
          "countryOfBirthCode": {
            "type": "string",
            "description": "The payee's country of birth code as per <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2 \" target=\"_blank\">ISO 3166-2</a> standard.",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The payee's date of birth as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601#Dates \" target=\"_blank\">ISO 8601</a> format standard.",
            "format": "date-time",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "description": "The payee's preferred language for communications as per <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes \" target=\"_blank\">ISO 639-1</a>, <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-2_codes \" target=\"_blank\">ISO 639-2</a>, and <a href=\"https://en.wikipedia.org/wiki/IETF_language_tag \" target=\"_blank\">IETF language tag</a> standards.\nLanguage support varies from channel to channel. If an unsupported language is selected, English will be used.\nFor the full list of supported languages, refer to <a href=\"/docs/supported-languages \" target=\"_blank\">Supported Languages</a>.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBatchPaymentsRequest": {
        "required": ["paymentInstructions"],
        "type": "object",
        "properties": {
          "paymentInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentLineModel"
            },
            "description": "An array of objects representing payment instructions."
          }
        },
        "additionalProperties": false,
        "description": "list of payments to be created in batch"
      },
      "CreateBatchPaymentsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the payment batch in Tipalti.\nThis ID is used in the Get payment batch summary to track the batch.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PublicAPI response for payments list creation request"
      },
      "CustomFieldAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eCustomFieldAttributeType"
              }
            ],
            "description": "The attribute's name."
          },
          "value": {
            "type": "string",
            "description": "The attribute's value."
          }
        },
        "additionalProperties": false
      },
      "CustomFieldModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the custom field in Tipalti."
          },
          "externalId": {
            "type": "string",
            "description": "The unique identifier of the custom field as generated outside of Tipalti."
          },
          "name": {
            "type": "string",
            "description": "The name of the custom field as displayed in Tipalti."
          },
          "description": {
            "type": "string",
            "description": "The description of the custom field.",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/eCustomFieldResource"
            },
            "description": "The resources that the custom field belongs to.\nFor more information see <a href=\"/docs/custom-fields \" target=\"_blank\">Custom fields</a>."
          },
          "valueType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eCustomFieldValueType"
              }
            ],
            "description": "The custom field's value type.\nFor more information see <a href=\"/docs/custom-fields \" target=\"_blank\">Custom fields</a>."
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates if the custom field is active.\nFor more information see <a href=\"/docs/custom-fields \" target=\"_blank\">Custom fields</a>."
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldAttribute"
            },
            "description": "Attributes that are relevant for a specific domain.\nFor more information see <a href=\"/docs/custom-fields \" target=\"_blank\">Custom fields</a>.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldModelResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of custom fields that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldModel"
            },
            "description": "A list of custom fields.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomFieldPaymentInputModel": {
        "required": ["customFieldId", "value"],
        "type": "object",
        "properties": {
          "customFieldId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the custom field."
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "The value of the custom field (for custom field type TEXT)."
          }
        },
        "additionalProperties": false
      },
      "CustomFieldPaymentValuesModel": {
        "type": "object",
        "properties": {
          "customFieldId": {
            "type": "string",
            "description": "The unique identifier of the custom field."
          },
          "value": {
            "type": "string",
            "description": "The value of the custom field (for custom field of type TEXT)."
          }
        },
        "additionalProperties": false
      },
      "CustomFieldValueOptionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the custom field value option in Tipalti."
          },
          "externalId": {
            "type": "string",
            "description": "The unique identifier of the custom field value option as generated outside of Tipalti."
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates if the custom field value option is active."
          },
          "payerEntityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the payer entities to which the custom field value option belongs.\nIf the array is empty, it indicates that the value option is relevant to all payer entities."
          },
          "value": {
            "type": "string",
            "description": "The value of the custom field value option."
          }
        },
        "additionalProperties": false
      },
      "CustomFieldValueOptionModelResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of custom field value options that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueOptionModel"
            },
            "description": "A list of custom field value options.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExchangeRateData": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eExchangeRateType"
              }
            ],
            "description": "The exchange rate's type.<li><b>SUBMITTED_CURRENCY_TO_PAYEE_CURRENCY</b> - The rate for converting the payment currency to the currency requested by the payee.</li><li><b>SUBMITTED_CURRENCY_TO_PAYER_ACCOUNT_CURRENCY</b> - The rate for converting the payment currency to the currency defined in the payer account.</li><li><b>INTERNAL_VALUE</b> - Represents several possible internal values. For more information, contact Tipalti support.</li>"
          },
          "value": {
            "type": "number",
            "description": "The exchange rate's value.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FeeData": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eFeeType"
              }
            ],
            "description": "The type of fee applied to the payment.<li><b>FX</b> - The fee applied for a currency conversion.</li><li><b>TRANSACTION</b> - The transaction fee.</li><li><b>PROVIDER</b> - The payment provider's processing fee.</li><li><b>LIFTING</b> - The transaction fee applied to the recipient by the recipient's bank or an intermediary bank, when cash is transferred through a wire transfer.</li><li><b>NET_NOW</b> - The fee charged for a net now transaction.</li><li><b>INTERNAL_VALUE</b> - Represents several possible internal values. For more information, contact Tipalti support.</li>"
          },
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eEntityType"
              }
            ],
            "description": "The type of entity being charged with the related fee."
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The fee amount.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FundsProviderSummaryApiData": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "The name of the provider for this account, e.g., Wells Fargo, Paypal, or Tipalti for virtual accounts.",
            "nullable": true
          },
          "totalAmount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountData"
            },
            "description": "The total amount of payments submitted in the batch.",
            "nullable": true
          },
          "immediateAmount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountData"
            },
            "description": "The amount of all unscheduled payments.",
            "nullable": true
          },
          "payerFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountData"
            },
            "description": "The fee paid to Tipalti by the payer.\nThis fee is applied on unscheduled payments only.",
            "nullable": true
          },
          "scheduledAmount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountData"
            },
            "description": "The amount for the scheduled payments in the payment instructions that don't have errors.",
            "nullable": true
          },
          "withholding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountData"
            },
            "description": "The amount withheld from the payment (in the payment currency).",
            "nullable": true
          },
          "additionalWithholding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountData"
            },
            "description": "The additional amount withheld from the payment as defined by the payer (in the payment currency).",
            "nullable": true
          },
          "estimatedProviderFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountData"
            },
            "description": "Additional fees that may be required by the provider for non-scheduled payments.",
            "nullable": true
          },
          "fundsRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmountData"
            },
            "description": "The amount of funds required for the payment of the current batch.",
            "nullable": true
          },
          "outstandingPaymentsAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "Total amount of payments previously submitted for payment and not yet paid.",
            "nullable": true
          },
          "paymentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The total payable amount in payment instructions minus any withholding and additional withholding.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeCreateInput": {
        "required": ["refCode"],
        "type": "object",
        "properties": {
          "refCode": {
            "minLength": 1,
            "type": "string",
            "description": "The payee's unique reference code provided by the payer."
          },
          "preferredPayerEntityId": {
            "type": "string",
            "description": "The unique identifier of the payer entity assigned to the payee.",
            "nullable": true
          },
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eInputPayeeEntityType"
              }
            ],
            "nullable": true
          },
          "contactInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactInformationModel"
              }
            ],
            "description": "The payee's contact information.",
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResourceValuesInputModel"
            },
            "description": "Represents the input model for custom field resource values.\nValues can be selected from a closed values list using their IDs or provided as free text.\nEither the ValuesIds or Value property must have a value.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the payee in Tipalti.",
            "nullable": true
          },
          "refCode": {
            "type": "string",
            "description": "The payee's unique reference code provided by the payer.\nAcross Tipalti system, refCode may be also referred to as IDAP or Payee ID.",
            "nullable": true
          },
          "preferredPayerEntityId": {
            "type": "string",
            "description": "The unique identifier of the payer entity assigned to the payee.\nThis ID is provided by the payer.",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ePayeeStatus"
              }
            ],
            "nullable": true
          },
          "statusChangeDateTimeUTC": {
            "type": "string",
            "description": "The timestamp of the payee's latest status change in UTC time zone, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO 8601</a> standard.",
            "format": "date-time",
            "nullable": true
          },
          "statusReason": {
            "type": "string",
            "description": "The reason for the payee's latest status change.\nReasons can be set manually by the payer or automatically by the system.",
            "nullable": true
          },
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ePayeeEntityType"
              }
            ],
            "nullable": true
          },
          "isAccountClosed": {
            "type": "boolean",
            "description": "Indicates whether this payee account is closed.\nClosed accounts are not deleted from the system and can be displayed in certain searches. These accounts are uneditable."
          },
          "isPayable": {
            "type": "boolean",
            "description": "Indicates whether the payee is currently payable.\nFor more information see <a href=\"https://support.tipalti.com/Content/Topics/UserGuide/Payees/SearchPayeeInfo.htm?_ga=2.125527884.794395808.1683446562-1954050199.1683446562#UnpayableReasons  \" target=\"_blank\">Unpayable reasons</a>."
          },
          "lastChangeDateTimeUTC": {
            "type": "string",
            "description": "The timestamp of the payee's latest change in UTC time zone, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO 8601</a> standard.",
            "format": "date-time",
            "nullable": true
          },
          "contactInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactInformationModel"
              }
            ],
            "description": "The payee's contact information.",
            "nullable": true
          },
          "paymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodModel"
              }
            ],
            "description": "The payee's payment method information.",
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResourceValuesModel"
            },
            "description": "The payee's custom fields values.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The payee resource's schema"
      },
      "PayeeModelResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of payees that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayeeModel"
            },
            "description": "A list of payees.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayeeUpdateInputModel": {
        "type": "object",
        "properties": {
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eInputPayeeEntityType"
              }
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eUpdatePayeeStatus"
              }
            ]
          },
          "statusReason": {
            "type": "string",
            "description": "The reason for the payee's latest status change. Reasons can be set manually by the payer or automatically by the system.",
            "nullable": true
          },
          "isAccountClosed": {
            "type": "boolean",
            "description": "Indicates whether this payee account is closed. Closed accounts are not deleted from the system and can be displayed in certain searches. These accounts are uneditable.",
            "nullable": true
          },
          "contactInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactInformationModel"
              }
            ],
            "description": "The payee's contact information."
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResourceValuesInputModel"
            },
            "description": "The input model for custom field resource values.\nValues can be selected from a closed values list using their IDs or provided as free text.\nTo update a customFieldValue, provide the new value or valuesIds, not both.\nTo delete a customFieldValue,  send only the customFieldId (omit value/valueIds)."
          }
        },
        "additionalProperties": false
      },
      "PayerEntityModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the payer entity in Tipalti.",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "description": "The name of the payer entity.",
            "nullable": true
          },
          "legalName": {
            "type": "string",
            "description": "The legal name of the payer entity, as officially registered.",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicates whether the payer entity is the default entity of the payer."
          },
          "brandName": {
            "type": "string",
            "description": "The name of the payer entity displayed to the payee.",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The ID of the payer entity in the payer's ERP.",
            "nullable": true
          },
          "incomeTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The <a href=\"/docs/income-types \" target=\"_blank\">income types</a> associated with the payer entity.\nOnly applicable to payer entities collecting W8 tax forms. If null, indicates that the payer entity has no income type associated with it.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Payer Entity resource's schema"
      },
      "PayerEntityModelResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of payer entities that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayerEntityModel"
            },
            "description": "A list of payer entities.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentInstructionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the payment in Tipalti.",
            "nullable": true
          },
          "refCode": {
            "type": "string",
            "description": "The reference code of the payment sent by the payer.",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "description": "The unique identifier of the payee receiving the payment",
            "nullable": true
          },
          "amountSubmitted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The amount submitted for payment.",
            "nullable": true
          },
          "scheduledDate": {
            "type": "string",
            "description": "The date and time the payment is scheduled to be made, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601#Dates \" target=\"_blank\">ISO 8601</a> format standard.",
            "format": "date-time",
            "nullable": true
          },
          "instructionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eInstructionStatus"
              }
            ],
            "description": "Status of the uploaded instruction.\nSee <a href=\"/docs/statuses#payment-batchs-upload-status \" target=\"_blank\">Payment batch's instruction status</a> for more information."
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertApiModel"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentInstructionResponseResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of payment instructions that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInstructionResponse"
            },
            "description": "A list of payment instructions.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentLineModel": {
        "required": ["amountSubmitted", "payeeId", "refCode"],
        "type": "object",
        "properties": {
          "payeeId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the payee receiving the payment."
          },
          "amountSubmitted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The amount submitted for payment."
          },
          "refCode": {
            "minLength": 1,
            "type": "string",
            "description": "The payment's unique reference code provided by the payer."
          },
          "scheduledDate": {
            "type": "string",
            "description": "The date and time the payment is scheduled to be made, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601#Dates \" target=\"_blank\">ISO 8601</a> format standard including a trailing Z offset.\nIf NULL is retrieved, the payment is due immediately.",
            "format": "date-time",
            "nullable": true
          },
          "isVisibleToPayeeWhenScheduled": {
            "type": "boolean",
            "description": "Indicates whether the payee can view the scheduled payment's information in the iFrame or Tipalti Hub.",
            "nullable": true
          },
          "isThresholdIgnored": {
            "type": "boolean",
            "description": "In a case where the payment exceeds or doesn't meet the threshold, indicates whether the system ignores the payment threshold and executes the payment.",
            "nullable": true
          },
          "isMaxWithholdingApplied": {
            "type": "boolean",
            "description": "In a case where the payee is unpayable due to an incomplete tax form, indicates whether the system will process a payment with the max withholding applicable to the relevant tax form.",
            "nullable": true
          },
          "isTaxValidationIgnored": {
            "type": "boolean",
            "description": "If TIN (Tax identification number) validation is enabled and this field is set to TRUE, the result of the TIN validation is ignored.",
            "nullable": true
          },
          "eWalletMessage": {
            "type": "string",
            "description": "The payment's e-wallet message attached to the payment by the payer.",
            "nullable": true
          },
          "bankingMessage": {
            "type": "string",
            "description": "The payment's banking message attached to the payment by the payer.",
            "nullable": true
          },
          "emailMessage": {
            "type": "string",
            "description": "If provided, it overrides the email subject line defined in the \"Payment - Paid\" email template, otherwise, the eWalletMessage is used.",
            "nullable": true
          },
          "incomeType": {
            "type": "string",
            "description": "The income type per payment.\nThis is required when there are multiple income types per payment.",
            "nullable": true
          },
          "additionalWithholding": {
            "type": "number",
            "description": "The additional percentage to be withheld from payments.\nUse only if an additional withholding module, such as State Withholding is supported.",
            "format": "double",
            "nullable": true
          },
          "usSource": {
            "type": "number",
            "description": "Relevant for Royalties income type, indicates the percentage of the payment that is U.S.-sourced and upon which withholding application will apply.",
            "format": "double",
            "nullable": true
          },
          "payingEntityId": {
            "type": "string",
            "description": "The unique identifier of the payer entity who's sending the payment.\n**Note:** for payer entities with tax flows, the paying entity is the default payer entity, and it can't be changed.",
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldPaymentInputModel"
            },
            "description": "The payment's custom fields values.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PublicAPI- payments batch request model"
      },
      "PaymentMethodModel": {
        "type": "object",
        "properties": {
          "paymentMethodType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ePaymentMethodType"
              }
            ],
            "description": "The payee's selected payment method.\nSee <a href=\"/docs/payment-methods \" target=\"_blank\">Payment methods</a> for more information."
          },
          "currency": {
            "type": "string",
            "description": "The payee's selected payment currency, as per <a href=\"https://en.wikipedia.org/wiki/ISO_4217 \" target=\"_blank\">ISO 4217</a> standard.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The payee's payment method"
      },
      "PaymentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the payment in Tipalti.",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "description": "The payment batch's unique identifier generated by Tipalti.",
            "nullable": true
          },
          "payeeId": {
            "type": "string",
            "description": "The unique identifier of the payee receiving the payment.",
            "nullable": true
          },
          "payerEntityId": {
            "type": "string",
            "description": "The unique identifier of the payer entity sending the payment.",
            "nullable": true
          },
          "refCode": {
            "type": "string",
            "description": "The payment's unique reference code provided by the payer.",
            "nullable": true
          },
          "providerTransactionRefCode": {
            "type": "string",
            "description": "The reference code of the payment as defined by the provider.",
            "nullable": true
          },
          "eWalletMessage": {
            "type": "string",
            "description": "The payment's e-wallet message attached to the payment by the payer.",
            "nullable": true
          },
          "bankingMessage": {
            "type": "string",
            "description": "The payment's banking massage attached to the payment by the payer.",
            "nullable": true
          },
          "emailSubject": {
            "type": "string",
            "description": "The email subject of the message attached to the payment by the payer.",
            "nullable": true
          },
          "submissionDate": {
            "type": "string",
            "description": "The date and time the payment was submitted to Tipalti, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO 8601</a> standard.",
            "format": "date-time",
            "nullable": true
          },
          "scheduledDate": {
            "type": "string",
            "description": "The date and time the payment is scheduled to be made, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO 8601</a> standard.",
            "format": "date-time",
            "nullable": true
          },
          "valueDate": {
            "type": "string",
            "description": "The provider's estimated date and time that the payment will reach the payee, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO 8601</a> standard.",
            "format": "date-time",
            "nullable": true
          },
          "transactionCompletionDate": {
            "type": "string",
            "description": "The date and time the payment is finalized according to the provider, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601 \" target=\"_blank\">ISO 8601</a> standard including a trailing Z offset.",
            "format": "date-time",
            "nullable": true
          },
          "paymentMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ePaymentMethod"
              }
            ],
            "description": "The payee's selected payment method.\nSee <a href=\"/docs/payment-methods \" target=\"_blank\">Payment methods</a> for more information."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ePaymentStatus"
              }
            ],
            "description": "The payment's current status.\nSee <a href=\"/docs/statuses#payments-status \" target=\"_blank\">Payment's status</a> for more information."
          },
          "payeePaidAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The amount paid to the payee in the payment currency.",
            "nullable": true
          },
          "payerWithdrawAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The total amount deducted, by Tipalti, from the payer account.",
            "nullable": true
          },
          "amountSubmitted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The amount submitted for payment.",
            "nullable": true
          },
          "payeeReceivedAmountInPayerAccountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The amount (in the payer's account currency) paid to the payee.\nThis amount includes foreign exchange fees if applicable.",
            "nullable": true
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeData"
            },
            "description": "An array of all the payment's fee information.",
            "nullable": true
          },
          "exchangeRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExchangeRateData"
            },
            "description": "An array of all the payment's exchange rate information.",
            "nullable": true
          },
          "tax": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxData"
              }
            ],
            "description": "The payment's tax information.",
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldPaymentValuesModel"
            },
            "description": "The payment's custom fields values.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentModelResourceApiPage": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total number of payments that matched the query.",
            "format": "int32"
          },
          "pageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PageApiInfo"
              }
            ],
            "description": "The pagination details.\nIt indicates whether there is a next page and the page cursor location.\nSee <a href=\"/reference/pagination-1 \" target=\"_blank\">Pagination</a> for more information.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentModel"
            },
            "description": "A list of payments.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentsBatchSummaryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the payment batch in Tipalti.",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ePaymentUploadStatus"
              }
            ],
            "description": "Indicates the upload status of the batch.\nFor more information see <a href=\"/docs/statuses#payment-batchs-upload-status \" target=\"_blank\">Payment batch upload status</a>."
          },
          "name": {
            "type": "string",
            "description": "The name of the batch displayed for the payer.",
            "nullable": true
          },
          "submissionDateTime": {
            "type": "string",
            "description": "The date and time the batch was submitted to Tipalti, as per <a href=\"https://en.wikipedia.org/wiki/ISO_8601#Dates \" target=\"_blank\">ISO 8601</a> format standard.",
            "format": "date-time",
            "nullable": true
          },
          "isValidForSubmission": {
            "type": "boolean",
            "description": "Indicates whether the batch can be submitted to Tipalti systems."
          },
          "fundsProvidersSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundsProviderSummaryApiData"
            },
            "description": "A summary of the payments per payer's funding account.",
            "nullable": true
          },
          "exchangeRateCautionBufferPercentage": {
            "type": "number",
            "description": "A percentage added on top of the exchange rate when the actual exchange rate used by the bank is higher than the actual rate charged.",
            "format": "double"
          },
          "paymentsBatchErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            },
            "description": "The error message displayed to the payer when the payment batch upload status is **FAILURE**.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PublicAPI response for getting batch payments summary"
      },
      "TaxData": {
        "type": "object",
        "properties": {
          "region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/eRegion"
              }
            ],
            "description": "Indicates the tax jurisdiction.\nFor EU/ UK region, tax info is currently not available."
          },
          "usTaxInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/USTaxData"
              }
            ],
            "description": "US tax details.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "USTaxData": {
        "type": "object",
        "properties": {
          "withholdingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountData"
              }
            ],
            "description": "The amount withheld from the payment (in the payment currency).",
            "nullable": true
          },
          "taxWithholdingRate": {
            "type": "number",
            "description": "The withholding rate percentage.\nFormat example: 0.578 (means 57.8%).",
            "format": "double",
            "nullable": true
          },
          "treatyCountryCode": {
            "type": "string",
            "description": "The treaty country code entered on the payee tax form, as per <a href=\"https://en.wikipedia.org/wiki/ISO_3166-2 \" target=\"_blank\">ISO 3166-2</a> standard.",
            "nullable": true
          },
          "incomeTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The income short name associated with the <a href=\"/docs/income-types \" target=\"_blank\">income type</a>.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "eCustomFieldAttributeType": {
        "enum": [
          "SUB_RESOURCE",
          "TEXT_FIELD_FORMAT",
          "IS_MANDATORY",
          "INTERNAL_VALUE"
        ],
        "type": "string",
        "description": "The attribute's name."
      },
      "eCustomFieldResource": {
        "enum": [
          "PAYMENT",
          "PAYEE",
          "INVOICE",
          "PURCHASE_ORDER",
          "INTERNAL_VALUE"
        ],
        "type": "string"
      },
      "eEntityType": {
        "enum": ["PAYEE", "PAYER", "INTERNAL_VALUE"],
        "type": "string",
        "description": "The type of entity being charged with the related fee."
      },
      "eExchangeRateType": {
        "enum": [
          "SUBMITTED_CURRENCY_TO_PAYEE_CURRENCY",
          "SUBMITTED_CURRENCY_TO_PAYER_ACCOUNT_CURRENCY",
          "INTERNAL_VALUE"
        ],
        "type": "string",
        "description": "The exchange rate's type.<li><b>SUBMITTED_CURRENCY_TO_PAYEE_CURRENCY</b> - The rate for converting the payment currency to the currency requested by the payee.</li><li><b>SUBMITTED_CURRENCY_TO_PAYER_ACCOUNT_CURRENCY</b> - The rate for converting the payment currency to the currency defined in the payer account.</li><li><b>INTERNAL_VALUE</b> - Represents several possible internal values. For more information, contact Tipalti support.</li>"
      },
      "eFeeType": {
        "enum": [
          "FX",
          "TRANSACTION",
          "PROVIDER",
          "LIFTING",
          "NET_NOW",
          "INTERNAL_VALUE"
        ],
        "type": "string",
        "description": "The type of fee applied to the payment.<li><b>FX</b> - The fee applied for a currency conversion.</li><li><b>TRANSACTION</b> - The transaction fee.</li><li><b>PROVIDER</b> - The payment provider's processing fee.</li><li><b>LIFTING</b> - The transaction fee applied to the recipient by the recipient's bank or an intermediary bank, when cash is transferred through a wire transfer.</li><li><b>NET_NOW</b> - The fee charged for a net now transaction.</li><li><b>INTERNAL_VALUE</b> - Represents several possible internal values. For more information, contact Tipalti support.</li>"
      },
      "eInputPayeeEntityType": {
        "enum": ["INDIVIDUAL", "COMPANY"],
        "type": "string",
        "description": "The type of payee.\nSee <a href=\"/docs/entity-types \" target=\"_blank\">Entity types</a> for more information."
      },
      "eInstructionStatus": {
        "enum": ["OK", "WARNING", "ERROR"],
        "type": "string",
        "description": "Status of the uploaded instruction.\nSee <a href=\"/docs/statuses#payment-batchs-upload-status \" target=\"_blank\">Payment batch's instruction status</a> for more information."
      },
      "ePayeeEntityType": {
        "enum": ["INDIVIDUAL", "COMPANY", "INTERNAL_VALUE"],
        "type": "string",
        "description": "The type of payee.\nSee <a href=\"/docs/entity-types \" target=\"_blank\">Entity types</a> for more information."
      },
      "ePayeeStatus": {
        "enum": [
          "ACTIVE",
          "BLOCKED",
          "SUSPENDED",
          "BLOCKED_BY_TIPALTI",
          "INTERNAL_VALUE"
        ],
        "type": "string",
        "description": "The payee's current status.\nSee <a href=\"/docs/statuses#payees-status \" target=\"_blank\">Payee's status</a> for more information."
      },
      "ePaymentAlertType": {
        "enum": ["ERROR", "WARNING"],
        "type": "string",
        "description": "The type of payment alert.<li><b>ERROR</b> - There is an issue with the payment that prevents it from being processed.</li><li><b>WARNING</b> - There is an issue with the payment, but it will still be processed.</li>"
      },
      "ePaymentMethod": {
        "enum": [
          "NO_PAYMENT_METHOD",
          "PAY_PAL",
          "WIRE_TRANSFER",
          "PAYONEER",
          "ACH",
          "CHECK",
          "E_CHECK",
          "HOLD_MY_PAYMENTS",
          "CUSTOM",
          "INTERCASH",
          "INTERNAL_VALUE"
        ],
        "type": "string",
        "description": "The payee's selected payment method.\nSee <a href=\"/docs/payment-methods \" target=\"_blank\">Payment methods</a> for more information."
      },
      "ePaymentMethodType": {
        "enum": [
          "NO_PAYMENT_METHOD",
          "PAYPAL",
          "WIRE_TRANSFER",
          "ACH",
          "CHECK",
          "E_CHECK",
          "HOLD_MY_PAYMENTS",
          "CUSTOM",
          "INTERCASH",
          "INTERNAL_VALUE"
        ],
        "type": "string",
        "description": "The payee's selected payment method.\nSee <a href=\"/docs/payment-methods \" target=\"_blank\">Payment methods</a> for more information."
      },
      "ePaymentStatus": {
        "enum": [
          "PAID",
          "REJECTED",
          "SCHEDULED",
          "SUBMITTED",
          "DEFERRED",
          "DEFERRED_INTERNAL",
          "CANCELED",
          "CLEARED",
          "FRAUD_REVIEW",
          "PENDING_PAYER_FUNDS",
          "INTERNAL_VALUE"
        ],
        "type": "string",
        "description": "The payment's current status.\nSee <a href=\"/docs/statuses#payments-status \" target=\"_blank\">Payment's status</a> for more information."
      },
      "ePaymentUploadStatus": {
        "enum": [
          "QUEUED",
          "ANALYZING",
          "AWAITING_USER_SUBMISSION",
          "SUBMITTING",
          "SUBMITTED",
          "CANCELED",
          "FAILURE"
        ],
        "type": "string",
        "description": "Indicates the upload status of the batch.\nFor more information see <a href=\"/docs/statuses#payment-batchs-upload-status \" target=\"_blank\">Payment batch upload status</a>."
      },
      "eRegion": {
        "enum": ["US", "INTERNAL_VALUE"],
        "type": "string",
        "description": "Indicates the tax jurisdiction.\nFor EU/ UK region, tax info is currently not available."
      },
      "eUpdatePayeeStatus": {
        "enum": ["ACTIVE", "BLOCKED", "SUSPENDED"],
        "type": "string",
        "description": "The payee's current status.\nSee <a href=\"/docs/statuses#payees-status \" target=\"_blank\">Payee's status</a> for more information."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Bearer prefix will be added automatically",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "AppEcoSystem Invoices Public API",
      "tags": ["GL accounts", "Invoice batches", "Invoices", "Tax codes"]
    },
    {
      "name": "AppEcoSystem Public API",
      "tags": [
        "Custom fields",
        "Payees",
        "Payer entities",
        "Payment batches",
        "Payments"
      ]
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": true,
    "samples-enabled": true
  },
  "servers": [
    {
      "url": "https://api-p.tipalti.com"
    }
  ]
}

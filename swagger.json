{
  "openapi": "3.0.1",
  "info": {
    "title": "Brooklyn Client Ref",
    "version": "1.2.0",
    "description": "Client API endpoints for the Synamedia Brooklyn Video Platform"
  },
  "servers": [
    {
      "url": "http://mocksvc.mulesoft.com/mocks/98ab62f4-7247-4d92-b0a1-5cacd9c75035/mocks/cd12e66f-f17e-4a23-a324-5ecde44a79a4/mocks/48d69949-b4c5-4eb4-a7c9-39794d76ed36"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Retrieve the version of the API",
        "operationId": "GET_root",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "apiVersion"
                  ],
                  "x-examples": {
                    "example-1": {
                      "apiVersion": "0.2.0"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/customization": {
      "get": {
        "description": "This API is deprecated. The 3 new APIs resources/initial + shared/resources/uisettings and shared/resources/dictionary should be used instead.\nGet a set of UI configurations to be applied in the app. These are app configs, hosted in the server.\nRelevant only for Synamedia apps.\nThis shall be the first call that the application makes to the refAPI.\nThe response may contain httpCookies which should then be passed to every subsequent refAPI invocation.\nTherefore all subsequent app-boot calls to ctap must be sent out only after the response to this call has been received.\n",
        "operationId": "GET_resources-customization",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "clientDictionaryDate",
            "in": "query",
            "description": "When given, and when the feature is enabled in server-side configuration, the set of dictionary keys + values to be used in the app will be included in the response (see the 'dictionary' field of the response schema). The language of the dictionary in the response is set according to the given language header. If there is no dictionary available for the requested language, no dictionary will be set in the response. This should be a ISO 8601 compliant UTC date time indicating the latest timestamp of the dictionary for this language currently stored in client persistent storage. It should be set according to the value of the dictionary->updateDate field from the previous resources/customization dictionary response for this language. Can be set to 0 in order to force dictionary retrieval, or when no dictionary has yet been stored for the current language.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "resourceType": "configuration",
                    "uiConfigurations": {
                      "uiSchema": "productK",
                      "TABLET": {
                        "onVideo": {
                          "unfocusColor": "#ffffffff",
                          "progressBar": {
                            "foregroundColor": "#ffffffff",
                            "backgroundColor": "#FF3C3C3C",
                            "cursorColor": "#ffffffff"
                          },
                          "button": {
                            "foregroundColor": "#ffffffff",
                            "backgroundColor": "#00000000",
                            "foregroundColorSelected": "#ff000000",
                            "backgroundColorSelected": "#ffffffff"
                          },
                          "dimmerTransparencyLevel": 0.5
                        },
                        "onStatusBar": {
                          "unfocusColor": "#B3EBEBEB",
                          "focusColor": "#FFEBEBEB",
                          "background": {
                            "colorFrom": "#ff000000",
                            "colorTo": "#ff000000",
                            "orientation": "horizontal"
                          }
                        },
                        "onPopup": {
                          "unfocusColor": "#90EBEBEB",
                          "pressColor": "#FFEBEBEB",
                          "background": {
                            "colorFrom": "#FF424242",
                            "colorTo": "#FF424242",
                            "orientation": "horizontal"
                          }
                        },
                        "popupMenu": {
                          "foregroundColor": "#ffebebeb",
                          "backgroundColor": "#ffffffff",
                          "backgroundColorSelected": "#ff646464"
                        },
                        "gestures": {
                          "zappingDirection": "natural"
                        },
                        "logo": {
                          "url": "http://appivps3.s3-ap-south-1.amazonaws.com/Appdata/CD/application_logo.png",
                          "positionX": 48,
                          "positionY": 13,
                          "width": 64,
                          "height": 34,
                          "display": "YES",
                          "usePosition": true
                        },
                        "font_config": {
                          "fonts": [
                            {
                              "languages": [
                                "en",
                                "de",
                                "fr",
                                "ru",
                                "pt"
                              ],
                              "font-family": "Roboto",
                              "weights": {
                                "Lt": "file://Roboto-Light.ttf",
                                "Rg": "file://Roboto-Regular.ttf",
                                "Md": "file://Roboto-Medium.ttf",
                                "Bd": "file://Roboto-Bold.ttf",
                                "Blk": "file://Roboto-Black.ttf",
                                "Icons": "file://IVPIcons-Regular.ttf",
                                "BdIt": "file://Roboto-BoldItalic.ttf",
                                "BlkIt": "file://Roboto-BoldItalic.ttf",
                                "MdIt": "file://Roboto-ThinItalic.ttf",
                                "Input": "file://Roboto-Light.ttf"
                              }
                            },
                            {
                              "languages": [
                                "he",
                                "iw",
                                "ar"
                              ],
                              "font-family": "Noto Sans",
                              "weights": {
                                "Lt": "file://NotoSans-Light.ttf",
                                "Rg": "file://NotoSans-Regular.ttf",
                                "Md": "file://NotoSans-Medium.ttf",
                                "Bd": "file://NotoSans-Bold.ttf",
                                "Blk": "file://NotoSans-Black.ttf",
                                "Icons": "file://IVPIcons-Regular.ttf",
                                "BdIt": "file://NotoSans-BoldItalic.ttf",
                                "BlkIt": "file://NotoSans-BlackItalic.ttf",
                                "MdIt": "file://NotoSans-MediumItalic.ttf",
                                "Input": "file://NotoSans-Light.ttf"
                              }
                            }
                          ]
                        },
                        "menuConfiguration": {
                          "settingsMenuItems": [
                            "PREFERENCES",
                            "DEVICE_MANAGEMENT",
                            "MY_DEVICES",
                            "HELP",
                            "LOGOUT"
                          ],
                          "filterMenuItems": {
                            "LIBRARY": [
                              "MOVIES_AND_SHOW",
                              "NEXT_TO_SEE",
                              "RENTALS",
                              "SERIES_RECORDINGS",
                              "MANAGE_RECORDINGS",
                              "WATCHLIST",
                              "MY_DOWNLOADS"
                            ],
                            "STORE": [
                              "PROMOTION",
                              "FOR_YOU"
                            ],
                            "TELEVISION": [
                              "PROMOTION",
                              "FOR_YOU",
                              "MOST_POPULAR",
                              "FAVORITE_CHANNELS",
                              "ON_AIR"
                            ]
                          },
                          "hubTopItems": [
                            "TELEVISION",
                            "LIBRARY",
                            "STORE",
                            "GUIDE",
                            "SETTINGS"
                          ]
                        },
                        "guideConfiguration": {
                          "guideDaysCount": {
                            "guideForwardGridDaysCount": 7,
                            "guideReverseGridDaysCount": 7
                          },
                          "progIndicatorBackgroundGradient": {
                            "colorFrom": "#ff7DC145",
                            "colorTo": "#ff00A79C",
                            "color3": "#ff244D9D"
                          },
                          "gridCellCurrentBackgroundGradient": {
                            "colorFrom": "#803E3E3E",
                            "colorTo": "#803E3E3E"
                          },
                          "gridCellBackgroundGradient": {
                            "colorFrom": "#803E3E3E",
                            "colorTo": "#803E3E3E"
                          },
                          "channelCellBackgroundGradient": {
                            "colorFrom": "#FF323232",
                            "colorTo": "#ff7DC145"
                          },
                          "gridCellTitleColors": {
                            "unfocusColor": "#99FFFFFF"
                          },
                          "gridCellIconColors": {
                            "unfocusColor": "#80FFFFFF"
                          },
                          "gridCellSeparatorColors": {
                            "unfocusColor": "#FF000000"
                          },
                          "channelCellNumberColors": {
                            "unfocusColor": "#FFFFFFFF"
                          },
                          "channelCellIconColors": {
                            "unfocusColor": "#FFFFFFFF"
                          },
                          "timeHeaderTextColors": {
                            "unfocusColor": "#99FFFFFF"
                          }
                        },
                        "onSearch": {
                          "searchField": {
                            "searchFieldHeight": [
                              36,
                              40
                            ],
                            "searchFieldLeadingSpace": [
                              16,
                              126
                            ],
                            "searchFieldTrailingSpace": [
                              80,
                              126
                            ],
                            "searchBorderWidth": 0
                          },
                          "searchResultsCell": {
                            "searchResultsCellHeight": [
                              53,
                              41
                            ]
                          }
                        },
                        "onZapList": {
                          "container": {
                            "background": {
                              "colorFrom": "#FF000000",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "logo": {
                            "background": {
                              "colorFrom": "#FF323232",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "itemExpanded": {
                            "background": {
                              "colorFrom": "#FF1F1F1F",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "itemCollapsed": {
                            "background": {
                              "colorFrom": "#ff1F1F1F",
                              "colorTo": "#FF2a2e3b",
                              "orientation": "vertical"
                            }
                          },
                          "zapListProgressBar": {
                            "foregroundColor": "#FF323232",
                            "backgroundBefore": "#ff1F1F1F",
                            "backgroundAfter": "#406f6e6e",
                            "cursor": "#ff1f212d"
                          }
                        },
                        "settings": {
                          "headerview": {
                            "backgroundColor": "#803E3E3E",
                            "background": {
                              "colorFrom": "#00000000",
                              "colorTo": "#00000000",
                              "orientation": "vertical"
                            },
                            "borderColor": "#33979797",
                            "titleColor": "#ffffffff",
                            "backTitleColor": "#ffEBEBEB",
                            "menuTitleColor": "#ffffffff"
                          },
                          "menu": {
                            "menuItem": {
                              "unfocusColor": "#B3EBEBEB",
                              "focusColor": "#FFEBEBEB"
                            },
                            "focus": {
                              "foregroundColor": "#ffffffff",
                              "backgroundColor": "#ff3E3E3E"
                            },
                            "unfocus": {
                              "foregroundColor": "#ffffffff",
                              "backgroundColor": "#00000000"
                            },
                            "backgroundColor": "#803E3E3E",
                            "background": {
                              "colorFrom": "#803E3E3E",
                              "colorTo": "#803E3E3E",
                              "orientation": "vertical"
                            },
                            "headerview": {
                              "background": {
                                "colorFrom": "#00000000",
                                "colorTo": "#00000000",
                                "orientation": "vertical"
                              }
                            },
                            "verticalBorderColor": "#33979797"
                          },
                          "submenu": {
                            "titleColor": "#ffffffff",
                            "subTitleColor": "#B3ffffff",
                            "optionColor": "#B3EBEBEB",
                            "seperatorColor": "#33979797",
                            "button": {
                              "borderColor": "#00000000",
                              "backgroundColor": "#1Affffff",
                              "borderWidth": 1
                            },
                            "backgroundColor": "#803E3E3E",
                            "background": {
                              "colorFrom": "#803E3E3E",
                              "colorTo": "#803E3E3E",
                              "orientation": "vertical"
                            },
                            "focus": {
                              "foregroundColor": "#ffffffff",
                              "switchActiveColor": "#ff4CD964"
                            },
                            "unfocus": {
                              "foregroundColor": "#4Dffffff"
                            }
                          },
                          "termsandcondition": {
                            "titleColor": "#ff030303",
                            "dividerColor": "#BF4D4D4D",
                            "backgroundColor": "#80ffffff",
                            "button": {
                              "unfocus": {
                                "foregroundColor": "#ff007AFF"
                              }
                            }
                          },
                          "pinPopUp": {
                            "backgroundColor": "#ffF7F7F7",
                            "keyboardBackGroundColor": "#E6D2D5DB"
                          }
                        },
                        "onFrame": {
                          "unfocusColor": "#B3EBEBEB",
                          "focusColor": "#ffEBEBEB",
                          "progressBar": {
                            "foregroundColor": "#FFEBEBEB",
                            "backgroundColor": "#FF6E6E6E",
                            "cursorColor": "#FFEBEBEB"
                          },
                          "button": {
                            "focus": {
                              "foregroundColor": "#ffebebeb",
                              "backgroundColor": "#1affffff"
                            },
                            "unfocus": {
                              "foregroundColor": "#ffebebeb",
                              "backgroundColor": "#1affffff"
                            },
                            "borderColor": "#00000000",
                            "borderWidth": 0,
                            "cornerRadius": 0,
                            "foregroundColor": "#ffffffff",
                            "backgroundColor": "#ff000000",
                            "foregroundColorSelected": "#ffffffff",
                            "backgroundColorSelected": "#ffffffff"
                          },
                          "recordButton": {
                            "foregroundColor": "#ffd0141b"
                          },
                          "background": {
                            "colorFrom": "#FF101010",
                            "colorTo": "#FF101010",
                            "orientation": "horizontal"
                          },
                          "eventTimeDurationDisplayFormat": "hh:mm"
                        },
                        "fontStyles": [
                          {
                            "id": "Hero_Banner_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "26",
                                "font-color": "#ffffffff"
                              }
                            }
                          },
                          {
                            "id": "Action_Menu_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "24",
                                "font-color": "#ffffffff"
                              }
                            }
                          },
                          {
                            "id": "Panel_Program_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "24",
                                "font-color": "#ffffffff"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Nextepisode_in",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "14",
                                "font-color": "#B3FFFFFF"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Sec",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Bold",
                                "font-weight": "",
                                "font-size": "14",
                                "font-color": "#FFFFFFFF"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Episode",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "17",
                                "font-color": "#FFFFFFFF"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Duration",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "14",
                                "font-color": "#B3EBEBEB"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Parental_Rating",
                            "styles": {
                              "en": {
                                "font-family": "IVPIcons-Regular",
                                "font-weight": "",
                                "font-size": "14",
                                "font-color": "#B3FFFFFF"
                              }
                            }
                          }
                        ],
                        "defaultPoster": {
                          "foregroundColor": "#ffffff",
                          "background": {
                            "colorFrom": "#ff365D63",
                            "colorTo": "#ff1C2E49",
                            "orientation": "vertical"
                          }
                        },
                        "onBingeBanner": {
                          "autoPlaySec": 10
                        },
                        "menu": {
                          "background": {
                            "linear-gradient": {
                              "color": [
                                "#00000000",
                                "#00000000"
                              ],
                              "orientation": "vertical"
                            },
                            "image": [
                              {
                                "resolution": "image resolution",
                                "url": "",
                                "docking-point": "top_left"
                              }
                            ]
                          }
                        },
                        "settingsMenuItem": {
                          "left": "0",
                          "right": "37",
                          "width": "44",
                          "height": "44",
                          "isIcon": "true",
                          "isVisible": "false"
                        },
                        "searchMenuItem": {
                          "left": "0",
                          "right": "91",
                          "width": "44",
                          "height": "44",
                          "isIcon": "true",
                          "isVisible": "false"
                        },
                        "actionButtons": [
                          {
                            "id": "regular",
                            "spacing": 8,
                            "height": 81,
                            "width": 70,
                            "background": {
                              "shape": "rectangle",
                              "color": "#1AFFFFFF"
                            }
                          },
                          {
                            "id": "selected",
                            "spacing": 8,
                            "height": 81,
                            "width": 70,
                            "background": {
                              "shape": "rectangle",
                              "color": "#80FFFFFF"
                            }
                          }
                        ],
                        "radioConfig": {
                          "logoUrl": "",
                          "onRadioPlayer": {
                            "background": {
                              "linear-gradient": {
                                "color": [
                                  "#ff365D63",
                                  "#ff1C2E49"
                                ],
                                "orientation": "vertical"
                              },
                              "image": [
                                {
                                  "url": ""
                                }
                              ]
                            }
                          }
                        },
                        "swimlanes": {
                          "maxNoOFItemsPerSwimlane": 10,
                          "channelPageSwimlaneMaxItems": 10
                        },
                        "channelPageConfig": {
                          "catchupDays": 10,
                          "futureDays": 10
                        }
                      },
                      "PHONE": {
                        "logo": {
                          "url": "http://appivps3.s3-ap-south-1.amazonaws.com/Appdata/CD/application_logo.png",
                          "positionX": 156,
                          "positionY": 7,
                          "width": 56,
                          "height": 30,
                          "display": "YES",
                          "usePosition": true
                        },
                        "hamburgerMenu": {
                          "onHamburgerLogo": {
                            "url": "http://appivps3.s3-ap-south-1.amazonaws.com/Appdata/CD/application_logo.png",
                            "positionX": 24,
                            "positionY": 3,
                            "width": 71,
                            "height": 38,
                            "display": "YES",
                            "usePosition": true
                          }
                        },
                        "menuConfiguration": {
                          "filterMenuItems": {
                            "LIBRARY": [
                              "MOVIES_AND_SHOW",
                              "NEXT_TO_SEE",
                              "SERIES",
                              "MANAGE_RECORDINGS",
                              "WATCHLIST",
                              "MY_DOWNLOADS"
                            ],
                            "STORE": [
                              "PROMOTION",
                              "FOR_YOU"
                            ],
                            "TELEVISION": [
                              "PROMOTION",
                              "FOR_YOU",
                              "MOST_POPULAR",
                              "FAVORITE_CHANNELS",
                              "ON_AIR"
                            ]
                          },
                          "hubTopItems": [
                            "TELEVISION",
                            "LIBRARY",
                            "STORE",
                            "GUIDE",
                            "SETTINGS"
                          ]
                        },
                        "onZapList": {
                          "container": {
                            "background": {
                              "colorFrom": "#FF000000",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "logo": {
                            "background": {
                              "colorFrom": "#FF323232",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "itemExpanded": {
                            "background": {
                              "colorFrom": "#FF202020",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "itemCollapsed": {
                            "background": {
                              "colorFrom": "#ff2B2B2B",
                              "colorTo": "#FF2a2e3b",
                              "orientation": "vertical"
                            }
                          },
                          "zapListProgressBar": {
                            "foregroundColor": "#ff3E3E3E",
                            "backgroundBefore": "#ff2B2B2B",
                            "backgroundAfter": "#406f6e6e",
                            "cursor": "#ff1f212d"
                          }
                        },
                        "settings": {
                          "headerview": {
                            "borderColor": "#00000000",
                            "background": {
                              "colorFrom": "#00000000",
                              "colorTo": "#00000000",
                              "orientation": "vertical"
                            }
                          },
                          "submenu": {
                            "button": {
                              "backgroundColor": "#ff161616"
                            },
                            "background": {
                              "colorFrom": "#803E3E3E",
                              "colorTo": "#803E3E3E",
                              "orientation": "vertical"
                            }
                          },
                          "termsandcondition": {
                            "dividerColor": "#00000000",
                            "button": {
                              "unfocus": {
                                "foregroundColor": "#ff007AFF"
                              }
                            }
                          }
                        },
                        "fontStyles": [
                          {
                            "id": "Hero_Banner_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "20",
                                "font-color": "#ffffffff"
                              }
                            }
                          },
                          {
                            "id": "Action_Menu_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "20",
                                "font-color": "#ffffffff"
                              }
                            }
                          }
                        ]
                      },
                      "STB": {
                        "onFrame": {
                          "unfocusColor": "#66ffffff",
                          "focusColor": "#ffffffff",
                          "unselectableColor": "#ffdcdcdc",
                          "progressBar": {
                            "foregroundColor": "#ffffffff",
                            "backgroundBefore": "#ffc8c8c8",
                            "backgroundAfter": "#ffc8c8c8",
                            "cursor": "#ffffffff"
                          }
                        },
                        "offFrame": {
                          "unfocusColor": "#ffffffff",
                          "focusColor": "#ffffffff",
                          "unselectableColor": "#ffdcdcdc",
                          "progressBar": {
                            "foregroundColor": "#ffffffff",
                            "backgroundBefore": "#ffc8c8c8",
                            "backgroundAfter": "#ffc8c8c8",
                            "cursor": "#ffffffff"
                          }
                        },
                        "menuItem": {
                          "backgroundColorFrom": "#00000000",
                          "backgroundColorTo": "#00000000",
                          "gradientOrientation": "vertical",
                          "foregroundColorFocused": "#ffffffff",
                          "foregroundColorUnfocused": "#ffffffff",
                          "foregroundColorSelected": "#ffffffff",
                          "case": "normal"
                        },
                        "frames": {
                          "colorFrom": "#ff000000",
                          "colorTo": "#ff000000",
                          "verticalFrameGradient": "vertical",
                          "horizontalFrameGradient": "horizontal"
                        },
                        "screenSpecificFontGroups": {
                          "clock": {
                            "offFrame": {
                              "unfocus": {
                                "text": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "filter": {
                            "onFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "freeText": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            },
                            "offFrame": {
                              "focus": {
                                "labelItem": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "labelItem": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "actionmenu": {
                            "onFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "leftMetadata": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "summary": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            },
                            "offFrame": {
                              "focus": {
                                "labelItem": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "labelItem": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "search": {
                            "onFrame": {
                              "focus": {
                                "keyboardChar": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "suggestionItem": {
                                  "case": "lowercase",
                                  "color": "#ffffffff",
                                  "colorSelection": "#ff707070"
                                }
                              },
                              "unfocus": {
                                "keyboardChar": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "suggestionItem": {
                                  "color": "#ffffffff",
                                  "case": "lowercase"
                                }
                              }
                            },
                            "offFrame": {
                              "unfocus": {
                                "inputTextField": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "timeline": {
                            "onFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "timelineLabel": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "channelIcon": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "timelineLabel": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "channelNumbers": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            },
                            "offFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "timelineLabel": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "channelIcon": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "channelNumbers": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "message": {
                            "offFrame": {
                              "focus": {
                                "title": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "action": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "text": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "action": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "trickmode": {
                            "onFrame": {
                              "focus": {
                                "trickmodeIconAndSpeed": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "trickmodeIconAndSpeed": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            },
                            "offFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          }
                        },
                        "logo": {
                          "url": "http://phx-media-server.phx.cisco.com/LTVposters/operator-logo.svg",
                          "height": 50,
                          "width": 86,
                          "positionX": 120,
                          "positionY": 55
                        },
                        "videoFilterStyle": "DIMMER",
                        "dimmerTransparencyLevel": 0.5,
                        "highlightStrategy": "historical",
                        "branding": "KV3"
                      }
                    },
                    "iaConfiguration": {
                      "PHONE": {
                        "hubMenuItems": [
                          {
                            "id": "hubHome",
                            "title": {
                              "dictionaryId": "DIC_MAIN_HUB_HOME"
                            },
                            "icon": {
                              "focus": {
                                "url": "file://iamenuhome.png",
                                "width": 72,
                                "height": 72
                              },
                              "unFocus": {
                                "url": "file://iamenuhome.png",
                                "width": 72,
                                "height": 72
                              }
                            }
                          },
                          {
                            "id": "hubTvShows",
                            "title": {
                              "dictionaryId": "DIC_MAIN_HUB_TV_SHOWS"
                            },
                            "icon": {
                              "focus": {
                                "url": "file://iamenutelevision.png",
                                "width": 72,
                                "height": 72
                              },
                              "unFocus": {
                                "url": "file://iamenutelevision.png",
                                "width": 72,
                                "height": 72
                              }
                            }
                          },
                          {
                            "id": "hubMovies",
                            "title": {
                              "dictionaryId": "DIC_MAIN_HUB_MOVIES"
                            },
                            "icon": {
                              "focus": {
                                "url": "file://iamenupopcornBox.png",
                                "width": 72,
                                "height": 72
                              },
                              "unFocus": {
                                "url": "file://iamenupopcornBox.png",
                                "width": 72,
                                "height": 72
                              }
                            }
                          }
                        ],
                        "swimlaneConfig": {
                          "hubHome": {
                            "items": [
                              {
                                "displayType": "heroBanner",
                                "id": "PROMOTION"
                              },
                              {
                                "displayType": "swimlane",
                                "id": "ON_AIR_BY_EVENT"
                              },
                              {
                                "displayType": "swimlane",
                                "id": "RECENTLY_VIEWED_CHANNELS"
                              },
                              {
                                "displayType": "swimlane",
                                "id": "FOR_YOU"
                              },
                              {
                                "displayType": "swimlane",
                                "id": "COMING_UP"
                              },
                              {
                                "title": {
                                  "dictionaryId": "DIC_HUB_HOME_NEW"
                                },
                                "displayType": "swimlane",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:HOME:New"
                                  }
                                ]
                              }
                            ]
                          },
                          "hubTvShows": {
                            "items": [
                              {
                                "displayType": "heroBanner",
                                "resolution": "16:9",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:TV SHOWS:Featured"
                                  }
                                ]
                              },
                              {
                                "displayType": "swimlane",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:TV SHOWS:New"
                                  }
                                ]
                              },
                              {
                                "displayType": "swimlane",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:TV SHOWS:TV Shows Picks"
                                  }
                                ]
                              }
                            ]
                          },
                          "hubMovies": {
                            "items": [
                              {
                                "displayType": "swimlane",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:BOX SETS:Featured"
                                  }
                                ]
                              },
                              {
                                "displayType": "swimlane",
                                "id": "RECENTLY_VIEWED",
                                "filter": {
                                  "genreId": "Movies",
                                  "source": "vod"
                                }
                              },
                              {
                                "displayType": "swimlane",
                                "id": "CHANNELS_FOR_GENRE",
                                "title": {
                                  "dictionaryId": "DIC_FILTER_TV_CHANNELS"
                                },
                                "filter": {
                                  "genreId": "Movies",
                                  "catchupOnly": false
                                }
                              }
                            ]
                          }
                        }
                      },
                      "SMART_TV": {
                        "hubMenuItems": [
                          {
                            "id": "hubHome",
                            "title": {
                              "dictionaryId": "dict.hub.televisionlabel"
                            }
                          },
                          {
                            "id": "hubMovies",
                            "title": {
                              "dictionaryId": "dict.hub.storelabel"
                            }
                          }
                        ],
                        "swimlaneConfig": {
                          "hubHome": {
                            "items": [
                              {
                                "railType": "swimlane16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.recentlyWatched"
                                },
                                "contentType": "api",
                                "displayByEvent": true,
                                "contents": [
                                  {
                                    "url": "/channels/recent?currentChannelFirst=true",
                                    "tileCount": 10,
                                    "assetType": "linear"
                                  }
                                ]
                              },
                              {
                                "railType": "swimlane16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.favorites"
                                },
                                "contentType": "api",
                                "contents": [
                                  {
                                    "url": "/channels?isFavourite=true",
                                    "tileCount": 15,
                                    "assetType": "linear"
                                  }
                                ]
                              },
                              {
                                "railType": "swimlane16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.basicChannels"
                                },
                                "contentType": "api",
                                "contents": [
                                  {
                                    "url": "/channels?limit=13&carousel=true&genreId=Basic",
                                    "tileCount": 12,
                                    "displaySeeAll": true,
                                    "assetType": "linear"
                                  }
                                ]
                              },
                              {
                                "railType": "swimlane16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.seriesChannels"
                                },
                                "contentType": "api",
                                "contents": [
                                  {
                                    "url": "/channels?limit=13&carousel=true&genreId=Series",
                                    "tileCount": 12,
                                    "displaySeeAll": true,
                                    "assetType": "linear"
                                  }
                                ]
                              },
                              {
                                "railType": "swimlane16_9",
                                "contentType": "classification",
                                "contents": [
                                  {
                                    "classification": "92166",
                                    "tileCount": 23,
                                    "seeAllSort": [
                                      "editorial",
                                      "title",
                                      "-date"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "hubMovies": {
                            "items": [
                              {
                                "railType": "hero16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.storelabel.next2see"
                                },
                                "contentType": "api",
                                "contents": [
                                  {
                                    "url": "/agg/library/recent?topLevelFilterTag=Movies&source=vod&limit=24",
                                    "tileCount": 24,
                                    "assetType": "vod"
                                  }
                                ]
                              },
                              {
                                "railType": "hero16_9",
                                "contentType": "classification",
                                "contents": [
                                  {
                                    "classification": "42202",
                                    "tileCount": 23,
                                    "seeAllSort": [
                                      "editorial",
                                      "title",
                                      "-date"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "general": {
                          "defaultChannel": "CH34"
                        }
                      }
                    },
                    "dictionary": {
                      "languageCode": "eng",
                      "updateDate": "2000-01-31T22:00:00.000Z",
                      "languageMap": {
                        "dict.hub.storelabel.filterlabel": "VOD",
                        "dict.federatedActionMenu.playwith": "Play With",
                        "dict.hub.storelabel.filterlinklabel": "Full Catalog",
                        "dict.hub.storelabel.description": "See all",
                        "dict.hub.televisionlabel": "Television",
                        "dict.hub.homelabel": "HOME",
                        "dict.hub.showAllChannels": "All Channels",
                        "dict.hub.channellabel": "Channels",
                        "dict.hub.forYou": "For you",
                        "dict.hub.New": "New",
                        "dict.hub.recordings": "Recent Recordings",
                        "dict.hub.featured": "Featured",
                        "dict.hub.favorites": "Favorite Channels",
                        "dict.hub.becauseYouLike": "Because you like %s",
                        "dict.hub.becauseYouWatched": "Because you watched %s",
                        "dict.hub.watchAgain": "Watch Again",
                        "dict.hub.televisionlabel.filterlabel": "Live",
                        "dict.hub.televisionlabel.filterlinklabel": "TV GUIDE AND MORE",
                        "dict.hub.televisionlabel.description": "See all",
                        "dict.hub.mylibrary": "My Library",
                        "dict.hub.mydevicelibrary": "My Box Library",
                        "dict.hub.librarylabel": "Recordings",
                        "dict.hub.librarylabel.filterlabel": "Recordings",
                        "dict.hub.librarylabel.filterlinklabel": "Next To See",
                        "dict.hub.librarylabel.description": "See all",
                        "dict.hub.toplist": "Top List",
                        "dict.hub.tv.guide.allchannel": "All Channels",
                        "dict.hub.tv.guide.sportChannels": "Sports",
                        "dict.hub.tv.guide.moviesChannels": "Movies",
                        "dict.hub.tv.guide.favoriteChannels": "Favorite channels",
                        "dict.hub.tv.guide.entertainmentChannels": "Entertainment",
                        "dict.hub.tv.guide.kidsChannels": "Kids",
                        "dict.hub.tv.guide.newsChannels": "News",
                        "dict.hub.tv.guide.allchannel.info": "Next 14 Days Programs",
                        "dict.hub.tv.guide.sportChannels.info": "Next 14 Days Programs",
                        "dict.hub.tv.guide.moviesChannels.info": "Next 14 Days Programs",
                        "dict.hub.tv.guide.favoriteChannels.info": "Next 14 Days Programs",
                        "dict.hub.tv.guide.entertainmentChannels.info": "Next 14 Days Programs",
                        "dict.hub.tv.guide.kidsChannels.info": "Next 14 Days Programs",
                        "dict.hub.tv.guide.newsChannels.info": "Next 14 Days Programs",
                        "dict.hub.tv.guide.generalChannels": "General Channels",
                        "dict.hub.tv.guide.hdChannels": "HD Channels",
                        "dict.hub.tv.guide.publicChannels": "Public Channels",
                        "dict.hub.tv.guide.filmChannels": "Film Channels",
                        "dict.hub.tv.guide.childrenChannels": "Children Channels",
                        "dict.hub.tv.guide.musicChannels": "Music Channels",
                        "dict.hub.tv.guide.informationChannels": "Information Channels",
                        "dict.hub.tv.guide.familyMovieChannels": "Family Movie Channels",
                        "dict.hub.tv.guide.kidsMovieChannels": "Kids Movie Channels",
                        "dict.hub.tv.guide.documentaryChannels": "Documentary Channels",
                        "dict.hub.tv.guide.lifeStyleChannels": "Lifestyle Channels",
                        "dict.hub.tv.guide.newsBusinessChannels": "Business News Channels"
                      }
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/resources/initial": {
      "get": {
        "description": "Get personal and general information that is needed by the client for its boot sequence.\nRelevant only for Synamedia apps.\nThis shall be the first call that the application makes to the refAPI and it replaces the call to /resources/customization\nThe response may contain httpCookies which should then be passed to every subsequent refAPI invocation.\nTherefore all subsequent app-boot calls to ctap must be sent out only after the response to this call has been received.\n",
        "operationId": "GET_resources-initial",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "isByoux",
            "in": "query",
            "description": "If BYOUX clients want to use the resources/initial API in order to fetch much of the data that is required during client boot in a single call they must supply this queryParam with the value true.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "household",
                    "platform",
                    "tokens"
                  ],
                  "type": "object",
                  "properties": {
                    "tokens": {
                      "type": "string",
                      "description": "client token for shared APIs"
                    },
                    "authorization": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "object",
                      "properties": {},
                      "description": "platform related data"
                    },
                    "household": {
                      "type": "object",
                      "properties": {
                        "userProfileSettings": {
                          "type": "string",
                          "description": "Data which can also be retrieved using /userProfiles/me/settings API"
                        },
                        "householdData": {
                          "type": "string",
                          "description": "Data which can also be retrieved using /household/me API"
                        },
                        "deviceData": {
                          "type": "string",
                          "description": "Data which can also be retrieved using the /devices/me or the /household/me/devices/me API"
                        }
                      },
                      "description": "household related data"
                    }
                  },
                  "description": "Schema for /resources/initial",
                  "example": {
                    "tokens": {
                      "clientToken": "abc123"
                    },
                    "authorization": {
                      "apiCache": {
                        "url": "https://d3j35dxplamnfc.cloudfront.net/ctap/r1.6.0/shared/apiCache/authorization?type=cloudfront&Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kM2ozNWR4cGxhbW5mYy5jbG91ZGZyb250Lm5ldC9jdGFwL3I~Lj8uPy9zaGFyZWQvKiIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTYxMTU3MTIxMjYyM319fV19&Key-Pair-Id=K2XFS45Y2C2HKQ&Signature=Mry2STOhxOhKN8H69mMzad0WuZ98mFmiqdcIvjfuIBvxL8Tv8Q-9OQmE7v6gickM52RbvWlPaQh~N4LMKw7VqSgmddHspxCkvBtUDSiKyBAaO6j1J7p3xjcEbIMRsvRiBuR0i~Br9vdRVB3TG-He6hQdOEKLkIWQrAJzHsklwBzTUEDbHPYpu2mhcPFxRGtxaxp8fBgR2Xyv~WHvX78dvr5QW0PxU~tOyWSsarWPAwqlxMPoHY0Ff2eQBaTMLOs~xotdpdMDkU2kRZUzLLTJpppZlE5IGl0MWi0VGT8Lba--ebzTrRKclqGxr9M6hp2EK7nf5hkt9FYcJofNab21IQ__"
                      }
                    },
                    "platform": {
                      "avatars": [
                        {
                          "avatarId": "avatar~0",
                          "friendlyName": "myAvatar",
                          "media": [
                            {
                              "type": "focus",
                              "width": 30,
                              "height": 60,
                              "url": "http://myavatar0_small.jpg",
                              "mimeType": "image/png"
                            },
                            {
                              "type": "unfocus",
                              "width": 60,
                              "height": 120,
                              "url": "http://myavatar0_big.jpg",
                              "mimeType": "image/png"
                            }
                          ]
                        },
                        {
                          "avatarId": "avatar~1",
                          "media": [
                            {
                              "width": 30,
                              "height": 60,
                              "url": "http://myavatar1_small.jpg",
                              "mimeType": "image/png"
                            },
                            {
                              "width": 60,
                              "height": 120,
                              "url": "http://myavatar1_big.jpg",
                              "mimeType": "image/png"
                            }
                          ]
                        }
                      ],
                      "parentalPinPolicies": {
                        "thresholdsOptions": [
                          {
                            "category": "OFF",
                            "maxRating": 30
                          },
                          {
                            "category": "YOUNG_ADULT",
                            "maxRating": 17
                          },
                          {
                            "category": "TEEN",
                            "maxRating": 13
                          },
                          {
                            "category": "CHILDREN",
                            "maxRating": 7
                          }
                        ]
                      },
                      "audioLangs": [
                        "eng",
                        "fre"
                      ],
                      "documents": [
                        {
                          "type": "TermsAndConditions",
                          "title": "Terms and Conditions",
                          "uri": "https://TermsAndConditions.com/TNC",
                          "media": [
                            {
                              "mimeType": "image/jpeg",
                              "url": "TnCLogo.jpg",
                              "height": 300,
                              "width": 200
                            }
                          ]
                        },
                        {
                          "type": "CancellationRights",
                          "title": "Cancellation Rights",
                          "uri": "https://Cancellation.com/Cancel"
                        }
                      ],
                      "ages": [
                        {
                          "maxAge": 6,
                          "displayString": "Babies",
                          "description": "For ages between 0-6"
                        },
                        {
                          "maxAge": 12,
                          "displayString": "Kids",
                          "description": "For ages between 7-12"
                        },
                        {
                          "maxAge": 17,
                          "displayString": "Teens",
                          "description": "For ages between 13-17"
                        },
                        {
                          "maxAge": 120,
                          "displayString": "Adults",
                          "description": "For ages 18 & up"
                        }
                      ],
                      "sharedCategoriesSupported": true
                    },
                    "household": {
                      "householdData": {
                        "id": "cgw-dev",
                        "firstName": "John",
                        "lastName": "Smith",
                        "auxHouseholdId": "cgw-dev-1234",
                        "accountId": "1234",
                        "community": "VGW_KD_V3",
                        "userProfileQuota": 10,
                        "householdOptions": [
                          "CDVR"
                        ],
                        "lastAuthorizationDate": "2015-09-20T00:00:00.000Z"
                      },
                      "userProfileSettings": {
                        "uiLanguage": "eng",
                        "audioLanguage": "eng",
                        "subtitlesLanguage": "eng",
                        "presentSubtitles": false,
                        "parentalRatingThreshold": 10,
                        "clockFormat": "24H",
                        "presentClosedCaptions": true,
                        "closedCaptionsTrack": "cc1",
                        "displayName": "Elza",
                        "maxAge": 12,
                        "isDefault": false,
                        "avatarId": "avatar~1",
                        "filterSDChannels": true,
                        "filterUnEntitledChannels": false
                      },
                      "deviceData": {
                        "id": "1",
                        "type": "COMPANION",
                        "settings": {
                          "displayName": "UND"
                        },
                        "drmType": "VGDRM",
                        "registeredDateTime": "2020-05-24T11:53:41.000Z",
                        "deviceFeatures": [],
                        "activeUserProfile": "panda_HH_0"
                      }
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/grid": {
      "get": {
        "description": "Get a list of channels with their events.\nThis API can be used to get either current/future events or catchup events for the channels.\nCurrent/future and catchup events cannot be retrieved in the same call.\nIn order to fetch catchup events either the pastEventsLimit param or the catchupFilter flag (with the value 'onlyCatchup') should be used.\nIn order to fetch current/future events the eventsLimit param or the duration params should be used.\nIn order to fetch only channels without events, the GET /channels API should be used.\n",
        "operationId": "GET_agg-grid",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "scheduleOnly",
            "in": "query",
            "description": "When set to true the response doesn't include any channel properties except of channel id. The parameter is handled starting from API version 1.6.0",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "isPlayable",
            "in": "query",
            "description": "Filter for channels which are consumable in the current device (i.e. the channel's format is playable on the device). If this filter false or not given, both playable and non playable channels are returned. If true, return only playable channels.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isEntitled",
            "in": "query",
            "description": "Filter for channels which the household associated to this device is entitled to. If this filter is false or not given, return entitled and not entitled channels. If true, return only entitled channels.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "ISO 8601 compliant UTC date time, defining the start of a time windowed reponse list.\nThis value is inclusive; entities starting earlier and ongoing at this time will be included in the response.\nShall be accompanied by one of `duration` XOR `eventsLimit` XOR `pastEventsLimit`.\nIf not provided, the system will use the current time.\nExample: \"2015-10-05T14:30Z\" is UTC 5th October 2105 2:30pm.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration in seconds, defining the end of a time windowed response list relative to `startTime`.\nShall not be supplied together with `eventsLimit`. If neither startDateTime nor duration are supplied, the default duration is 12 hours.\nExample: 9000 - 2hrs 30min duration.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "eventsLimit",
            "in": "query",
            "description": "Number of events returned per channel relative to the specified startTime.\nThis parameter shall not be supplied together with `duration`.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pastEventsLimit",
            "in": "query",
            "description": "Number of past events returned per channel relative to the specified startTime.\nThis parameter will be used to fetch catchup events.\nShall not be supplied together with `duration`.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "filterCurrentEvent",
            "in": "query",
            "description": "Filter out the currently playing live event.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "carousel",
            "in": "query",
            "description": "Flag indicating whether to loop back to the beginning of the response list upon reaching the end.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "__locator__; GUID of the channel that is used as the base location point of the offset in the response list.\nThis channel will be the first in the returned list.\nShall not be supplied together with any other locator, otherwise a 400 response will be returned.\nIf not provided, the system uses the first channel in the channel list for the client\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logicalChannelNumber",
            "in": "query",
            "description": "__locator__; Logical channel number of the channel (relevant for the calling device) that is used as the base location point of the offset in the response list.\nThis channel will be the first in the returned list.\nThis parameter should be used for direct channel access. Shall not be supplied together with any other locator, otherwise a 400 response will be returned.\ndefault is the first channel in the channel list for the client.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "genreId",
            "in": "query",
            "description": "Filter resources to those associated with the supplied genreId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catchupFilter",
            "in": "query",
            "description": "Filter catchup events.\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlyCatchup"
              ]
            }
          },
          {
            "name": "isFavourite",
            "in": "query",
            "description": "Filter the channels based on them being in the favorite list. If this filter is false or not given, return favourite and non-favourite channels.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "radioFilter",
            "in": "query",
            "description": "Filter Radio channels. If not provided, radio channels are NOT included in the response.\nwithRadio -> Radio channels AND other channels (video) are provided in the response.\n",
            "schema": {
              "type": "string",
              "enum": [
                "withRadio"
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to a location (specified by the locator, channelId or logicalChannelNumber parameter) where entries in the response list should be selected from.\nLimited to 255 to prevent long running queries on the implementation.\nClients should get results to obtain a new locator, channelId or logicalChannelNumber (depending on API) to page further through the list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of channels with events",
                  "example": {
                    "count": 3,
                    "total": 204,
                    "channels": [
                      {
                        "name": "Program 70",
                        "logicalChannelNumber": 1,
                        "id": "CHID_1",
                        "isFavorite": true,
                        "isPlayable": true,
                        "videoFormat": "hd",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                          },
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/twenty_two.svg"
                          }
                        ],
                        "schedule": [
                          {
                            "id": "IID_34234141",
                            "resource": "asset",
                            "source": "ltv",
                            "startDateTime": "2015-10-05T14:30:00.000Z",
                            "contentType": "standalone",
                            "title": "U0312S22E025:Name:En",
                            "duration": 1800,
                            "media": [
                              {
                                "type": "small",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster025_eng.jpg",
                                "height": 135,
                                "width": 240
                              },
                              {
                                "type": "large",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/sposter025_eng.jpg",
                                "height": 135,
                                "width": 240
                              }
                            ],
                            "synopsis": "This is a short synopsis."
                          }
                        ]
                      },
                      {
                        "name": "HBO 2",
                        "logicalChannelNumber": 2,
                        "id": "CHID_2",
                        "isFavorite": true,
                        "isPlayable": true,
                        "videoFormat": "hd",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/three_hd.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/three_hd.svg"
                          }
                        ],
                        "schedule": [
                          {
                            "id": "IID_85454342",
                            "resource": "asset",
                            "source": "ltv",
                            "startDateTime": "2015-10-05T14:30:00.000Z",
                            "contentType": "episode",
                            "title": "Game of Thrones",
                            "duration": 300000,
                            "episodeNumber": "10",
                            "seasonNumber": "2",
                            "episodeTitle": "Winter is coming",
                            "media": [
                              {
                                "type": "small",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster149_eng.jpg",
                                "height": 135,
                                "width": 240
                              },
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/sposter149_eng.jpg",
                                "height": 135,
                                "width": 240
                              }
                            ],
                            "synopsis": "This is a short synopsis."
                          }
                        ]
                      },
                      {
                        "name": "Fox Central",
                        "logicalChannelNumber": 3,
                        "id": "CHID_3",
                        "deliveryTypes": [
                          "DTH"
                        ],
                        "isFavorite": true,
                        "isPlayable": true,
                        "videoFormat": "4k",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/fox_news.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/fox_news.svg"
                          }
                        ],
                        "schedule": [
                          {
                            "id": "IID_52353453",
                            "resource": "asset",
                            "source": "ltv",
                            "startDateTime": "2015-10-05T14:30:00.000Z",
                            "contentType": "standalone",
                            "title": "G0312S25E005:Name:En",
                            "duration": 10800,
                            "media": [
                              {
                                "type": "small",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster005_eng.jpg",
                                "height": 135,
                                "width": 240
                              },
                              {
                                "type": "large",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/sposter005_eng.jpg",
                                "height": 135,
                                "width": 240
                              }
                            ],
                            "synopsis": "This is a short synopsis."
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "brooklyn"
        ]
      }
    },
    "/agg/content": {
      "get": {
        "description": "Get a list of Content and ContentInstances matching the supplied criteria.  Used for Searching and Store browsing use cases.\nNote: the seriesFilter param is currently supported only together with the offerKeys param, and the 'All' value is not currently supported. The default value is 'noSeries'.\n",
        "operationId": "GET_agg-content",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Id of the category to display content for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma separated list to filter content instance source. Valid values:\n* ltv - broadcast TV content\n* vod - video on demand content\n* pvr - pvr recorded content\n* catchup - online catchup content\n* editorial - editorially curated content, can be a mix of different sources\n* youtube - federated youtube content (supported only for search flows and can't be use together with other sources)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Return content that belongs to a specific group",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showId",
            "in": "query",
            "description": "Return content that belongs to a specific vod/catchup showId. For pvr shows, call agg/library?showId.\nFor linear shows, only uncollapse through search is supported. Therefore the 'q' query phrase must also be supplied together with the showId.\nIn order to fetch the episodes of an open series (that has no seasons) the parameter isCollapsed=false should be given explicitly.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasonId",
            "in": "query",
            "description": "Return content that belongs to a specific vod/catchup seasonId. For pvr shows, call agg/library?seasonId.\nFor linear shows, only uncollapse through search is supported. Therefore the 'q' query phrase must also be supplied together with the seasonId. In addition to the search phrase, the showId should also be given, and the isCollapsed=false param must be specified.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreExpiry",
            "in": "query",
            "description": "Specifies if when uncollapsing a given vod show/season/group assets that are already expired should be returned.\nThis parameter is accepted only when groupId/showId/seasonId is given and only for source=vod\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCollapsed",
            "in": "query",
            "description": "Specifies if to return collapsed content or not. By default it is defined by autoCollapse classification\nspecification definition.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "storePhrase",
            "in": "query",
            "description": "Specifies if to save the given phrase prefix in search history\nNOTE: storePhrase is currently supported only when the searchOptions param is given with the value matchPhrasePrefix (storage of full phrases is handled by the system in a way that is transparent to the client).\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to a location (specified by the locator, channelId or logicalChannelNumber parameter) where entries in the response list should be selected from.\nClients should get results to obtain a new locator, channelId or logicalChannelNumber (depending on API) to page further through the list.\n",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "phrase to search for (exact match in case searchOptions is not specified) within title, cast and keywords.  The value must be URL encoded to support special characters (+, &, ? etc)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOptions",
            "in": "query",
            "description": "Control search criteria options. Valid values:\n* matchPhrase - exact match. (default in case no parameter is defined)\n* matchPhrasePrefix - enable prefix match.\n",
            "schema": {
              "type": "string",
              "enum": [
                "matchPhrase",
                "matchPhrasePrefix"
              ]
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "genreId",
            "in": "query",
            "description": "Filter resources to those associated with the supplied genreId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Define sorting for the result. The optional values are:\n* title - AZ sort by title feild. Used -title to sort in decending order.\n* date - sort by date. Broadcast data for live TV, recording date for PVR, purchase data for phurchased vod and release date for vod\n  use -date to sort by date in decending order.\n* type - sort by content type. The sort is ordered by the order of the types in the type feild.\n* productionYear - sort by producetion year\n* expirationDateTime - sort by content expiry date\n* episodeNumber - for calls to get episodes of a season/open show - sort by episode number.\n  Use -episodeNumber for decending order sort.\n* seasonNumber - for calls to get seasons of a show - sort by seasonNumber.\n  Use -seasonNumber for decending order sort.\n",
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "date",
                "type",
                "productionYear",
                "expirationDateTime"
              ]
            }
          },
          {
            "name": "offerKeys",
            "in": "query",
            "description": "Comma-separated list of offerKeys.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seriesFilter",
            "in": "query",
            "description": "Filter resources which are part of series or a show.\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlySeries",
                "noSeries",
                "All"
              ]
            }
          },
          {
            "name": "locator",
            "in": "query",
            "description": "Identifies a logical location in the list to locate the pagination at.\nThis parameter is used as the location point as a base for the offset parameter.\nValues are opaque to the client and retrieved from previous calls to a list API.\nIf no `locator` or other locating parameter supplied the response will be at the start of the list.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of content matching the request query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 115000
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius.",
                        "contentFlags": [
                          "adult"
                        ]
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 38000
                          }
                        ],
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "externalStarRatings": [
                          {
                            "provider": "imdb",
                            "score": 8.7
                          }
                        ],
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/favorites": {
      "get": {
        "description": "Get a list of assets matching the supplied criteria. Used for retrieving VOD favorites.\nCollapsed assets in the VOD favorite list will be of asset.schema.\nUncollapsing a show/group is by using agg/content with showId/groupId param.\n",
        "operationId": "GET_agg-favorites",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of assets matching the request query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 115000
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius.",
                        "contentFlags": [
                          "adult"
                        ]
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 38000
                          }
                        ],
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "externalStarRatings": [
                          {
                            "provider": "imdb",
                            "score": 8.7
                          }
                        ],
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/favoriteCategories": {
      "get": {
        "description": "Retrieve a list of favorites categories.\n",
        "operationId": "GET_agg-favoriteCategories",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "description": "The array of favorite Categories",
                      "items": {
                        "type": "string",
                        "description": "The favorite categories of the user."
                      }
                    }
                  },
                  "description": "Schema for a favorite Category list",
                  "example": {
                    "categories": [
                      {
                        "id": "vod",
                        "type": "category_list",
                        "name": "VOD Store",
                        "leaf": false
                      },
                      {
                        "id": "vodGenreList",
                        "name": "VOD Genres",
                        "type": "root",
                        "leaf": false
                      },
                      {
                        "id": "appStore",
                        "name": "Application Store",
                        "type": "root",
                        "leaf": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/recommendations/related": {
      "get": {
        "description": "Get recommended assets related to the given content.\nIn case of linear recommendation, startTime + duration will define the\ntime window for the recommended assets. If not given, the default values will be startDateTime=now, and duration=24hours.\nIn case of vod recommendation these params will be ignored.\nFor vod source, any episodes or group content in the result will be collapsed.\n",
        "operationId": "GET_agg-recommendations-related",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of assets to return.\nNOTE the default limit is defined as 255, but this should not be used.\nInstead the client should limit every invocation to the number of assets it actually needs for the display\n",
            "schema": {
              "type": "integer",
              "default": 255
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "description": "The recommended assets returned will be related to the given content.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma separated list to filter recommended content instance source. Valid values:\n  * vod - video on demand content\n  * ltv - broadcast TV content (linear)\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "vod"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is defined, only content items that are associated with at least one of the given filteringTags will be returned.\nThe topLevelFilterTag values are defined by the provider in the vod content ingest.\nNote: the filtering tags to be used for related content is not the same set as are used for non-related content.\nThis is a different set of tags, per top level screen.\n[In IA2.0 the value to be used should be read from the metadata of the classification of the hubScreen, in the actionMenu->relatedTopLevelFilterTags field.]\n[In IA1.0 the value to use should be read from the uisettings file]\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "ISO 8601 compliant UTC date time, defining the start of a time windowed reponse list.\nThis value is inclusive; entities starting earlier and ongoing at this time will be included in the response.\nShall be accompanied by one of `duration` XOR `eventsLimit`.\nIf not provided, the system will use the current time.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration in seconds, defining the end of a time windowed response list relative to `startTime`.\nExample: 9000 - 2hrs 30min duration.\nShall not be supplied together with `eventsLimit`.\n",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of recommendations matching the request query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 2,
                    "total": 18,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "purchases": [
                          {
                            "offerId": "1234",
                            "isAuthorized": false,
                            "expirationDate": "2015-09-14T10:38:54.290Z",
                            "price": 99900,
                            "currencySymbol": "USD",
                            "marketingMsg": "Price is 9.99 USD",
                            "purchaseWindowStartDate": "2015-09-13T10:38:54.290Z",
                            "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                            "purchaseOptionStatus": "active"
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/recommendations/preference": {
      "get": {
        "description": "Get general recommendations for live or vod assets. The recommendations\ncan be based on personal viewing information or be general recommendations.\nIn case of linear recommendation, startTime + duration will define the\ntime window for the recommended assets. If not given, the default values will be startDateTime=now, and duration=24hours.\nIn case of vod recommendation these params will be ignored.\nNote: the topLevelFilterTag parameter and the recommendationGenre/recommendationSubGenre parameters are mutually exclusive.\nFor vod source, any episodes or group content in the result will be collapsed.\n",
        "operationId": "GET_agg-recommendations-preference",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of assets to return.\nNOTE the default limit is defined as 64, but this should not be used.\nInstead the client should limit every invocation to the number of assets it actually needs for the display\n",
            "schema": {
              "type": "integer",
              "default": 64
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma separated list to filter recommended content instance source. Valid values:\n* vod - video on demand content\n* ltv - broadcast TV content (linear)\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "vod,ltv"
            }
          },
          {
            "name": "isPersonal",
            "in": "query",
            "description": "Use personal viewing preferences as an input to recommendation engine. When false the result will be general recommendations.\nWhen true the result will be based on personal viewing information.\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "recommendationGenre",
            "in": "query",
            "description": "When this query parameter is defined, the preference items will be filtered\nby their genre as ingested to recommendation engine. Only items that are part of the given genre will be returned.\nThe values for recommendationsGenre are different per service provider and may be a subset\nor disjoint set of genres than what is returned by the /categories API\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recommendationSubGenre",
            "in": "query",
            "description": "Comma separated list to filter content by.\nThis query parameter can be defined only if recommendationGenre is defined.\nWhen this query parameter is defined, the preference items will be filtered\nby their recommendationGenre **and** recommendationSubGenre as ingested to recommendation engine.\nOnly items that are part of the given recommendationGenre and recommendationSubGenre will be returned.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "ISO 8601 compliant UTC date time, defining the start of a time windowed reponse list.\nThis value is inclusive; entities starting earlier and ongoing at this time will be included in the response.\nShall be accompanied by one of `duration` XOR `eventsLimit`.\nIf not provided, the system will use the current time.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration in seconds, defining the end of a time windowed response list relative to `startTime`.\nExample: 9000 - 2hrs 30min duration.\nShall not be supplied together with `eventsLimit`.\n",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of recommendations matching the request query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 2,
                    "total": 18,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "purchases": [
                          {
                            "offerId": "1234",
                            "isAuthorized": false,
                            "expirationDate": "2015-09-14T10:38:54.290Z",
                            "price": 99900,
                            "currencySymbol": "USD",
                            "marketingMsg": "Price is 9.99 USD",
                            "purchaseWindowStartDate": "2015-09-13T10:38:54.290Z",
                            "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                            "purchaseOptionStatus": "active"
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/recommendations/topList": {
      "get": {
        "description": "Get most popular content. (The time period over which to calculate the most popular content is set by the headend)\nNote: series/group vod content will return collapsed. catchup and ltv series/group content will not return collapsed.\nThe vodFiltered and topLevelFilterTag parameters are supported only for vod source.\nThe excludeGenres parameter is supported only for catchup source.\n",
        "operationId": "GET_agg-recommendations-topList",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of assets to return",
            "schema": {
              "type": "integer",
              "default": 9
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "The source from which to return the topList recommendations. **currently only single sources are supported**\n* vod - video on demand content\n* ltv - broadcast TV content (linear)\n* catchup - recorded catchup content\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "vod"
            }
          },
          {
            "name": "excludeGenres",
            "in": "query",
            "description": "Comma-separated list of genres to exclude from the response. Supported only for the catchup source.\n",
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "vodFilter",
            "in": "query",
            "description": "Filter vod assets by their type\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlyTvod"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of most popular content from a period configurable by the headend",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 2,
                    "total": 18,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "purchases": [
                          {
                            "offerId": "1234",
                            "isAuthorized": false,
                            "expirationDate": "2015-09-14T10:38:54.290Z",
                            "price": 99900,
                            "currencySymbol": "USD",
                            "marketingMsg": "Price is 9.99 USD",
                            "purchaseWindowStartDate": "2015-09-13T10:38:54.290Z",
                            "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                            "purchaseOptionStatus": "active"
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/recommendations/groupings/becauseYouWatchedContent": {
      "get": {
        "description": "Get latest viewed content and associated recommendations for live or vod assets.\nThe recommendations are based on recently viewed content.\nUI comment: when this API is used for fetching and displaying swimlanes the result will be a set of <limit> swimlanes,\nwhere each swimlane has <recommendationLimit> assets.\nstartTime + duration will define the time window in the past for computing recently viewed content.\nIf duration is not given, the default used is 86400 seconds (24 hours). If startDateTime is not given, the default used is (NOW-duration).\nVod assets will be collapsed in the response\n",
        "operationId": "GET_agg-recommendations-groupings-becauseYouWatchedContent",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of recently viewed assets to return (seed assets)",
            "schema": {
              "maximum": 5,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "recommendationLimit",
            "in": "query",
            "description": "Number of related assets to fetch for each seed asset",
            "schema": {
              "maximum": 27,
              "type": "integer",
              "default": 15
            }
          },
          {
            "name": "recommendationSource",
            "in": "query",
            "description": "Comma seperated list to filter recommended content instance source. Valid values:\n* vod - video on demand content\n* ltv - broadcast TV content (linear)\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "vod"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "vodFilter",
            "in": "query",
            "description": "Filter vod assets by their type\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlyTvod"
              ]
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "ISO 8601 compliant UTC date time, defining the start of a time windowed reponse list.\nThis value is inclusive; entities starting earlier and ongoing at this time will be included in the response.\nShall be accompanied by one of `duration` XOR `eventsLimit`.\nIf not provided, the system will use the current time.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration in seconds, defining the end of a time windowed response list relative to `startTime`.\nExample: 9000 - 2hrs 30min duration.\nShall not be supplied together with `eventsLimit`.\n",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of latest viewed assets and for each asset, a list of related content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of groupings objects",
                  "example": {
                    "count": 2,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "purchases": [
                          {
                            "offerId": "1234",
                            "isAuthorized": false,
                            "expirationDate": "2015-09-14T10:38:54.290Z",
                            "price": 99900,
                            "currencySymbol": "USD",
                            "marketingMsg": "Price is 9.99 USD",
                            "purchaseWindowStartDate": "2015-09-14T10:38:54.290Z",
                            "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                            "purchaseOptionStatus": "expired"
                          }
                        ],
                        "recommendedContent": [
                          {
                            "id": "IID_65900",
                            "resource": "asset",
                            "source": "vod",
                            "isVodFavorite": true,
                            "expirationDateTime": "2015-09-20T00:00:00.000Z",
                            "purchases": [
                              {
                                "offerId": "1234",
                                "isAuthorized": false,
                                "expirationDate": "2015-09-14T10:38:54.290Z",
                                "price": 99900,
                                "currencySymbol": "USD",
                                "marketingMsg": "Price is 9.99 USD",
                                "purchaseWindowStartDate": "2015-09-14T10:38:54.290Z",
                                "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                                "purchaseOptionStatus": "notStarted"
                              }
                            ],
                            "contentType": "standalone",
                            "title": "Spider-Man 2",
                            "genres": [
                              {
                                "name": "action",
                                "genreId": "action"
                              },
                              {
                                "name": "adventure",
                                "genreId": "adventure"
                              }
                            ],
                            "duration": 127,
                            "entitled": false,
                            "media": [
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://img.server.com/65900.jpg",
                                "height": 300,
                                "width": 200
                              }
                            ],
                            "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                          },
                          {
                            "id": "IID_45668",
                            "resource": "asset",
                            "source": "vod",
                            "isVodFavorite": true,
                            "contentType": "episode",
                            "title": "Pilot",
                            "genres": [
                              {
                                "name": "drama",
                                "genreId": "drama"
                              },
                              {
                                "name": "crime",
                                "genreId": "crime"
                              }
                            ],
                            "duration": 42,
                            "entitled": true,
                            "media": [
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://img.server.com/45668.jpg",
                                "height": 300,
                                "width": 200
                              }
                            ],
                            "seasonNumber": "1",
                            "episodeNumber": "1",
                            "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                          }
                        ],
                        "recommendedContentCount": 2,
                        "recommendedContentTotal": 2,
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      },
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "purchases": [
                          {
                            "offerId": "1234",
                            "isAuthorized": false,
                            "expirationDate": "2015-09-14T10:38:54.290Z",
                            "price": 99900,
                            "currencySymbol": "USD",
                            "marketingMsg": "Price is 9.99 USD",
                            "purchaseWindowStartDate": "2015-09-14T10:38:54.290Z",
                            "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                            "purchaseOptionStatus": "active"
                          }
                        ],
                        "recommendedContent": [
                          {
                            "id": "IID_65900",
                            "resource": "asset",
                            "source": "vod",
                            "isVodFavorite": true,
                            "expirationDateTime": "2015-09-20T00:00:00.000Z",
                            "purchases": [
                              {
                                "offerId": "1234",
                                "isAuthorized": false,
                                "expirationDate": "2015-09-14T10:38:54.290Z",
                                "price": 99900,
                                "currencySymbol": "USD",
                                "marketingMsg": "Price is 9.99 USD",
                                "purchaseWindowStartDate": "2015-09-14T10:38:54.290Z",
                                "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                                "purchaseOptionStatus": "active"
                              }
                            ],
                            "contentType": "standalone",
                            "title": "Spider-Man 2",
                            "genres": [
                              {
                                "name": "action",
                                "genreId": "action"
                              },
                              {
                                "name": "adventure",
                                "genreId": "adventure"
                              }
                            ],
                            "duration": 127,
                            "entitled": false,
                            "media": [
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://img.server.com/65900.jpg",
                                "height": 300,
                                "width": 200
                              }
                            ],
                            "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                          },
                          {
                            "id": "IID_45668",
                            "resource": "asset",
                            "source": "vod",
                            "isVodFavorite": true,
                            "contentType": "episode",
                            "title": "Pilot",
                            "genres": [
                              {
                                "name": "drama",
                                "genreId": "drama"
                              },
                              {
                                "name": "crime",
                                "genreId": "crime"
                              }
                            ],
                            "duration": 42,
                            "entitled": true,
                            "media": [
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://img.server.com/45668.jpg",
                                "height": 300,
                                "width": 200
                              }
                            ],
                            "seasonNumber": "1",
                            "episodeNumber": "1",
                            "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/recommendations/groupings/becauseYouWatchedGenre": {
      "get": {
        "description": "Get latest viewed genres and associated recommendations for live or vod assets.\nThe recommendations are based on recently viewed genres/subGenres, computed by recommendation engine.\nVod assets will be collapsed in the response\nUI comment: when this API is used for fetching and displaying swimlanes the result will be a set of <limit> genres,\n            where each swimlane has <recommendationLimit> assets.\n",
        "operationId": "GET_agg-recommendations-groupings-becauseYouWatchedGenre",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of recently viewed genres to return (seed genres)",
            "schema": {
              "maximum": 5,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "recommendationLimit",
            "in": "query",
            "description": "Number of related assets to fetch for each seed genre",
            "schema": {
              "maximum": 27,
              "type": "integer",
              "default": 15
            }
          },
          {
            "name": "recommendationSource",
            "in": "query",
            "description": "Comma separated list to filter recommended content instance source. Valid values:\n* vod - video on demand content\n* ltv - broadcast TV content (linear)\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "vod"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of latest viewed genres and for each one, a list of related content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of groupings objects",
                  "example": {
                    "count": 2,
                    "content": [
                      {
                        "recommendationGenreId": "1",
                        "recommendationSubGenreId": "13",
                        "recommendationSubGenreTitle": "Action",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                          }
                        ],
                        "recommendedContentCount": 2,
                        "recommendedContentTotal": 2,
                        "recommendedContent": [
                          {
                            "id": "IID_65900",
                            "resource": "asset",
                            "source": "vod",
                            "isVodFavorite": true,
                            "expirationDateTime": "2015-09-20T00:00:00.000Z",
                            "purchases": [
                              {
                                "offerId": "1234",
                                "isAuthorized": false,
                                "expirationDate": "2015-09-14T10:38:54.290Z",
                                "price": 99900,
                                "currencySymbol": "USD",
                                "marketingMsg": "Price is 9.99 USD",
                                "purchaseWindowStartDate": "2015-09-14T10:38:54.290Z",
                                "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                                "purchaseOptionStatus": "expired"
                              }
                            ],
                            "contentType": "standalone",
                            "title": "Spider-Man 2",
                            "genres": [
                              {
                                "name": "action",
                                "genreId": "action"
                              },
                              {
                                "name": "adventure",
                                "genreId": "adventure"
                              }
                            ],
                            "duration": 127,
                            "entitled": false,
                            "media": [
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://img.server.com/65900.jpg",
                                "height": 300,
                                "width": 200
                              }
                            ],
                            "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                          },
                          {
                            "id": "IID_45668",
                            "resource": "asset",
                            "source": "vod",
                            "isVodFavorite": true,
                            "contentType": "episode",
                            "title": "Pilot",
                            "genres": [
                              {
                                "name": "drama",
                                "genreId": "drama"
                              },
                              {
                                "name": "crime",
                                "genreId": "crime"
                              }
                            ],
                            "duration": 42,
                            "entitled": true,
                            "media": [
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://img.server.com/45668.jpg",
                                "height": 300,
                                "width": 200
                              }
                            ],
                            "seasonNumber": "1",
                            "episodeNumber": "1",
                            "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                          }
                        ]
                      },
                      {
                        "recommendationGenreId": "movies",
                        "recommendationSubGenreId": "series",
                        "recommendationSubGenreTitle": "Series",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                          }
                        ],
                        "recommendedContentCount": 2,
                        "recommendedContentTotal": 2,
                        "recommendedContent": [
                          {
                            "id": "IID_65900",
                            "resource": "asset",
                            "source": "vod",
                            "isVodFavorite": true,
                            "expirationDateTime": "2015-09-20T00:00:00.000Z",
                            "purchases": [
                              {
                                "offerId": "1234",
                                "isAuthorized": false,
                                "expirationDate": "2015-09-14T10:38:54.290Z",
                                "price": 99900,
                                "currencySymbol": "USD",
                                "marketingMsg": "Price is 9.99 USD",
                                "purchaseWindowStartDate": "2015-09-14T10:38:54.290Z",
                                "purchaseWindowEndDate": "2015-09-14T10:38:54.290Z",
                                "purchaseOptionStatus": "active"
                              }
                            ],
                            "contentType": "standalone",
                            "title": "Spider-Man 2",
                            "genres": [
                              {
                                "name": "action",
                                "genreId": "action"
                              },
                              {
                                "name": "adventure",
                                "genreId": "adventure"
                              }
                            ],
                            "duration": 127,
                            "entitled": false,
                            "media": [
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://img.server.com/65900.jpg",
                                "height": 300,
                                "width": 200
                              }
                            ],
                            "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                          },
                          {
                            "id": "IID_45668",
                            "resource": "asset",
                            "source": "vod",
                            "isVodFavorite": true,
                            "contentType": "episode",
                            "title": "Pilot",
                            "genres": [
                              {
                                "name": "drama",
                                "genreId": "drama"
                              },
                              {
                                "name": "crime",
                                "genreId": "crime"
                              }
                            ],
                            "duration": 42,
                            "entitled": true,
                            "media": [
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://img.server.com/45668.jpg",
                                "height": 300,
                                "width": 200
                              }
                            ],
                            "seasonNumber": "1",
                            "episodeNumber": "1",
                            "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                          }
                        ]
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/bookings": {
      "get": {
        "description": "Retrieve a list of bookings, possibly filtered by the given query parameters\n",
        "operationId": "GET_agg-library-bookings",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Define sorting for the result. The optional values are:\n* title - A to Z sort by title field.\n* -title - Z to A sort by title field.\n* date - sort by date, ascending.\n* -date - sort by date, descending. This is the default behavior.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to a location (specified by the locator, channelId or logicalChannelNumber parameter) where entries in the response list should be selected from.\nLimited to 255 to prevent long running queries on the implementation.\nClients should get results to obtain a new locator, channelId or logicalChannelNumber (depending on API) to page further through the list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "locator",
            "in": "query",
            "description": "Identifies a logical location in the list to locate the pagination at.\nThis parameter is used as the location point as a base for the offset parameter.\nValues are opaque to the client and retrieved from previous calls to a list API.\nIf no `locator` or other locating parameter supplied the response will be at the start of the list.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingState",
            "in": "query",
            "description": "Filter on recordingState.\nCSV of enumerated values of recordingState in recordingstate.schema.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasonId",
            "in": "query",
            "description": "Filter on the given seasonId.\nThe response will contain a list of booked/recorded episodes for the given seasonId\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showId",
            "in": "query",
            "description": "Filter on showId.\nThe response will contain a list of booked/recorded seasons (for a closed series) or episodes (for an open series) for the given showId\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "seriesFilter",
            "in": "query",
            "description": "Filter resources which are part of series or a show.\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlySeries",
                "noSeries",
                "All"
              ]
            }
          },
          {
            "name": "collapse",
            "in": "query",
            "description": "Indicates if the response should be collapsed or not.\nBy default the behaviour of the API is to NOT collapse the items (ex: recorded episodes of a season)\nClient can provide this queryparameter in case the response should be collapsed.\nusage: \"collapse=false\"\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of bookings",
                  "example": {
                    "count": 2,
                    "total": 35,
                    "bookings": [
                      {
                        "id": "uri:prg:20037946:B11945006~uri:scd:2505:20037946:B11945006:18032021043000~ltv",
                        "title": "Sunnah Home",
                        "locator": "0",
                        "bookingType": "show",
                        "contentInstanceId": "uri:prg:20037946:B11945006~uri:scd:2505:20037946:B11945006:18032021043000~ltv",
                        "recordingState": "notStarted",
                        "created": "2021-03-11T23:15:30.000Z",
                        "lastModified": "2021-03-11T23:15:30.000Z"
                      },
                      {
                        "id": "uri:prg:20042866S12:D10000390X479124~86f1c19b-ee34-440c-a8ff-d8988ae7e9f8~pvr",
                        "title": "SpongeBob SquarePants",
                        "locator": "1",
                        "bookingType": "show",
                        "contentInstanceId": "uri:prg:20042866S12:D10000390X479124~uri:scd:2511:20042866S12:D10000390X479124:02032021065800~ltv",
                        "recordingState": "ended",
                        "created": "2021-02-27T01:36:24.000Z",
                        "lastModified": "2021-03-02T07:23:29.000Z"
                      }
                    ],
                    "locators": {
                      "start": "0",
                      "end": "1"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new booking or promotes an existing episode/season booking into a season/show booking.\n",
        "operationId": "POST_agg-library-bookings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "create booking",
                "example": "{contentInstanceId=CIID_234234, bookingType=event, conflictDetectOption=none, targetDevices=[cDVR]}"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Booking successfully created\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Booking item not created.\nReason is some kind of processing error or conflict.\nSpecific reason returned in error information.\nNo 'data' field will be given in the error response.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "EDiskConflict",
                    "errors": [
                      "Disk space is not available, increase disk space or delete some of the recordings"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Booking conflict error:\n* Booking not created due to conflict.\n* Returns the conflict information in the 'data' field of the error response.\n* The format of the conflict information will match the bookingconflict.schema\nBooking tuner conflict error:\n* Booking not created due to tuner conflict.\n* Returns the bookings conflict information in the 'data' field of the error response.\n* The format of the bookings conflict information will match the bookingpost.schema\n* Details about the response body data is available in the \"Managing Single Bookings\" notebook\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "EConflictDiskUpsellError",
                    "errors": [
                      "Disk space upsell conflict"
                    ],
                    "data": {
                      "conflictType": "disk",
                      "diskQuota": {
                        "percentageAvailable": 40,
                        "percentageReserved": 10,
                        "percentageUsed": 50,
                        "recordingQuota": [
                          {
                            "contentResolution": "any",
                            "recordingTime": 45345,
                            "totalRecordingTime": 54323
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/agg/library/bookings/{bookingId}": {
      "delete": {
        "description": "Delete the Booking.\n",
        "operationId": "DELETE_agg-library-bookings-bookingId",
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/bookings/{bookingId}/season": {
      "delete": {
        "description": "Delete the season booking.\n",
        "operationId": "DELETE_agg-library-bookings-bookingId-season",
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleteSeasonOption",
            "in": "query",
            "description": "If the bookingId is part of a season booking, then this option can be used to delete bookings of the season.\nIf called without any parameters - all of the season’s bookings and recordings will be deleted.\nThe only supported value is:\n  * seasonBookings:\n    If called with the \"deleteSeasonOption=seasonBookings\" parameter, only the season’s bookings will be deleted, and the recorded episodes will be retained.\n    Note: An on-going recording is still considered as a booking, so for the purpose of this API it will also be deleted.\n    (If a playback is still ongoing, the playback should continue normally but discovery and new playback will not be possible and the backend will delete the recording after the playback is completed.)\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/bookings/{bookingId}/show": {
      "delete": {
        "description": "Delete the show booking.\n",
        "operationId": "DELETE_agg-library-bookings-bookingId-show",
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleteShowOption",
            "in": "query",
            "description": "If the bookingId is part of a show booking, then this option can be used to delete bookings of the show.\nIf called without any parameters, all of the show’s bookings and recordings will be deleted.\nThe only support value is:\n  * showBookings:\n    If called with the \"deleteShowOption=showBookings\" parameter, only the show’s bookings will be deleted, and the recorded episodes will be retained.\n    Note: An on-going recording is still considered as a booking, so for the purpose of this API it will also be deleted.\n    (If a playback is still ongoing, the playback should continue normally but discovery and new playback will not be possible and the backend will delete the recording after the playback is completed.)\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/bookings/recordingState/inProgress/{bookingId}": {
      "delete": {
        "description": "Stop the recording, if the booking is \"inProgress\"\n",
        "operationId": "DELETE_agg-library-bookings-recordingState-inProgress-bookingId",
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_ENTITLED",
                    "errors": [
                      "booking is not recording "
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/manageBookings": {
      "post": {
        "description": "This API supports bulk deleting of recordings and notification of a local disk format.\n\nBulk Deleting\nThis API supports only shows and events (not seasons).\nWarning: this API considers an ongoing recording as a recording and not as a booking, and therefore it will be deleted.\nPerforms an operation on a list of assets/shows according to the operation parameter given in the body.\nCurrently \"delete\" operation is supported which permanently deletes all assets and collaped shows in \"recorded\" or/and \"recording\" state - in the bookings list sent in body.\nParameters to be passed to the /agg/library/manageBookings resource with the HTTP method POST:\n* operation: \"delete\"\n* bookings: array of assets and shows according to bookingType: \"event\" or \"show\".\n  - The id to give for bookingType 'event' is the `bookingId` of the standalone/episode booking.\n  - The id to give for the bookingTye 'show' is the `showId` field. The `showId` is only available on the asset level (in the agg/library/planner response) - it is not returned as part of the booking (in the agg/library/bookings response)\n\nDisk Formatted\nThis will delete all recordings for the device that called the API. It is expected to only be called by devices that support local DVR, after a local disk format has been performed. The call of this API by the device is to let Planner know that all references to local recordings for this device should be deleted, reflecting the local deletion of all recordings.\nCalls to this API from non-local DVR devices will result in a Bad Request response explaining that the disk format API is not supported.\n",
        "operationId": "POST_agg-library-manageBookings",
        "requestBody": {
          "description": "body contains 2 parameters: operation and bookings list.\n\"operation\" for disk formatted is \"diskFormatted\" with no other properties in body\n\"operation\" for bulk delete is \"delete\"\n\"bookings\" is a list of the couple of id and type.\n\"bookingType\" is \"show\"/\"event\", and \"id\" is showId/assetId respectively.\n",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "operation"
                ],
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "string",
                    "description": "The action to perform",
                    "enum": [
                      "delete",
                      "diskFormatted"
                    ]
                  },
                  "bookings": {
                    "title": "The bookings list",
                    "type": "array",
                    "items": {
                      "title": "The Items Schema",
                      "type": "object",
                      "properties": {}
                    }
                  }
                },
                "description": "delete all recordings or specific recorded and recording assetList or groups",
                "example": {
                  "operation": "delete",
                  "bookings": [
                    {
                      "bookingType": "show",
                      "id": "b198420821"
                    },
                    {
                      "bookingType": "event",
                      "id": "assetId_7~12345678-assetId_7xassetInstance_0"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Incorrect bookings value in request body"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "groupId  not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Something went wrong. And we are reporting a custom error message"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/agg/library/planner": {
      "get": {
        "description": "Retrieve all planner events matching specific filters.\n",
        "operationId": "GET_agg-library-planner",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Define sorting for the result. The optional values are:\n* title - A to Z sort by title field.\n* -title - Z to A sort by title field.\n* date - sort by date, ascending.\n* -date - sort by date, descending. This is the default behavior.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to a location (specified by the locator, channelId or logicalChannelNumber parameter) where entries in the response list should be selected from.\nLimited to 255 to prevent long running queries on the implementation.\nClients should get results to obtain a new locator, channelId or logicalChannelNumber (depending on API) to page further through the list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "locator",
            "in": "query",
            "description": "Identifies a logical location in the list to locate the pagination at.\nThis parameter is used as the location point as a base for the offset parameter.\nValues are opaque to the client and retrieved from previous calls to a list API.\nIf no `locator` or other locating parameter supplied the response will be at the start of the list.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingState",
            "in": "query",
            "description": "Filter on recordingState.\nCSV of enumerated values of recordingState in recordingstate.schema.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasonId",
            "in": "query",
            "description": "Filter on the given seasonId.\nThe response will contain a list of booked/recorded episodes for the given seasonId\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showId",
            "in": "query",
            "description": "Filter on showId.\nThe response will contain a list of booked/recorded seasons (for a closed series) or episodes (for an open series) for the given showId\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "seriesFilter",
            "in": "query",
            "description": "Filter resources which are part of series or a show.\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlySeries",
                "noSeries",
                "All"
              ]
            }
          },
          {
            "name": "collapse",
            "in": "query",
            "description": "Indicates if the response should be collapsed or not.\nBy default the behaviour of the API is to NOT collapse the items (ex: recorded episodes of a season)\nClient can provide this queryparameter in case the response should be collapsed.\nusage: \"collapse=false\"\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 2,
                    "total": 35,
                    "content": [
                      {
                        "id": "uri:prg:20037946:B11945006~uri:scd:2505:20037946:B11945006:18032021043000~ltv",
                        "resource": "asset",
                        "source": "pvr",
                        "contentType": "episode",
                        "title": "Sunnah Home",
                        "startDateTime": "2021-03-18T04:30:00.000Z",
                        "duration": 1800,
                        "recordingState": "notStarted",
                        "booking": {
                          "id": "uri:prg:20037946:B11945006~uri:scd:2505:20037946:B11945006:18032021043000~ltv",
                          "title": "Sunnah Home",
                          "bookingType": "show",
                          "contentInstanceId": "uri:prg:20037946:B11945006~uri:scd:2505:20037946:B11945006:18032021043000~ltv",
                          "recordingState": "notStarted",
                          "created": "2021-03-11T23:15:30.000Z",
                          "lastModified": "2021-03-11T23:15:30.000Z"
                        },
                        "channel": {
                          "id": "2505",
                          "name": "OASIS HD",
                          "logicalChannelNumber": 106,
                          "isLocked": false,
                          "media": [
                            {
                              "type": "regular",
                              "mimeType": "image/png",
                              "url": "http://linear-poster.prod.com.my/prod/logo/prod_Oasis_v1.png",
                              "height": 135,
                              "width": 240
                            }
                          ]
                        },
                        "episodeTitle": "Ep11",
                        "episodeNumber": "11",
                        "showId": "20037946",
                        "media": [
                          {
                            "type": "None",
                            "mimeType": "image/jpeg",
                            "url": "http://linear-poster.prod.com.my/prod/poster/IBJQA_IVP_LAND_288x162.jpg",
                            "height": 162,
                            "width": 288
                          },
                          {
                            "type": "None",
                            "mimeType": "image/jpeg",
                            "url": "http://linear-poster.prod.com.my/prod/poster/IBJQA_IVP_LAND_432x243.jpg",
                            "height": 243,
                            "width": 432
                          },
                          {
                            "type": "None",
                            "mimeType": "image/jpeg",
                            "url": "http://linear-poster.prod.com.my/prod/poster/IBJQA_IVP_LAND_448x252.jpg",
                            "height": 252,
                            "width": 448
                          },
                          {
                            "type": "None",
                            "mimeType": "image/webp",
                            "url": "http://linear-poster.prod.com.my/prod/poster/IBJQA_IVP_LAND_448x252.webp",
                            "height": 252,
                            "width": 448
                          }
                        ],
                        "synopsis": "Dekorasi pelbagai ruang rumah yang berlandaskan adab dan tatatertib Islam. Pelajari aurat rumah itu sendiri dari susun letak dan sebagainya. Program ini dihoskan oleh Qi Razali.",
                        "parentalRating": {
                          "name": "U",
                          "value": 1
                        },
                        "locator": "0"
                      },
                      {
                        "id": "uri:prg:20042866S12:D10000390X479124~86f1c19b-ee34-440c-a8ff-d8988ae7e9f8~pvr",
                        "resource": "asset",
                        "source": "pvr",
                        "contentType": "episode",
                        "title": "SpongeBob SquarePants",
                        "startDateTime": "2021-03-02T06:56:56.000Z",
                        "expirationDateTime": "2022-03-02T06:58:00.000Z",
                        "duration": 1566,
                        "recordingState": "ended",
                        "booking": {
                          "id": "uri:prg:20042866S12:D10000390X479124~86f1c19b-ee34-440c-a8ff-d8988ae7e9f8~pvr",
                          "title": "SpongeBob SquarePants",
                          "bookingType": "show",
                          "contentInstanceId": "uri:prg:20042866S12:D10000390X479124~uri:scd:2511:20042866S12:D10000390X479124:02032021065800~ltv",
                          "recordingState": "ended",
                          "created": "2021-02-27T01:36:24.000Z",
                          "lastModified": "2021-03-02T07:23:29.000Z"
                        },
                        "channel": {
                          "id": "2511",
                          "name": "NICKELODEON HD",
                          "logicalChannelNumber": 616,
                          "isLocked": false,
                          "media": [
                            {
                              "type": "regular",
                              "mimeType": "image/png",
                              "url": "http://linear-poster.prod.com.my/prod/logo/Nicklelodeon_v1.png",
                              "height": 135,
                              "width": 240
                            }
                          ]
                        },
                        "episodeTitle": "Ep246",
                        "seasonNumber": "12",
                        "episodeNumber": "246",
                        "showId": "20042866",
                        "seasonId": "20042866S12",
                        "media": [
                          {
                            "type": "None",
                            "mimeType": "image/jpeg",
                            "url": "http://linear-poster.prod.com.my/prod/poster/10000390X346816_IVP_LAND_672x378.jpg",
                            "height": 378,
                            "width": 672
                          },
                          {
                            "type": "None",
                            "mimeType": "image/webp",
                            "url": "http://linear-poster.prod.com.my/prod/poster/10000390X346816_IVP_LAND_448x252.webp",
                            "height": 252,
                            "width": 448
                          }
                        ],
                        "contentDuration": 1200,
                        "synopsis": "Where Plankton usually dumps his rotten chum is too full, so he tricks SpongeBob into hiding it around the city.",
                        "parentalRating": {
                          "name": "PG13",
                          "value": 10
                        },
                        "locator": "1"
                      }
                    ],
                    "locators": {
                      "start": "0",
                      "end": "1"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/vod": {
      "get": {
        "description": "Retrieve all personal vod content matching specific filters.\n",
        "operationId": "GET_agg-library-vod",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Define sorting for the result. The optional values are:\n* title - A to Z sort by title feild.\n* date - sort by date.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.  Limited to 255 to prevent long running queries on the implementation.\n",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "seriesFilter",
            "in": "query",
            "description": "Filter resources which are part of series or a show.\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlySeries",
                "noSeries",
                "All"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 115000
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius.",
                        "contentFlags": [
                          "adult"
                        ]
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 38000
                          }
                        ],
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "externalStarRatings": [
                          {
                            "provider": "imdb",
                            "score": 8.7
                          }
                        ],
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/recent": {
      "get": {
        "description": "Retrieve all assets that were recently partially viewed and personal VOD next episodes.\nRetrieved recent assets are controlled by the recentSource parameter.\n",
        "operationId": "GET_agg-library-recent",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma separated list to filter content instance source. Valid values:\n* pvr - pvr recorded content\n* vod - video on demand content\n* catchup - catchup event (from TSTV)\n* vodCatchup - catchup assets ingested into VOD catalog\n",
            "schema": {
              "type": "string",
              "default": "pvr,vod,catchup,vodCatchup"
            }
          },
          {
            "name": "showId",
            "in": "query",
            "description": "Return next episode to watch for the given showId. Return asset can be the last episode that is\npartially watched or the episode following the last episode that was fully watched.\nIn case the user watched the last episode or did not watch any episode, the return\nvalue is set by the showFilterDefault parameter or by system default behaviour.\nThis param is only supported when the value of the 'recentSource' param is 'nextEpisodes'.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showFilterDefault",
            "in": "query",
            "description": "enum: [firstEpisode,lastEpisode]\nThis flag defines the behaviour in case the nextEpisode is not found for a given show.\nThis can happen when no episode was watched by the users or when the last episode is fully watched by the user.\nThis param is only supported when showId param is used and the value of the 'recentSource' param is 'nextEpisodes'.\nIf the flag is not sent the behaviour will be defined by the HE. The flag is used when the\ndefault HE behaviour should be override, for example when the default is changed per classification.\nSupported Value:\n  * firstEpisode - always return the first episode available for this series\n  * lastEpisode - always return the last episode available for this series.\n",
            "schema": {
              "type": "string",
              "default": "firstEpisode"
            }
          },
          {
            "name": "recentSource",
            "in": "query",
            "description": "Comma separated list to retrieve recent assets. Valid values:\n* partiallyViewed - Retrieve only assets that were recently partially viewed.\n* nextEpisodes - Retrieve only personal VOD next episodes.\n* partiallyViewed,nextEpisodes - Retrieve assets that were recently partially viewed and personal VOD next episodes.\n* viewed - Retrieve assets that were recently fully viewed at least one time.\nNOTE: next episodes - By default, if the last episode of a season has been watched fully, the first episode of\nthe next season will be returned. Unless showFilterDefault flag is set and equal to lastEpisode.\nNOTE: next episodes is supported only for the vod source.\n",
            "schema": {
              "type": "string",
              "default": "partiallyViewed"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "collapse",
            "in": "query",
            "description": "Indicates if the response should be collapsed or not.\nBy default the behaviour of the API is to NOT collapse the items (ex: recorded episodes of a season)\nClient can provide this queryparameter in case the response should be collapsed.\nusage: \"collapse=false\"\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod",
                        "contentFlags": [
                          "adult"
                        ]
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/recent/nextEpisodes": {
      "get": {
        "description": "NOTE: API is being deprecated and replaced with agg/library/recent using the recentSource parameter.\nRetrieve all personal VOD next episodes. Single episode for each show.\nIf the last episode of a season has been watched fully, the first episode of the next season will be returned.\n-- Usage with showID --\nIn case showId query parameter is used, the API will returns the next episode of the specific show, based on the viewing status.\nIn this case if the last episode the user watched is partially watched, it will be returned. Otherwise the next unwatched episode will be returned.\nIf none of the episodes was watched or if the series was fully watched - the behaviour will be determind by the showFilterDefault query parameter\n(The default is to return the first episode available).\n",
        "operationId": "GET_agg-library-recent-nextEpisodes",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "The next episodes feature is supported only for vod.\nValid values:\n* vod - video on demand content.\n",
            "schema": {
              "type": "string",
              "default": "vod"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to the locator parameter where entries in the response list should be selected from.\nLimited to 255 to prevent long running queries on the implementation.\n",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "showId",
            "in": "query",
            "description": "Return next episode to watch for the given showId.\nreturns the last episode that is partially watched or the episode following the last episode that was fully watched.\nIn case the user watched the last episode or did not watch any episode, the return value is set by the showFilterDefault parameter or by system default behaviour.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showFilterDefault",
            "in": "query",
            "description": "enum : [firstEpisode,lastEpisode]\nThis flag defines the behaviour in case the nextEpisode is not found for a given show.\nThis can happen when no episode was watched by the users, or when the last episode is fully watched by the user.\nThe flag is valid only when showId is used.\nIf the flag is not sent the behaviour will be defined by the HE. The flag is used\nwhen the default HE behaviour should be override, for example when the default is changed per classification\nSupported Value:\n  * firstEpisode - always return the first episode available for this series\n  * lastEpisode - always return the last episode avialable for this series.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod",
                        "contentFlags": [
                          "adult"
                        ]
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/recent/viewed": {
      "get": {
        "description": "NOTE: API is being deprecated and replaced with agg/library/recent using the recentSource parameter.\nRetrieve all assets that were recently fully viewed at least one time\n",
        "operationId": "GET_agg-library-recent-viewed",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma seperated list to filter content instance source. Valid values:\n* pvr - pvr recorded content\n* vod - video on demand content\n* catchup - catchup event (from TSTV)\n* vodCatchup - catchup assets ingested into VOD catalog\n",
            "schema": {
              "type": "string",
              "default": "pvr,vod,catchup"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "collapse",
            "in": "query",
            "description": "Indicates if the response should be collapsed or not.\nBy default the behaviour of the API is to NOT collapse the items (ex: recorded episodes of a season)\nClient can provide this queryparameter in case the response should be collapsed.\nusage: \"collapse=false\"\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod",
                        "contentFlags": [
                          "adult"
                        ]
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/recent/{contentId}": {
      "delete": {
        "description": "Delete a given standalone content Id from recently viewed list.\n",
        "operationId": "DELETE_agg-library-recent-contentId",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Can be supplied as a hint to the server as to the status of the contentId that is being deleted.\nOnly necessary for use cases where the client received the contentId from an external agent other than a ctap refAPI response.\nValid values:\n* pvr - pvr recorded content\n* vod - video on demand content\n* catchup - catchup event (from TSTV)\n* vodCatchup - catchup assets ingested into VOD catalog\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The given standalone asset was successfully deleted from viewing history of selected profile",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/library/recent/show/{showId}": {
      "delete": {
        "description": "Delete a given show Id from recently viewing history list.\nThe episodes to delete are controlled by the recentSource parameter.\nNOTE: Currently only all value in recentSources is supported (which include partiallyViewed, viewed, nextEpisode).\n",
        "operationId": "DELETE_agg-library-recent-show-showId",
        "parameters": [
          {
            "name": "showId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recentSource",
            "in": "query",
            "description": "Comma separated list to filter content instance by assets status. Valid values:\n* all - Delete assets that were recently partially viewed, fully viewed at least one time and personal next episodes assets.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The given show was successfully deleted from viewing history of selected profile. Deletion includes partially viewed, fully viewed and next episodes assets.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/offers": {
      "get": {
        "operationId": "GET_agg-offers",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "offerType",
            "in": "query",
            "description": "type of offer. see offerType in offer.schema for enum definitions.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productName",
            "in": "query",
            "description": "type of product. can be one of\n1. cdvrRecordingHours\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of offers",
                  "example": {
                    "offers": [
                      {
                        "offerKey": "1234",
                        "offerType": "Subscription",
                        "offerName": "Fantastic offer",
                        "purchaseOptionKey": "2356",
                        "price": 1234,
                        "marketingMsg": "Upgrade your storage to get 100GB more for recording",
                        "associatedChannels": false,
                        "associatedVODs": false,
                        "isAuthorized": false,
                        "currencySymbol": "USD",
                        "products": [
                          {
                            "productName": "cdvrRecordingHours",
                            "productValue": "100"
                          }
                        ],
                        "media": [
                          {
                            "type": "poster",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ]
                      },
                      {
                        "offerKey": "4567",
                        "offerType": "Subscription",
                        "offerName": "Another Fantastic offer",
                        "purchaseOptionKey": "2356",
                        "price": 1234,
                        "marketingMsg": "Fantastic subscription offer",
                        "associatedChannels": true,
                        "associatedVODs": true,
                        "isAuthorized": false,
                        "currencySymbol": "USD"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Offer Type not valid"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agg/offers/{offerKey}": {
      "get": {
        "description": "Retrieve the offer information for the specific offer.\n",
        "operationId": "GET_agg-offers-offerKey",
        "parameters": [
          {
            "name": "offerKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "associatedChannels",
                    "associatedVODs",
                    "currencySymbol",
                    "marketingMsg",
                    "offerKey",
                    "offerName",
                    "offerType",
                    "price",
                    "purchaseOptionKey"
                  ],
                  "type": "object",
                  "properties": {
                    "offerKey": {
                      "type": "string",
                      "description": "Offer Key for the offer"
                    },
                    "offerName": {
                      "type": "string",
                      "description": "Offer name"
                    },
                    "purchaseOptionKey": {
                      "type": "string",
                      "description": "Purchase key to be used in OfferId field of purchase schema for actual purchase"
                    },
                    "offerType": {
                      "type": "string",
                      "description": "The type of the offer - subscription etc",
                      "enum": [
                        "Subscription"
                      ]
                    },
                    "marketingMsg": {
                      "type": "string",
                      "description": "Message for the user, describing the offer details"
                    },
                    "price": {
                      "type": "number",
                      "description": "The price value.The price is specified in 10000th of the currency, e.g., 37500 is equivalent to a price of 3.75."
                    },
                    "currencySymbol": {
                      "type": "string",
                      "description": "ISO 4217 currency symbol for the price"
                    },
                    "associatedChannels": {
                      "type": "boolean",
                      "description": "true if there are channels associated with this offer"
                    },
                    "associatedVODs": {
                      "type": "boolean",
                      "description": "true if there are subscription VOD assets associated with this offer"
                    },
                    "isAuthorized": {
                      "type": "boolean",
                      "description": "true if the offer is already authorized for the household."
                    },
                    "products": {
                      "type": "array",
                      "description": "The products array is provided for non-content offers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "media": {
                      "type": "array",
                      "description": "Media to use to present a poster for this offer.",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Schema for an Offer",
                  "example": {
                    "offerKey": "1234",
                    "offerName": "Fantastic offer",
                    "purchaseOptionKey": "2356",
                    "offerType": "Subscription",
                    "price": 1234,
                    "marketingMsg": "Upgrade your storage to get 100GB more for recording",
                    "associatedChannels": false,
                    "associatedVODs": false,
                    "isAuthorized": false,
                    "currencySymbol": "USD",
                    "products": [
                      {
                        "productName": "cdvrRecordingHours",
                        "productValue": "100"
                      }
                    ],
                    "media": [
                      {
                        "type": "poster",
                        "mimeType": "image/jpeg",
                        "url": "http://img.server.com/65900.jpg",
                        "height": 300,
                        "width": 200
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels": {
      "get": {
        "description": "Retrieve a list of channels and their metadata, but without events.\n",
        "operationId": "GET_channels",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "isPlayable",
            "in": "query",
            "description": "Filter for channels which are consumable in the current device (i.e. the channel's format is playable on the device). If this filter false or not given, both playable and non playable channels are returned. If true, return only playable channels.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isEntitled",
            "in": "query",
            "description": "Filter for channels which the household associated to this device is entitled to. If this filter is false or not given, return entitled and not entitled channels. If true, return only entitled channels.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "__locator__; GUID of the channel that is used as the base location point of the offset in the response list.\nThis channel will be the first in the returned list.\nShall not be supplied together with any other locator, otherwise a 400 response will be returned.\nIf not provided, the system uses the first channel in the channel list for the client\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logicalChannelNumber",
            "in": "query",
            "description": "__locator__; Logical channel number of the channel (relevant for the calling device) that is used as the base location point of the offset in the response list.\nThis channel will be the first in the returned list.\nThis parameter should be used for direct channel access. Shall not be supplied together with any other locator, otherwise a 400 response will be returned.\ndefault is the first channel in the channel list for the client.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "genreId",
            "in": "query",
            "description": "Filter resources to those associated with the supplied genreId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radioFilter",
            "in": "query",
            "description": "Filter Radio channels. If not provided, radio channels are NOT included in the response.\nwithRadio -> Radio channels AND other channels (video) are provided in the response.\n",
            "schema": {
              "type": "string",
              "enum": [
                "withRadio"
              ]
            }
          },
          {
            "name": "offerKeys",
            "in": "query",
            "description": "Comma-separated list of offerKeys.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to a location (specified by the locator, channelId or logicalChannelNumber parameter) where entries in the response list should be selected from.\nLimited to 255 to prevent long running queries on the implementation.\nClients should get results to obtain a new locator, channelId or logicalChannelNumber (depending on API) to page further through the list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of channels without events",
                  "example": {
                    "count": 3,
                    "total": 204,
                    "channels": [
                      {
                        "name": "Program 70",
                        "logicalChannelNumber": 1,
                        "id": "CHID_1",
                        "isFavorite": true,
                        "isEntitled": true,
                        "isLocked": false,
                        "isPlayable": true,
                        "videoFormat": "hd",
                        "synopsis": "CNN - Live from US",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                          },
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/twenty_two.svg"
                          },
                          {
                            "type": "poster",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                          }
                        ],
                        "channelFlags": [
                          "new"
                        ]
                      },
                      {
                        "name": "HBO 2",
                        "logicalChannelNumber": 2,
                        "id": "CHID_2",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false,
                        "isPlayable": true,
                        "videoFormat": "4k",
                        "synopsis": "Home Box Office Rental",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/three_hd.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/three_hd.svg"
                          },
                          {
                            "type": "poster",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/three_hd.svg"
                          }
                        ]
                      },
                      {
                        "name": "Fox Central",
                        "logicalChannelNumber": 3,
                        "id": "CHID_3",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false,
                        "deliveryTypes": [
                          "DTH"
                        ],
                        "isPlayable": true,
                        "videoFormat": "hd",
                        "synopsis": "Fox News",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/fox_news.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/fox_news.svg"
                          },
                          {
                            "type": "poster",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/fox_news.svg"
                          }
                        ]
                      },
                      {
                        "name": "GalGalatz",
                        "logicalChannelNumber": 5,
                        "id": "CHID_5",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false,
                        "deliveryTypes": [
                          "DTH"
                        ],
                        "isPlayable": true,
                        "synopsis": "cool songs",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/fox_news.svg"
                          }
                        ],
                        "channelFlags": [
                          "radio"
                        ],
                        "externalLinks": {
                          "radioCurrentSong": {
                            "href": "https://cdn.location.com"
                          }
                        }
                      },
                      {
                        "name": "Netflix",
                        "logicalChannelNumber": 999,
                        "id": "999",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false,
                        "deliveryTypes": [
                          "DTH"
                        ],
                        "isPlayable": true,
                        "isApp": true,
                        "appId": "Netflix",
                        "videoFormat": "hd",
                        "synopsis": "Netflix is a subscription service",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/netflix.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/netflix.svg"
                          },
                          {
                            "type": "poster",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/netflix.svg"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/{channelId}": {
      "get": {
        "description": "Retrieve the given channel's metadata without its schedule (events). The offers associated with the channel are provided only for this end point.\n",
        "operationId": "GET_channels-channelId",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a channel object",
                  "example": {
                    "name": "Channel 1",
                    "logicalChannelNumber": 1,
                    "id": "CHID_1",
                    "isFavorite": true,
                    "isPlayable": true,
                    "isLocked": false,
                    "synopsis": "BBC channel featuring Kids",
                    "genres": [
                      {
                        "genreId": "1",
                        "name": "Movies"
                      }
                    ],
                    "media": [
                      {
                        "type": "regular",
                        "mimeType": "image/svg+xml",
                        "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                      },
                      {
                        "type": "inverted",
                        "mimeType": "image/svg+xml",
                        "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/twenty_two.svg"
                      },
                      {
                        "type": "poster",
                        "mimeType": "image/svg+xml",
                        "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                      }
                    ],
                    "purchases": [
                      {
                        "offerId": "Subscription~79900~sw_svcn_kids",
                        "currencySymbol": "AED",
                        "authorizationType": "Subscription",
                        "price": 79900,
                        "marketingMsg": "Get all the kids movies, shows and channels include the popular movies Pokemon + Hunter Street seasons.",
                        "purchaseWindowStartTime": "2019-12-20T19:17:52.000Z",
                        "purchaseWindowEndTime": "2099-12-31T19:59:59.000Z",
                        "purchaseOptionStatus": "active",
                        "inAppOfferKey": "sw_svcn_kids"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/tuningInfo": {
      "get": {
        "description": "Returns the minimal channel information needed for tuning in offline mode for each channel in the lineup\nPagination is currently not supported.\n",
        "operationId": "GET_channels-tuningInfo",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "multipleDeliveries",
            "in": "query",
            "description": "When set to true, the API will return all the relevant deliveries, including video format, for each channel, when set to false\nOnly the most fitting delivery according to the device features will be returned.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ignorePersonalSort",
            "in": "query",
            "description": "when this flag is set to true, channels will not be returned according to the user personal sorting even if the user has such sorting set.\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of channelsTuningInfo",
                  "example": {
                    "count": 3,
                    "total": 204,
                    "channelsTuningInfo": [
                      {
                        "name": "Program 70",
                        "logicalChannelNumber": 1,
                        "id": "CHID_1",
                        "drmType": "VGDRM",
                        "index": 0,
                        "playUrl": "http://127.0.0.1:8080/dms/rf?frequency=591000000&modulation=16&pgmno=101"
                      },
                      {
                        "name": "HBO 2",
                        "logicalChannelNumber": 2,
                        "id": "CHID_2",
                        "drmType": "none",
                        "index": 1,
                        "playUrl": "http://127.0.0.1:8080/dms/rf?frequency=591000000&modulation=16&pgmno=102"
                      },
                      {
                        "name": "Fox Central",
                        "logicalChannelNumber": 3,
                        "id": "CHID_3",
                        "drmType": "none",
                        "index": 2,
                        "playUrl": "http://127.0.0.1:8080/dms/rf?frequency=591000000&modulation=16&pgmno=103"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/channels/recent": {
      "get": {
        "description": "Retrieve a list of the recently viewed channels of a user profile.\nThe currently playing channel (devices/me/settings/lastChannel) is filtered out of the response.\nChannels are added to the list when they are viewed for more then a configurable viewing threshold,\nand are ordered in reverse chronological sequence of most recently visited to least recently visited.\nNote: In case it is not full, the list is filled from the channel lineup (the size of the list is configurable at the microservice holding the data)\n",
        "operationId": "GET_channels-recent",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "ISO 8601 compliant UTC date time, defining the startTime for the events to return for each channel.\nThis value is inclusive - events starting earlier and ongoing at this time will be included in the response.\nIf not provided, the system will use the current time.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventsLimit",
            "in": "query",
            "description": "Number of events returned per channel relative to the specified startDateTime.\n",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "currentChannelFirst",
            "in": "query",
            "description": "When true the currently playing channel is returned as the first item in the response. When false or not given, the currently playing\nchannel will be filtered out of the response.\n",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isPadded",
            "in": "query",
            "description": "When true (or not given) if there are not <limit> recent channels available, the returned channel list is\npadded with linear channels (starting with channel 1) from the channel lineup\n",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of channels to fetch.\n",
            "required": true,
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "default": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of channels with events",
                  "example": {
                    "count": 3,
                    "total": 204,
                    "channels": [
                      {
                        "name": "Program 70",
                        "logicalChannelNumber": 1,
                        "id": "CHID_1",
                        "isFavorite": true,
                        "isPlayable": true,
                        "videoFormat": "hd",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                          },
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/twenty_two.svg"
                          }
                        ],
                        "schedule": [
                          {
                            "id": "IID_34234141",
                            "resource": "asset",
                            "source": "ltv",
                            "startDateTime": "2015-10-05T14:30:00.000Z",
                            "contentType": "standalone",
                            "title": "U0312S22E025:Name:En",
                            "duration": 1800,
                            "media": [
                              {
                                "type": "small",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster025_eng.jpg",
                                "height": 135,
                                "width": 240
                              },
                              {
                                "type": "large",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/sposter025_eng.jpg",
                                "height": 135,
                                "width": 240
                              }
                            ],
                            "synopsis": "This is a short synopsis."
                          }
                        ]
                      },
                      {
                        "name": "HBO 2",
                        "logicalChannelNumber": 2,
                        "id": "CHID_2",
                        "isFavorite": true,
                        "isPlayable": true,
                        "videoFormat": "hd",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/three_hd.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/three_hd.svg"
                          }
                        ],
                        "schedule": [
                          {
                            "id": "IID_85454342",
                            "resource": "asset",
                            "source": "ltv",
                            "startDateTime": "2015-10-05T14:30:00.000Z",
                            "contentType": "episode",
                            "title": "Game of Thrones",
                            "duration": 300000,
                            "episodeNumber": "10",
                            "seasonNumber": "2",
                            "episodeTitle": "Winter is coming",
                            "media": [
                              {
                                "type": "small",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster149_eng.jpg",
                                "height": 135,
                                "width": 240
                              },
                              {
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/sposter149_eng.jpg",
                                "height": 135,
                                "width": 240
                              }
                            ],
                            "synopsis": "This is a short synopsis."
                          }
                        ]
                      },
                      {
                        "name": "Fox Central",
                        "logicalChannelNumber": 3,
                        "id": "CHID_3",
                        "deliveryTypes": [
                          "DTH"
                        ],
                        "isFavorite": true,
                        "isPlayable": true,
                        "videoFormat": "4k",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/fox_news.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/fox_news.svg"
                          }
                        ],
                        "schedule": [
                          {
                            "id": "IID_52353453",
                            "resource": "asset",
                            "source": "ltv",
                            "startDateTime": "2015-10-05T14:30:00.000Z",
                            "contentType": "standalone",
                            "title": "G0312S25E005:Name:En",
                            "duration": 10800,
                            "media": [
                              {
                                "type": "small",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster005_eng.jpg",
                                "height": 135,
                                "width": 240
                              },
                              {
                                "type": "large",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/sposter005_eng.jpg",
                                "height": 135,
                                "width": 240
                              }
                            ],
                            "synopsis": "This is a short synopsis."
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/me": {
      "get": {
        "description": "Retrieve the details of the calling client's device.\n",
        "operationId": "GET_devices-me",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for a Device",
                  "example": {
                    "id": "50555",
                    "type": "COMPANION",
                    "displayDeviceType": "Windows-PC",
                    "settings": {
                      "displayName": "UND",
                      "manufacturer": "SONY",
                      "model": "1.1",
                      "operatingSystemName": "OS",
                      "operatingSystemVersion": "2",
                      "applicationVersion": "998",
                      "deviceSerialNumber": "123",
                      "uiFullscreenHintShown": 4,
                      "deploymentMode": "iptvMulticast"
                    },
                    "drmType": "VGDRM",
                    "ipAddress": "1.2.3.4",
                    "registeredDateTime": "2015-06-25T14:51:54.402Z",
                    "activeUserProfile": "50555_HH_3"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/me/downloads": {
      "get": {
        "description": "Returns a list of this device's downloads\n",
        "operationId": "GET_devices-me-downloads",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Downloads get API",
                  "example": {
                    "downloads": [
                      {
                        "contentInstanceId": "disney.com_DSNY2395427000000101~disney.com_DSNY2395427000000103",
                        "downloadId": "5dd5172dcacb400008a36295",
                        "playPosition": 44,
                        "status": "inQueue"
                      },
                      {
                        "contentInstanceId": "disney.com_DSNY2395427000000122~disney.com_DSNY2395427000000123",
                        "downloadId": "5dd51699cacb400008a36294",
                        "playPosition": 0,
                        "status": "completed"
                      }
                    ]
                  }
                }
              }
            }
          },
          "204": {
            "description": "No downloads assets.",
            "content": {}
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a download resource that will be used for downloading the content into the device and for following its status.\n",
        "operationId": "POST_devices-me-downloads",
        "parameters": [
          {
            "name": "instanceId",
            "in": "query",
            "description": "The contentInstance Id of the content to download.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Download identifier, globally unique"
                    },
                    "drmType": {
                      "type": "string",
                      "description": "The DRM type used by this client",
                      "enum": [
                        "none",
                        "fpDrm",
                        "wvDrm"
                      ]
                    },
                    "drmProperties": {
                      "type": "object",
                      "properties": {
                        "blob": {
                          "type": "string",
                          "description": "An opaque blob to be passed by the application to the download component.  The download component will know how to unpack this blob into the required data."
                        }
                      },
                      "description": "An object supplying the DRM properties to use for download this content"
                    },
                    "creationDateTime": {
                      "type": "string",
                      "description": "creation date",
                      "format": "date-time"
                    },
                    "expirationDate": {
                      "type": "string",
                      "description": "The license expiration date of this download item irrespective of playback being initiated",
                      "format": "date-time"
                    },
                    "retentionAfterPlayback": {
                      "type": "integer",
                      "description": "The expiration time in minutes after first playback of a successfully downloaded asset"
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "downloadUrl": {
                          "type": "string",
                          "description": "The URL the client should use to download the content.  The URL will be in a format appropriate for the device."
                        },
                        "contentInstance": {
                          "type": "string",
                          "description": "Link allowing the client to retrieve more information about the contentInstance associated with this session.  Only present if the session is an on demand (VOD, Planner, Catchup) session and not a linear channel session."
                        }
                      },
                      "description": "A set of links to allow the client to retrieve related information and manipulate the session."
                    }
                  },
                  "description": "Schema for the downloads post API",
                  "example": {
                    "id": "DOWNLOAD_ID_1",
                    "creationDateTime": "2015-10-05T14:30:00.000Z",
                    "drmType": "fpDrm",
                    "drmProperties": {
                      "blob": "ABCDEF123456789"
                    },
                    "expirationDate": "2017-12-25T12:05:21.623Z",
                    "retentionAfterPlayback": 2880
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_ENTITLED",
                    "errors": [
                      "Household is not entitled to content: vod002"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/me/downloads/{downloadId}/drmProperties": {
      "get": {
        "description": "This API can be used for fetching the download details to acquire a license if the client requires them and no longer has the response from this download's creation\n",
        "operationId": "GET_devices-me-downloads-downloadId-drmProperties",
        "parameters": [
          {
            "name": "downloadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns VOD asset token information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for the get download drm properties API",
                  "example": {
                    "drmProperties": {
                      "blob": "ABCDEF123456789"
                    },
                    "expirationDateTime": "2021-12-25T12:05:21.623Z"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The download object doesn't exist.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "EDownloadNotFound",
                    "errors": [
                      "Invalid Download Id"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/me/downloads/sync": {
      "put": {
        "description": "Overrides the downloads by the list from the client.\nItems that are not in the list will be deleted from the server list of downloads.\nCan be used for synchronizing multiple downloads with the server when the device comes online.\n",
        "operationId": "PUT_devices-me-downloads-sync",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "downloads"
                ],
                "type": "object",
                "properties": {
                  "downloads": {
                    "type": "array",
                    "items": {
                      "required": [
                        "contentId",
                        "dateTime",
                        "downloadId",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "downloadId": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "description": "status of a download resource",
                          "enum": [
                            "inQueue",
                            "downloading",
                            "paused",
                            "failed",
                            "completed",
                            "cancelled",
                            "deleted",
                            "resumed"
                          ]
                        },
                        "failureReason": {
                          "type": "string",
                          "description": "(Optional) on status failed, failure reason can be provided as well",
                          "enum": [
                            "ERR_NAME_LOOKUP_FAILED",
                            "ERR_CONNECTION_ERROR",
                            "ERR_SERVER_ERROR",
                            "ERR_CONNECTION_TIMEDOUT",
                            "ERR_BAD_REQUEST",
                            "ERR_ACCESS_FORBIDDEN",
                            "ERR_PROTO_ERROR",
                            "ERR_NO_DATA",
                            "ERR_INTERNAL_ERROR",
                            "ERR_OUT_OF_MEMORY",
                            "ERR_SSL_CONNECT_ERROR",
                            "ERR_TOO_MANY_REDIRECTS",
                            "ERR_LICENSE_FETCH_FAILED",
                            "ERR_LICENSE_FETCH_TOKEN_INVALID",
                            "ERR_LICENSE_FETCH_FORBIDDEN",
                            "ERR_LICENSE_FETCH_TOKEN_FAILED",
                            "ERR_LICENSE_CDM_PROCESSING_ERROR",
                            "ERR_URL_NOT_FOUND",
                            "ERR_CLIENT_DOWNLOADER_UNKNOWN_ERROR",
                            "ERR_CLIENT_DOWNLOADER_BG_SERVICE_ERROR"
                          ]
                        },
                        "clientFailureCode": {
                          "type": "string",
                          "description": "Error code returned by the client downloader describing the failure reason"
                        },
                        "lastPlayPosition": {
                          "type": "integer",
                          "description": "(Optional) The last played position, in seconds from the start, that the user got to when viewing this content instance."
                        },
                        "contentId": {
                          "type": "string",
                          "description": "Unique identifier for a content item"
                        },
                        "dateTime": {
                          "type": "string",
                          "description": "Time (stamp) when the status was updated in UTC",
                          "format": "date-time"
                        },
                        "downloadedSize": {
                          "type": "number",
                          "description": "The size of the downloaded asset (In KB) local storage. Provided only for status=completed"
                        },
                        "downloadBitrate": {
                          "type": "number",
                          "description": "Accumulated bitrate (In KB per second) of download. Provided only for status=completed"
                        }
                      }
                    }
                  }
                },
                "description": "Schema for the downloads sync API",
                "example": {
                  "downloads": [
                    {
                      "downloadId": "5c9b4e4c4a5d5a0c026fb7e6",
                      "contentId": "IID_65500",
                      "status": "failed",
                      "dateTime": "2015-09-19T00:00:00.000Z",
                      "failureReason": "ERR_NAME_LOOKUP_FAILED"
                    },
                    {
                      "downloadId": "5c2b1e5e5a18cb0063572483",
                      "status": "completed",
                      "contentId": "IID_65900",
                      "downloadBitrate": 450,
                      "downloadedSize": 545000,
                      "dateTime": "2015-09-20T00:00:00.000Z"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The downloads statuses successfully changed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/devices/me/playsessions": {
      "get": {
        "description": "Retrieve all current play sessions on this device.\n",
        "operationId": "GET_devices-me-playsessions",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of play sessions",
                  "example": {
                    "count": 4,
                    "total": 4,
                    "playSessions": [
                      {
                        "id": "PSID_1",
                        "keepAliveRate": 300,
                        "drmType": "VGDRM",
                        "trickModes": {
                          "restricted": true,
                          "disabledTrickModes": [
                            "pause",
                            "rewind",
                            "fast-forward"
                          ]
                        },
                        "drmProperties": {
                          "blob": "ABCDEF123456789"
                        },
                        "channelId": "Channel_1",
                        "startPlayPosition": 9876,
                        "audioLanguages": [
                          "eng",
                          "fre"
                        ],
                        "subtitleLanguages": [
                          "eng",
                          "fr"
                        ],
                        "_links": {
                          "playUrl": {
                            "href": "http://example.com/assets/content/amazingMovie1.m3u8"
                          },
                          "keepAlive": {
                            "href": "http://workingservernameexample:1234/sm/streamingSession/b5af3ff1d033463dbd9039d9d7ccfbe3/keepAlive",
                            "templated": false,
                            "method": "POST"
                          }
                        }
                      },
                      {
                        "id": "PSID_2",
                        "keepAliveRate": 300,
                        "drmType": "none",
                        "audioLanguages": [
                          "eng",
                          "fre"
                        ],
                        "subtitleLanguages": [
                          "eng",
                          "fr"
                        ],
                        "trickModes": {
                          "restricted": false
                        },
                        "startPlayPosition": 0,
                        "contentInstanceId": "abcd",
                        "_links": {
                          "playUrl": {
                            "href": "http://example.com/assets/content/amazingMovie2.m3u8"
                          },
                          "keepAlive": {
                            "href": "http://workingservernameexample:1234/sm/streamingSession/b5af3ff1d033463dbd9039d9d7ccfbe4/keepAlive",
                            "templated": false,
                            "method": "POST"
                          }
                        }
                      }
                    ],
                    "locators": {
                      "start": "abcd1234efgh",
                      "end": "zxy321"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a play session that will be used for streaming content.\nContent can be linear, VOD or DVR.\nThe deviceId must be set to the special value 'me'\n",
        "operationId": "POST_devices-me-playsessions",
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "description": "ChannelId of the channel to tune to.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "query",
            "description": "The contentInstance Id of the content to watch.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startingPosition",
            "in": "query",
            "description": "Starting position for the play back of the content. It is passed through directly in the response. specified in seconds from the start of the content.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sessionType",
            "in": "query",
            "description": "enum: [view,pip]\nSession type of the session to open. possible values view and pip, default value is view\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "daiConsentBlob",
            "in": "query",
            "description": "The daiConsentBlob received from the GET /household/me/daiPreferences/{consentGroup}/display or from the PUT /household/me/daiPreferences/{consentGroup} response. The value should be urlEncoded.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Can be supplied as a hint to the server as to the status of the asset that is being played.\nOnly necessary for use cases where the client received the instanceId from an external agent other than a ctap refAPI response.\nValid values:\n* vod - video on demand content\n* pvr - pvr recorded content\n* catchup - online catchup content\n* restart - restart broadcast content\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "networkType",
            "in": "query",
            "description": "The type of network the client is using to consume the content.  Clients should attempt to specify the most specific wireless connection type, if it is not possible to detect the specific type of conection a client should use `cell` or `wi-fi`.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "wired",
                "wi-fi",
                "cell",
                "2g",
                "3g",
                "lte"
              ]
            }
          },
          {
            "name": "isInHome",
            "in": "query",
            "description": "this flag is set to true if the device is currently in home. This flag is used to enforce in/out home policies.",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Identifier for the session"
                    },
                    "captureStartTime": {
                      "type": "string",
                      "description": "Capture start time returned in POST /devices/me/playsession response but not in the GET response.",
                      "format": "date-time"
                    },
                    "captureEndTime": {
                      "type": "string",
                      "description": "Capture end time returned in POST /devices/me/playsession response but not in the GET response.",
                      "format": "date-time"
                    },
                    "keepAliveRate": {
                      "type": "integer",
                      "description": "The rate, in seconds, the client should invoke the `keepAlive` link to keep this session active."
                    },
                    "trickModes": {
                      "type": "object",
                      "properties": {
                        "restricted": {
                          "type": "boolean",
                          "description": "Flag to determine if any trick modes are restricted for this Content.  If false then all trick modes are available.  If true see `disabledTrickModes` for the list of trick modes that should be disabled for this Content."
                        },
                        "disabledTrickModes": {
                          "type": "array",
                          "description": "A list of trick modes that should be disabled by the client when playing this Content.",
                          "items": {
                            "type": "string",
                            "enum": [
                              "pause",
                              "rewind",
                              "fast-forward",
                              "seek-forward",
                              "seek-backward"
                            ]
                          }
                        }
                      },
                      "description": "Details of what trick modes (pause, rewind, fast forward, jump) are supported when playing back this content"
                    },
                    "startPlayPosition": {
                      "type": "integer",
                      "description": "If present the position that the player should start from, in seconds, when playing the content."
                    },
                    "drmType": {
                      "type": "string",
                      "description": "The type of DRM applied to the content or channel.",
                      "enum": [
                        "VGDRM",
                        "none"
                      ]
                    },
                    "drmProperties": {
                      "type": "object",
                      "properties": {
                        "blob": {
                          "type": "string",
                          "description": "An opaque blob to be passed by the application to the player component.  The player component will know how to unpack this blob into the required data."
                        }
                      },
                      "description": "An object supplying the DRM properties to use to play back this content or channel"
                    },
                    "property": {
                      "type": "object",
                      "properties": {}
                    },
                    "adInsertion": {
                      "type": "object",
                      "properties": {},
                      "description": "The adInsertion applicable for this session. This is GIGO object moving over from SM to Client"
                    },
                    "sessionBlob": {
                      "type": "string",
                      "description": "The session blob needed to be sent to SM in the payload of the keep-alive request, this will be added to the JSON body of the request with the key 'sessionBlob'"
                    },
                    "playbackStartTime": {
                      "type": "string",
                      "description": "Event start time when the authorization becomes valid. Client is expected to start playback at this time. Returned only in POST",
                      "format": "date-time"
                    },
                    "playbackEndTime": {
                      "type": "string",
                      "description": "Event end time when the authorization is no longer valid. Client is expected to stop playback at this time. Returned only in POST",
                      "format": "date-time"
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "playUrl": {
                          "type": "string",
                          "description": "The URL the client should use to acquire and play the content.  The URL will be in a format appropriate for the device.  The Application should be able to pass the URL to thePlayer component in the client which should be able to understand how to play the content."
                        },
                        "keepAlive": {
                          "type": "string",
                          "description": "The link the client should call to inform the server that the session is still active and should be kept alive.  The client should call this URL every `keepAliveRate` seconds. This link must be invoked with a POST verb."
                        }
                      },
                      "description": "A set of links to allow the client to playback the content"
                    }
                  },
                  "description": "Schema for a play session",
                  "example": {
                    "id": "PSID_1",
                    "keepAliveRate": 300,
                    "drmType": "VGDRM",
                    "trickModes": {
                      "restricted": true,
                      "disabledTrickModes": [
                        "pause",
                        "rewind",
                        "fast-forward"
                      ]
                    },
                    "drmProperties": {
                      "blob": "ABCDEF123456789"
                    },
                    "startPlayPosition": 9876,
                    "channelId": "Channel_1",
                    "audioLanguages": [
                      "eng",
                      "fre"
                    ],
                    "subtitleLanguages": [
                      "eng",
                      "fre"
                    ],
                    "sessionBlob": "eNoLycgsVgCiRIXk/NyCotTi4tQUheKSosy8dACInAoi",
                    "playbackStartTime": "2015-10-05T14:30:00.000Z",
                    "playbackEndTime": "2015-10-05T15:30:00.000Z",
                    "_links": {
                      "playUrl": {
                        "href": "http://example.com/assets/content/amazingMovie1.m3u8"
                      },
                      "keepAlive": {
                        "href": "http://workingservernameexample:1234/sm/streamingSession/b5af3ff1d033463dbd9039d9d7ccfbe3/keepAlive",
                        "templated": false,
                        "method": "POST"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_ENTITLED",
                    "errors": [
                      "Household is not entitled to channel: chan002"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a live conflict session",
                  "example": {
                    "conflictType": "tuner",
                    "conflictsTuner": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "ltv",
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "isEntitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius."
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "ltv",
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "isEntitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      }
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "description": "Destroy all play sessions associated with this device.\nThe deviceId must be set to the special value 'me'\n",
        "operationId": "DELETE_devices-me-playsessions",
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/me/playsessions/{sessionId}": {
      "post": {
        "description": "Update a play session with new client state, e.g. the network type the client is connected on.  The session may still be valid and the API will return 204 and the client can continue to consume from the same session.  The session may not be valid any more and the API will return with 403 with an error code to indicate if the client should attempt to create a new session or not, in either case the session is no longer valid and the client should cease consumption from the session.\n**Errors:**\n- NETWORK_TYPE_ERROR - It is not possible to play this content on the devices current network\n- SESSION_RECREATION_REQUIRED - This session is no longer valid, however the client may try to create a new session to consume the content\n",
        "operationId": "POST_devices-me-playsessions-sessionId",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionType",
            "in": "query",
            "description": "enum: [view,pip]\nThe session type which the session is updated to, possible values are view and pip.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "The play session is still valid, no response body as nothing has changed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The play session is no longer valid",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NETWORK_TYPE_ERROR",
                    "errors": [
                      "It is not possible to play this content on the devices current network type cell"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "description": "Destroy the play session.\nThe client can optionally provide the last played position that the cloud will associate with the content for this subscriber.\n",
        "operationId": "DELETE_devices-me-playsessions-sessionId",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playPosition",
            "in": "query",
            "description": "Play position to store by the cloud for this content and for this subscriber. playPosition in seconds from start the content. The playPosition will be stored in lastPlayPosition of schema asset.schema",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "play session successfully deleted.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/me/activeUserProfile": {
      "put": {
        "description": "Update the active UserProfileId of this device. Only the special value 'me' is supported as the deviceId.\nClient can use the api /userProfiles to get the existing userProfileIds and /devices/me to see the current device's current activeUserProfile.\nThe http code 303(redirect) is returned with the \"Location\" value to initiate the \"rebuild session data\" sequence.\nThe http layer in the client is expected to correctly handle this redirect and as a result,\nThe final response from this call will be httpCode 200 with the updated device details in its body.\n",
        "operationId": "PUT_devices-me-activeUserProfile",
        "parameters": [
          {
            "name": "x-pin-token",
            "in": "header",
            "description": "Identifies the token received in PIN verification response.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "userProfileId"
                ],
                "type": "object",
                "properties": {
                  "userProfileId": {
                    "type": "string",
                    "description": "The user profile ID of the active profile on this device."
                  }
                },
                "description": "Schema to update the activeUserProfileId of device",
                "example": {
                  "userProfileId": "1234_HH_3"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "303": {
            "description": "",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/devices/me/settings": {
      "post": {
        "description": "Set one or more device settings values\n",
        "operationId": "POST_devices-me-settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Schema for the settings of a device that are shared by the post/patch device settings API",
                "example": {
                  "lastChannel": "1234",
                  "displayName": "Little iPad",
                  "manufacturer": "Apple",
                  "model": "iPad Air",
                  "operatingSystemName": "iOS",
                  "operatingSystemVersion": "8.1.3",
                  "applicationVersion": "2.34.1234",
                  "deviceSerialNumber": "A76559450000D151",
                  "activeUserProfile": "HH1234_1",
                  "displayMigrationScreens": false
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "patch": {
        "description": "Set one or more device settings values\n",
        "operationId": "PATCH_devices-me-settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Schema for the settings of a device that are shared by the post/patch device settings API",
                "example": {
                  "lastChannel": "1234",
                  "displayName": "Little iPad",
                  "manufacturer": "Apple",
                  "model": "iPad Air",
                  "operatingSystemName": "iOS",
                  "operatingSystemVersion": "8.1.3",
                  "applicationVersion": "2.34.1234",
                  "deviceSerialNumber": "A76559450000D151",
                  "activeUserProfile": "HH1234_1",
                  "displayMigrationScreens": false
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/devices/me/settings/lastChannel": {
      "get": {
        "description": "Retrieves the lastChannel value of a single device setting.\n",
        "operationId": "GET_devices-me-settings-lastChannel",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for the lastChannel setting of a device which can be retrieved by application using /devices/me/settings/lastChannel",
                  "example": {
                    "lastChannel": "6"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "Invalid setting dummy!",
                    "errors": [
                      "Invalid setting dummy!"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/me/settings/deploymentMode": {
      "put": {
        "description": "Store the current deployment mode of the device (applicable for managed STB)\n",
        "operationId": "PUT_devices-me-settings-deploymentMode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "deploymentMode"
                ],
                "type": "object",
                "properties": {
                  "deploymentMode": {
                    "title": "deploymentMode",
                    "type": "string",
                    "description": "The current deployment mode - only for managed STB",
                    "enum": [
                      "dth",
                      "ipMDU",
                      "iptvUnicast",
                      "iptvMulticast"
                    ]
                  }
                },
                "example": {
                  "deploymentMode": "ipMDU"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "303": {
            "description": "",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/devices/me/migration/start": {
      "post": {
        "description": "Mark that the migration has started.\nThe time at which the migration started will be set in the device migration data.\nThe start time can only be set once, recurring calls will not change the start time of the device migration.\n",
        "operationId": "POST_devices-me-migration-start",
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/devices/me/migration/{migrationType}/status": {
      "put": {
        "description": "Sets the status of the given migrationType.\nThe supported migrationTypes are: settings, pin, stb.\n",
        "operationId": "PUT_devices-me-migration-migrationType-status",
        "parameters": [
          {
            "name": "migrationType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "status"
                ],
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The status of the migration type",
                    "enum": [
                      "IN-PROGRESS",
                      "SUCCESS",
                      "SUCCESS-PARTIAL",
                      "FAILURE"
                    ]
                  }
                },
                "description": "Schema for setting device migration status for specific migration type",
                "example": {
                  "status": "IN-PROGRESS"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/devices/{deviceId}": {
      "delete": {
        "description": "Delete a specific device.\nThis API cannot be used to delete the device that is calling the API.\n",
        "operationId": "DELETE_devices-deviceId",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "device successfully deleted.",
            "content": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "only deviceId other than the calling device is supported"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "UPM device xxx not found"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "description": "Return all root categories. This is the list of root categories that will be returned without child categories or any hypermedia links content\nWhen depth parameter is given and its value is more than 1 the response will include up do 'depth' levels of children of root categories.\nEvery leaf category in the response will also contain a link for fetching its content.\n",
        "operationId": "GET_categories",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of classification tree to include in the response.\n",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for a Category",
                  "example": {
                    "id": "node:root",
                    "type": "category_list",
                    "name": "ROOT",
                    "leaf": false,
                    "categories": [
                      {
                        "id": "vod",
                        "type": "category_list",
                        "name": "VOD Store",
                        "leaf": false,
                        "categories": [
                          {
                            "id": "node:urn:spvss:ih:kd:term:store:GENRES~root",
                            "name": "GENRES",
                            "type": "category_list",
                            "sortOptions": [],
                            "isAdult": false,
                            "leaf": false,
                            "categories": [
                              {
                                "id": "node:urn:spvss:ih:kd:term:store:GENRES:ACTION~node:urn:spvss:ih:kd:term:store:GENRES:ACTION",
                                "name": "ACTION",
                                "type": "content_full",
                                "contentDataModel": "assetList",
                                "defaultSortOrder": "-date",
                                "sortOptions": [
                                  "-date",
                                  "title"
                                ],
                                "isAdult": false,
                                "leaf": true,
                                "source": "vod",
                                "synopsis": {
                                  "long": "ACTION"
                                },
                                "_links": {
                                  "content": {
                                    "method": "GET",
                                    "href": "/agg/content?categoryId=node%3Aurn%3Aspvss%3Aih%3Akd%3Aterm%3Astore%3AGENRES%3AACTION"
                                  }
                                }
                              },
                              {
                                "id": "node:urn:spvss:ih:kd:term:store:GENRES:ADVENTURE~node:urn:spvss:ih:kd:term:store:GENRES:ADVENTURE",
                                "name": "ADVENTURE",
                                "type": "content_full",
                                "contentDataModel": "assetList",
                                "defaultSortOrder": "-date",
                                "sortOptions": [
                                  "-date",
                                  "title"
                                ],
                                "isAdult": false,
                                "leaf": true,
                                "source": "vod",
                                "synopsis": {
                                  "long": "ADVENTURE"
                                },
                                "_links": {
                                  "content": {
                                    "method": "GET",
                                    "href": "/agg/content?categoryId=node%3Aurn%3Aspvss%3Aih%3Akd%3Aterm%3Astore%3AGENRES%3AADVENTURE"
                                  }
                                }
                              }
                            ],
                            "source": "vod",
                            "synopsis": {
                              "long": "GENRES"
                            }
                          }
                        ]
                      },
                      {
                        "id": "vodGenreList",
                        "name": "VOD Genres",
                        "type": "root",
                        "leaf": false
                      },
                      {
                        "id": "appStore",
                        "name": "Application Store",
                        "type": "root",
                        "leaf": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/channelGenreList": {
      "get": {
        "description": "Returns the list of channel genres.  Note this list may be smaller than the list of all genres. For example, can be used for fetching the genre drop-down in the guide screen, or for displaying a channelGenre swimlane. It may also include special \"All channels\" genre which will have no genreId field.",
        "operationId": "GET_categories-channelGenreList",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of genres",
                  "example": {
                    "genres": [
                      {
                        "genreId": "1",
                        "name": "Movies"
                      },
                      {
                        "genreId": "2",
                        "name": "Drama",
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/Drama.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ]
                      },
                      {
                        "genreId": "3",
                        "name": "Comedy"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "description": "Returns the given category's details and a list of its child categories.\nwhen the depth parameter is given and its value is more than 1, the response will include up do 'depth' levels of children of the given category.\nEvery leaf category in the response will also contain links (regular/shared) for fetching its content.\n",
        "operationId": "GET_categories-categoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of classification tree to include in the response.\n",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for a Category",
                  "example": {
                    "id": "12345",
                    "name": "Category List",
                    "type": "category_list",
                    "displayInfo": {
                      "displayLabel": "text",
                      "backgroundVideo": true
                    },
                    "leaf": false,
                    "categories": [
                      {
                        "id": "4687",
                        "name": "Movies",
                        "type": "content_full",
                        "contentDataModel": "assetList",
                        "leaf": true,
                        "contentDisplayInfo": {
                          "swimlaneConfigName": "swimlane_2_3",
                          "swimlaneContentCount": 10,
                          "collapsedContentDisplay": {
                            "seasonDefaultSort": "-seasonNumber",
                            "episodeDefaultSort": "episodeNumber"
                          }
                        },
                        "displayInfo": {
                          "displayBackgroundImage": true,
                          "displaySideImage": true,
                          "displayLabelPosition": "startAndEnd",
                          "seeAllTitle": "SEE ALL",
                          "seeAllPosition": "end",
                          "channelId": "1234"
                        },
                        "relatedFilteringTags": [
                          "Drama",
                          "Kids"
                        ],
                        "contentUxInfo": {
                          "swimlaneDirectPlay": true,
                          "startFromLastTunedChannel": true,
                          "swimlaneDisplayCatchup": true
                        },
                        "synopsis": {
                          "short": "Movies from all times",
                          "long": "Long movies from all times"
                        },
                        "_links": {
                          "content": {
                            "href": "/agg/content?categoryId=4687{&offset,limit,sort}"
                          }
                        }
                      },
                      {
                        "id": "2687",
                        "name": "Sports",
                        "type": "content_full",
                        "leaf": true,
                        "contentDataModel": "assetList",
                        "displayInfo": {
                          "seeAllLabel": "image",
                          "seeAllPosition": "startAndEnd"
                        },
                        "contentDisplayInfo": {
                          "swimlaneConfigName": "hero_16_9",
                          "swimlaneContentCount": 15,
                          "swimlaneContentCountPerRow": 6
                        },
                        "media": [
                          {
                            "type": "background_side",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          },
                          {
                            "type": "background",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/659001.jpg",
                            "height": 300,
                            "width": 200
                          },
                          {
                            "type": "see_all_start",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          },
                          {
                            "type": "see_all_end",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/659001.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "_links": {
                          "content": {
                            "href": "/agg/content?categoryId=2687{&offset,limit}"
                          }
                        }
                      },
                      {
                        "id": "1308",
                        "name": "Recommended Genres",
                        "type": "content_full",
                        "contentDataModel": "recommendationGroups",
                        "leaf": true,
                        "contentDisplayInfo": {
                          "swimlaneConfigName": "hero_16_9",
                          "swimlaneContentCount": 15
                        },
                        "_links": {
                          "content": {
                            "href": "/agg/recommendations/groupings/becauseYouWatchedGenre"
                          }
                        }
                      },
                      {
                        "id": "12687",
                        "name": "Animax",
                        "type": "category_shop",
                        "leaf": false,
                        "branding": {
                          "media": [
                            {
                              "type": "logo_bottom",
                              "mimeType": "image/jpeg",
                              "url": "http://img.server.com/65900.jpg",
                              "height": 300,
                              "width": 200
                            },
                            {
                              "type": "logo_top",
                              "mimeType": "image/jpeg",
                              "url": "http://img.server.com/659001.jpg",
                              "height": 300,
                              "width": 200
                            }
                          ]
                        }
                      },
                      {
                        "id": "AboutToExpire",
                        "name": "About To Expire",
                        "type": "content_full",
                        "contentDataModel": "assetList",
                        "sortOptions": [
                          "expirationDateTime"
                        ],
                        "leaf": true,
                        "_links": {
                          "content": {
                            "href": "/agg/content?categoryId=AboutToExpire{&offset,limit}"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content": {
      "get": {
        "description": "Get all contents matching the given search criteria.",
        "operationId": "GET_content",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "phrase to search for (exact match in case searchOptions is not specified) within title, cast and keywords.  The value must be URL encoded to support special characters (+, &, ? etc)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchOptions",
            "in": "query",
            "description": "Control search criteria options. Valid values:\n* matchPhrase - exact match. (default in case no parameter is defined)\n* matchPhrasePrefix - enable prefix match.\n",
            "schema": {
              "type": "string",
              "enum": [
                "matchPhrase",
                "matchPhrasePrefix"
              ]
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to a location (specified by the locator, channelId or logicalChannelNumber parameter) where entries in the response list should be selected from.\nLimited to 255 to prevent long running queries on the implementation.\nClients should get results to obtain a new locator, channelId or logicalChannelNumber (depending on API) to page further through the list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "locator",
            "in": "query",
            "description": "Identifies a logical location in the list to locate the pagination at.\nThis parameter is used as the location point as a base for the offset parameter.\nValues are opaque to the client and retrieved from previous calls to a list API.\nIf no `locator` or other locating parameter supplied the response will be at the start of the list.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 115000
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius.",
                        "contentFlags": [
                          "adult"
                        ]
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 38000
                          }
                        ],
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "externalStarRatings": [
                          {
                            "provider": "imdb",
                            "score": 8.7
                          }
                        ],
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/show/{showId}": {
      "get": {
        "description": "Get the metadata for the specific show by it's id",
        "operationId": "GET_content-show-showId",
        "parameters": [
          {
            "name": "showId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "source of the show item.\n  * ltv - broadcast TV content\n  * vod - video on demand content\n  * pvr - pvr recorded content\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentType",
                    "id",
                    "resource",
                    "source",
                    "title"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this asset"
                    },
                    "resource": {
                      "type": "string",
                      "enum": [
                        "asset"
                      ]
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The type of this asset.  Determines if the asset has any parent or child relationships to other assets",
                      "enum": [
                        "standalone",
                        "episode",
                        "season",
                        "show",
                        "group"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "The different sources of an asset. In case of grouped content, this is the source of the collapsed items",
                      "enum": [
                        "ltv",
                        "vod",
                        "pvr",
                        "youtube",
                        "catchup"
                      ]
                    },
                    "startDateTime": {
                      "type": "string",
                      "description": "For ltv,catchup,pvr standalone/episodes assets, the date-time this asset is broadcast on the associated channel. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "isEntitled": {
                      "type": "boolean",
                      "description": "Determines if this household is entitled to play this asset."
                    },
                    "isVodFavorite": {
                      "type": "boolean",
                      "description": "Determines if this item has been marked as favorite. When property is missing it is considered as false."
                    },
                    "expirationDateTime": {
                      "type": "string",
                      "description": "The date-time at which this instance is no longer available. Provided only if applicable (e.g. CDVR expiration or VOD expiration when expiringSoon content flag is set). Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "rentalExpiration": {
                      "type": "string",
                      "description": "The date-time at which rental entitlements expires. It will be present only for vods that have been rented by the user. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "lastPlayPosition": {
                      "type": "integer",
                      "description": "The last position, in seconds from the start, that the user got to when last viewing this asset. Applicable to standalone/episodes assets of type vod/pvr/catchup.  The value is based on the parameter supplied by the application in the DELETE devices/me/playsessions API when tearing down this asset's playsession. The parameter supplied only when the value is non-zero."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of this asset in seconds.  Only relevant for standalone/episode contentType."
                    },
                    "contentDuration": {
                      "type": "integer",
                      "description": "The original content duration. May be different from duration.  For PVR asset it represents duration of original content. The value is not provided when identical to duration."
                    },
                    "contentFlags": {
                      "type": "string",
                      "description": "The content flags applicable for this asset. This is personalized for the client. In some use cases partial list of contentFlags will be returned, depending on API used"
                    },
                    "booking": {
                      "type": "string",
                      "description": "The booking associated with this asset."
                    },
                    "purchaseDateTime": {
                      "type": "string",
                      "description": "Time stamp reflecting the purchase date (if applicable). format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "purchases": {
                      "type": "array",
                      "description": "The list of Authorization status of the offers associated with the asset",
                      "items": {
                        "type": "string",
                        "description": "The Authorization status of the offers associated with the asset"
                      }
                    },
                    "bookmarks": {
                      "type": "array",
                      "description": "The list of bookmarks that are present for the asset. It is returned only as part of contentInstances API",
                      "items": {
                        "type": "string",
                        "description": "The bookmark name and offset"
                      }
                    },
                    "linearInstanceId": {
                      "type": "string",
                      "description": "Corresponding linear asset Id, for catchup asset only"
                    },
                    "restartContentId": {
                      "type": "string",
                      "description": "Corresponding restart asset Id, applicable for linear asset with restartAvailable content flag. This property is provided only as part of contentInstances API. It should be used to create restart play session with /devices/me/playsessions/<restartContentId> API"
                    },
                    "branding": {
                      "type": "string",
                      "description": "In case of shop in shop asset - optional branding information of the provider"
                    },
                    "collapsedItemsCount": {
                      "type": "integer",
                      "description": "Number of collapsed items for this asset. Present only for show/season/group assets."
                    },
                    "collapsedItemsContentType": {
                      "type": "string",
                      "description": "The contentType of collapsed items. In case of show collapsed items can be of type season in case of series with season or episodes in case of open series. Present only for show/season/group assets.",
                      "enum": [
                        "standalone",
                        "episode",
                        "season"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The main display title for this asset.  For 'episodes' and 'seasons' this will be the 'show' title."
                    },
                    "episodeTitle": {
                      "type": "string",
                      "description": "Optionally provided, for episode assets only. This is the title of the episode."
                    },
                    "seasonNumber": {
                      "type": "string",
                      "description": "The number of the season.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "episodeNumber": {
                      "type": "string",
                      "description": "The number of the episode.  Only supplied for Asset of type 'episode'"
                    },
                    "showId": {
                      "type": "string",
                      "description": "The identifier of the associated Show.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "seasonId": {
                      "type": "string",
                      "description": "The identifier of the associated Season.  Only supplied for asset of type 'episode'"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "External content/video identifier for third party video applications, coming from federated search sources, i.e. youtube or netflix"
                    },
                    "externalPackageId": {
                      "type": "string",
                      "description": "External content/video Package identifier which comes from ADI ingest and used by service provider in order to track content package"
                    },
                    "productionYear": {
                      "type": "integer",
                      "description": "The year the asset content was produced"
                    },
                    "productionLocation": {
                      "type": "string",
                      "description": "The location in which the asset content was produced"
                    },
                    "starRating": {
                      "type": "integer",
                      "description": "The editorially supplied star rating for the asset.  Supplied as an integer.  The platform will define the supplyer of the rating and hence the range, (e.g. 1-5, 1-10, 100%)  The UI will determine how this value is to be presented."
                    },
                    "audioLanguages": {
                      "type": "array",
                      "description": "The display strings for the available audio languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "audioFormat": {
                      "type": "string",
                      "description": "The display string for the audio format this asset is available in.  For example 'Dolby Prologic'.  Note that asset may have several audio formats available, this is the primary display name for the best audio."
                    },
                    "videoFormat": {
                      "type": "string",
                      "description": "The display string for the video format this asset is available in.  For example '1080i HD'.  Note that asset may be available in other video formats, this is the primary display name for the best video format."
                    },
                    "subtitleLanguages": {
                      "type": "array",
                      "description": "The display strings for the available subtitle languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contentAdvisories": {
                      "type": "array",
                      "description": "The advisory flags applicable for this asset. This is personalized for the client.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalFlags": {
                      "type": "array",
                      "description": "Externally driven flags associated with this asset. Values are controlled by the operator and are opaque to API. Application code can use the flags as UI indications.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalLinks": {
                      "type": "object",
                      "properties": {
                        "assetPage": {
                          "type": "string",
                          "description": "the detail page to display for this external asset"
                        },
                        "playback": {
                          "type": "string",
                          "description": "the link to invoke for playback of this external asset"
                        },
                        "type": {
                          "type": "string",
                          "description": "the type of link for the external content",
                          "enum": [
                            "externalApp",
                            "webPage"
                          ]
                        }
                      },
                      "description": "A set of links to allow the client to access external content"
                    },
                    "media": {
                      "type": "array",
                      "description": "Media to use to present this asset.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "credits": {
                      "type": "object",
                      "properties": {
                        "actors": {
                          "type": "array",
                          "description": "The list of actors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directors": {
                          "type": "array",
                          "description": "The list of directors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "genres": {
                      "type": "array",
                      "description": "array of genres.",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "synopsis": {
                      "type": "string",
                      "description": "A short form of synopsis to display when Asset is displayed in a list, summary or grid view.  Always supplied when synopsis is available.  Note: some Asset may have no synopsis"
                    },
                    "longSynopsis": {
                      "type": "string",
                      "description": "A long form of synopsis to display when Asset is displayed in detail.  It is returned only as part of contentInstances API and in groupContent responses, but not from other aggregation   Note: some Asset may have no synopsis or no long synopsis"
                    },
                    "studioCode": {
                      "type": "string",
                      "description": "The registration code assigned to the asset by the studio providing it"
                    },
                    "parentalRating": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The display string to use to indicate this parental rating."
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value to use for enforcing parental control policies"
                        }
                      },
                      "description": "The parental rating assigned to this asset."
                    },
                    "externalStarRatings": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "List of star rating provided by external providers like IMdb.",
                      "items": {
                        "required": [
                          "provider",
                          "score"
                        ],
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "imdb"
                            ]
                          },
                          "score": {
                            "type": "number"
                          }
                        },
                        "description": "external provider star rating object."
                      }
                    },
                    "trailer": {
                      "type": "object",
                      "properties": {
                        "trailerContentId": {
                          "type": "string",
                          "description": "Trailer Identifier, this id can be used to play the trailer."
                        }
                      },
                      "description": "Trailer information for this asset"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The channel description. The property is not supplied when asset is already part of channel schema (/agg/grid API) or in conflict schema."
                    },
                    "recordingState": {
                      "type": "string",
                      "description": "State of the recording progress for a booking.",
                      "enum": [
                        "notStarted",
                        "inProgress",
                        "ended",
                        "failed"
                      ]
                    },
                    "locator": {
                      "type": "string",
                      "description": "Locator of the asset that can be used in paging requests."
                    },
                    "bookingStatesKey": {
                      "type": "string",
                      "description": "A key which can be used to find booking state of this asset inside booking state list provided by API /personal/bookingStates. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "restartEventKey": {
                      "type": "string",
                      "description": "A key which can be used to find restart information for this asset inside restartEvents list provided by API /shared/restartEvents. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "entitledPpvKey": {
                      "type": "string",
                      "description": "A key which can be used to find entitled state of this asset inside ppvEntitlements list provided by API /personal/ppvEntitlements. This property is provided only for ppv events as part of non-personalized API /shared/grid"
                    },
                    "viewHistoryKey": {
                      "type": "string",
                      "description": "A key which can be used to find viewing history of this asset inside viewHistory list provided by API /personal/viewingHistory. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "offerKeys": {
                      "type": "string",
                      "description": "A list of offer keys which can be used to check entitlement status of this asset by matching with entitled offers list provided by API /personal/entitledOffers. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "consentGroup": {
                      "type": "string",
                      "description": "The dynamic ads provider identifier for this asset, relevant for VOD assets only. Opting in or out to getting targeted advertisements is done per consentGroup"
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Base Schema for an asset which can be either a concrete episode/standalone event or a grouped content (season/show/group aka boxset). This schema replaces instance.schema and content.schema starting from API version 1.6.0",
                  "example": {
                    "id": "IID_321",
                    "resource": "asset",
                    "contentType": "show",
                    "title": "Game of Thrones",
                    "isVodFavorite": true,
                    "genres": [
                      {
                        "name": "action",
                        "genreId": "action"
                      },
                      {
                        "name": "adventure",
                        "genreId": "adventure"
                      }
                    ],
                    "expirationDate": "2015-05-04T16:00:00.000Z",
                    "posters": [
                      {
                        "mime": "image/jpeg",
                        "uri": "65900.jpg"
                      }
                    ],
                    "purchases": [
                      {
                        "offerId": "1234",
                        "isAuthorized": false,
                        "expirationDate": "2020-09-14T10:38:54.290Z",
                        "price": 99900,
                        "currencySymbol": "USD",
                        "marketingMsg": "Purchase Game of Thrones for 9.99 USD",
                        "groupId": "IID_6543",
                        "authorizationType": "Bundle",
                        "purchaseWindowStartDate": "2020-09-14T10:38:54.290Z",
                        "purchaseWindowEndDate": "2020-09-14T10:38:54.290Z",
                        "purchaseOptionStatus": "active"
                      },
                      {
                        "offerId": "1234-1",
                        "isAuthorized": false,
                        "expirationDate": "2020-09-14T10:38:54.290Z",
                        "price": 55500,
                        "currencySymbol": "USD",
                        "marketingMsg": "Purchase Game of Thrones season 5 for 5.5 USD",
                        "groupId": "IID_654",
                        "authorizationType": "Bundle"
                      }
                    ],
                    "credits": {
                      "actors": [
                        "Maisie Williams",
                        "Alfie Allen",
                        "Lena Headey"
                      ],
                      "directors": [
                        "David Benioff"
                      ]
                    },
                    "source": "vod",
                    "synopsis": "Noble families in the seven kingdoms of Westeros vie for control of the Iron Throne. Fantasy drama, based on George RR Martin's A Song of Ice and Fire novels.",
                    "contentFlags": [
                      "adult"
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/season/{seasonId}": {
      "get": {
        "description": "Get the metadata for the specific season by it's id",
        "operationId": "GET_content-season-seasonId",
        "parameters": [
          {
            "name": "seasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentType",
                    "id",
                    "resource",
                    "source",
                    "title"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this asset"
                    },
                    "resource": {
                      "type": "string",
                      "enum": [
                        "asset"
                      ]
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The type of this asset.  Determines if the asset has any parent or child relationships to other assets",
                      "enum": [
                        "standalone",
                        "episode",
                        "season",
                        "show",
                        "group"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "The different sources of an asset. In case of grouped content, this is the source of the collapsed items",
                      "enum": [
                        "ltv",
                        "vod",
                        "pvr",
                        "youtube",
                        "catchup"
                      ]
                    },
                    "startDateTime": {
                      "type": "string",
                      "description": "For ltv,catchup,pvr standalone/episodes assets, the date-time this asset is broadcast on the associated channel. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "isEntitled": {
                      "type": "boolean",
                      "description": "Determines if this household is entitled to play this asset."
                    },
                    "isVodFavorite": {
                      "type": "boolean",
                      "description": "Determines if this item has been marked as favorite. When property is missing it is considered as false."
                    },
                    "expirationDateTime": {
                      "type": "string",
                      "description": "The date-time at which this instance is no longer available. Provided only if applicable (e.g. CDVR expiration or VOD expiration when expiringSoon content flag is set). Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "rentalExpiration": {
                      "type": "string",
                      "description": "The date-time at which rental entitlements expires. It will be present only for vods that have been rented by the user. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "lastPlayPosition": {
                      "type": "integer",
                      "description": "The last position, in seconds from the start, that the user got to when last viewing this asset. Applicable to standalone/episodes assets of type vod/pvr/catchup.  The value is based on the parameter supplied by the application in the DELETE devices/me/playsessions API when tearing down this asset's playsession. The parameter supplied only when the value is non-zero."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of this asset in seconds.  Only relevant for standalone/episode contentType."
                    },
                    "contentDuration": {
                      "type": "integer",
                      "description": "The original content duration. May be different from duration.  For PVR asset it represents duration of original content. The value is not provided when identical to duration."
                    },
                    "contentFlags": {
                      "type": "string",
                      "description": "The content flags applicable for this asset. This is personalized for the client. In some use cases partial list of contentFlags will be returned, depending on API used"
                    },
                    "booking": {
                      "type": "string",
                      "description": "The booking associated with this asset."
                    },
                    "purchaseDateTime": {
                      "type": "string",
                      "description": "Time stamp reflecting the purchase date (if applicable). format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "purchases": {
                      "type": "array",
                      "description": "The list of Authorization status of the offers associated with the asset",
                      "items": {
                        "type": "string",
                        "description": "The Authorization status of the offers associated with the asset"
                      }
                    },
                    "bookmarks": {
                      "type": "array",
                      "description": "The list of bookmarks that are present for the asset. It is returned only as part of contentInstances API",
                      "items": {
                        "type": "string",
                        "description": "The bookmark name and offset"
                      }
                    },
                    "linearInstanceId": {
                      "type": "string",
                      "description": "Corresponding linear asset Id, for catchup asset only"
                    },
                    "restartContentId": {
                      "type": "string",
                      "description": "Corresponding restart asset Id, applicable for linear asset with restartAvailable content flag. This property is provided only as part of contentInstances API. It should be used to create restart play session with /devices/me/playsessions/<restartContentId> API"
                    },
                    "branding": {
                      "type": "string",
                      "description": "In case of shop in shop asset - optional branding information of the provider"
                    },
                    "collapsedItemsCount": {
                      "type": "integer",
                      "description": "Number of collapsed items for this asset. Present only for show/season/group assets."
                    },
                    "collapsedItemsContentType": {
                      "type": "string",
                      "description": "The contentType of collapsed items. In case of show collapsed items can be of type season in case of series with season or episodes in case of open series. Present only for show/season/group assets.",
                      "enum": [
                        "standalone",
                        "episode",
                        "season"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The main display title for this asset.  For 'episodes' and 'seasons' this will be the 'show' title."
                    },
                    "episodeTitle": {
                      "type": "string",
                      "description": "Optionally provided, for episode assets only. This is the title of the episode."
                    },
                    "seasonNumber": {
                      "type": "string",
                      "description": "The number of the season.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "episodeNumber": {
                      "type": "string",
                      "description": "The number of the episode.  Only supplied for Asset of type 'episode'"
                    },
                    "showId": {
                      "type": "string",
                      "description": "The identifier of the associated Show.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "seasonId": {
                      "type": "string",
                      "description": "The identifier of the associated Season.  Only supplied for asset of type 'episode'"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "External content/video identifier for third party video applications, coming from federated search sources, i.e. youtube or netflix"
                    },
                    "externalPackageId": {
                      "type": "string",
                      "description": "External content/video Package identifier which comes from ADI ingest and used by service provider in order to track content package"
                    },
                    "productionYear": {
                      "type": "integer",
                      "description": "The year the asset content was produced"
                    },
                    "productionLocation": {
                      "type": "string",
                      "description": "The location in which the asset content was produced"
                    },
                    "starRating": {
                      "type": "integer",
                      "description": "The editorially supplied star rating for the asset.  Supplied as an integer.  The platform will define the supplyer of the rating and hence the range, (e.g. 1-5, 1-10, 100%)  The UI will determine how this value is to be presented."
                    },
                    "audioLanguages": {
                      "type": "array",
                      "description": "The display strings for the available audio languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "audioFormat": {
                      "type": "string",
                      "description": "The display string for the audio format this asset is available in.  For example 'Dolby Prologic'.  Note that asset may have several audio formats available, this is the primary display name for the best audio."
                    },
                    "videoFormat": {
                      "type": "string",
                      "description": "The display string for the video format this asset is available in.  For example '1080i HD'.  Note that asset may be available in other video formats, this is the primary display name for the best video format."
                    },
                    "subtitleLanguages": {
                      "type": "array",
                      "description": "The display strings for the available subtitle languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contentAdvisories": {
                      "type": "array",
                      "description": "The advisory flags applicable for this asset. This is personalized for the client.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalFlags": {
                      "type": "array",
                      "description": "Externally driven flags associated with this asset. Values are controlled by the operator and are opaque to API. Application code can use the flags as UI indications.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalLinks": {
                      "type": "object",
                      "properties": {
                        "assetPage": {
                          "type": "string",
                          "description": "the detail page to display for this external asset"
                        },
                        "playback": {
                          "type": "string",
                          "description": "the link to invoke for playback of this external asset"
                        },
                        "type": {
                          "type": "string",
                          "description": "the type of link for the external content",
                          "enum": [
                            "externalApp",
                            "webPage"
                          ]
                        }
                      },
                      "description": "A set of links to allow the client to access external content"
                    },
                    "media": {
                      "type": "array",
                      "description": "Media to use to present this asset.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "credits": {
                      "type": "object",
                      "properties": {
                        "actors": {
                          "type": "array",
                          "description": "The list of actors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directors": {
                          "type": "array",
                          "description": "The list of directors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "genres": {
                      "type": "array",
                      "description": "array of genres.",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "synopsis": {
                      "type": "string",
                      "description": "A short form of synopsis to display when Asset is displayed in a list, summary or grid view.  Always supplied when synopsis is available.  Note: some Asset may have no synopsis"
                    },
                    "longSynopsis": {
                      "type": "string",
                      "description": "A long form of synopsis to display when Asset is displayed in detail.  It is returned only as part of contentInstances API and in groupContent responses, but not from other aggregation   Note: some Asset may have no synopsis or no long synopsis"
                    },
                    "studioCode": {
                      "type": "string",
                      "description": "The registration code assigned to the asset by the studio providing it"
                    },
                    "parentalRating": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The display string to use to indicate this parental rating."
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value to use for enforcing parental control policies"
                        }
                      },
                      "description": "The parental rating assigned to this asset."
                    },
                    "externalStarRatings": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "List of star rating provided by external providers like IMdb.",
                      "items": {
                        "required": [
                          "provider",
                          "score"
                        ],
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "imdb"
                            ]
                          },
                          "score": {
                            "type": "number"
                          }
                        },
                        "description": "external provider star rating object."
                      }
                    },
                    "trailer": {
                      "type": "object",
                      "properties": {
                        "trailerContentId": {
                          "type": "string",
                          "description": "Trailer Identifier, this id can be used to play the trailer."
                        }
                      },
                      "description": "Trailer information for this asset"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The channel description. The property is not supplied when asset is already part of channel schema (/agg/grid API) or in conflict schema."
                    },
                    "recordingState": {
                      "type": "string",
                      "description": "State of the recording progress for a booking.",
                      "enum": [
                        "notStarted",
                        "inProgress",
                        "ended",
                        "failed"
                      ]
                    },
                    "locator": {
                      "type": "string",
                      "description": "Locator of the asset that can be used in paging requests."
                    },
                    "bookingStatesKey": {
                      "type": "string",
                      "description": "A key which can be used to find booking state of this asset inside booking state list provided by API /personal/bookingStates. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "restartEventKey": {
                      "type": "string",
                      "description": "A key which can be used to find restart information for this asset inside restartEvents list provided by API /shared/restartEvents. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "entitledPpvKey": {
                      "type": "string",
                      "description": "A key which can be used to find entitled state of this asset inside ppvEntitlements list provided by API /personal/ppvEntitlements. This property is provided only for ppv events as part of non-personalized API /shared/grid"
                    },
                    "viewHistoryKey": {
                      "type": "string",
                      "description": "A key which can be used to find viewing history of this asset inside viewHistory list provided by API /personal/viewingHistory. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "offerKeys": {
                      "type": "string",
                      "description": "A list of offer keys which can be used to check entitlement status of this asset by matching with entitled offers list provided by API /personal/entitledOffers. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "consentGroup": {
                      "type": "string",
                      "description": "The dynamic ads provider identifier for this asset, relevant for VOD assets only. Opting in or out to getting targeted advertisements is done per consentGroup"
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Base Schema for an asset which can be either a concrete episode/standalone event or a grouped content (season/show/group aka boxset). This schema replaces instance.schema and content.schema starting from API version 1.6.0",
                  "example": {
                    "id": "IID_6543",
                    "resource": "asset",
                    "contentType": "season",
                    "title": "Game of Thrones",
                    "genres": [
                      {
                        "name": "drama",
                        "genreId": "drama"
                      }
                    ],
                    "seasonNumber": "5",
                    "expirationDate": "2015-05-04T16:00:00.000Z",
                    "media": [
                      {
                        "mimeType": "image/jpeg",
                        "url": "65900.jpg"
                      }
                    ],
                    "credits": {
                      "actors": [
                        "Maisie Williams",
                        "Alfie Allen",
                        "Lena Headey"
                      ],
                      "directors": [
                        "David Benioff"
                      ]
                    },
                    "purchases": [
                      {
                        "offerId": "1234",
                        "isAuthorized": false,
                        "expirationDate": "2020-09-14T10:38:54.290Z",
                        "price": 99900,
                        "currencySymbol": "USD",
                        "marketingMsg": "Purchase Game of Thrones season 5 for 9.99 USD",
                        "groupId": "IID_6543",
                        "authorizationType": "Bundle",
                        "purchaseWindowStartDate": "2020-09-14T10:38:54.290Z",
                        "purchaseWindowEndDate": "2020-09-14T10:38:54.290Z",
                        "purchaseOptionStatus": "active"
                      }
                    ],
                    "source": "vod",
                    "synopsis": "Noble families in the seven kingdoms of Westeros vie for control of the Iron Throne. Fantasy drama, based on George RR Martin's A Song of Ice and Fire novels."
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/group/{groupId}": {
      "get": {
        "description": "Get the metadata for the specific group by it's id",
        "operationId": "GET_content-group-groupId",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentType",
                    "id",
                    "resource",
                    "source",
                    "title"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this asset"
                    },
                    "resource": {
                      "type": "string",
                      "enum": [
                        "asset"
                      ]
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The type of this asset.  Determines if the asset has any parent or child relationships to other assets",
                      "enum": [
                        "standalone",
                        "episode",
                        "season",
                        "show",
                        "group"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "The different sources of an asset. In case of grouped content, this is the source of the collapsed items",
                      "enum": [
                        "ltv",
                        "vod",
                        "pvr",
                        "youtube",
                        "catchup"
                      ]
                    },
                    "startDateTime": {
                      "type": "string",
                      "description": "For ltv,catchup,pvr standalone/episodes assets, the date-time this asset is broadcast on the associated channel. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "isEntitled": {
                      "type": "boolean",
                      "description": "Determines if this household is entitled to play this asset."
                    },
                    "isVodFavorite": {
                      "type": "boolean",
                      "description": "Determines if this item has been marked as favorite. When property is missing it is considered as false."
                    },
                    "expirationDateTime": {
                      "type": "string",
                      "description": "The date-time at which this instance is no longer available. Provided only if applicable (e.g. CDVR expiration or VOD expiration when expiringSoon content flag is set). Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "rentalExpiration": {
                      "type": "string",
                      "description": "The date-time at which rental entitlements expires. It will be present only for vods that have been rented by the user. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "lastPlayPosition": {
                      "type": "integer",
                      "description": "The last position, in seconds from the start, that the user got to when last viewing this asset. Applicable to standalone/episodes assets of type vod/pvr/catchup.  The value is based on the parameter supplied by the application in the DELETE devices/me/playsessions API when tearing down this asset's playsession. The parameter supplied only when the value is non-zero."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of this asset in seconds.  Only relevant for standalone/episode contentType."
                    },
                    "contentDuration": {
                      "type": "integer",
                      "description": "The original content duration. May be different from duration.  For PVR asset it represents duration of original content. The value is not provided when identical to duration."
                    },
                    "contentFlags": {
                      "type": "string",
                      "description": "The content flags applicable for this asset. This is personalized for the client. In some use cases partial list of contentFlags will be returned, depending on API used"
                    },
                    "booking": {
                      "type": "string",
                      "description": "The booking associated with this asset."
                    },
                    "purchaseDateTime": {
                      "type": "string",
                      "description": "Time stamp reflecting the purchase date (if applicable). format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "purchases": {
                      "type": "array",
                      "description": "The list of Authorization status of the offers associated with the asset",
                      "items": {
                        "type": "string",
                        "description": "The Authorization status of the offers associated with the asset"
                      }
                    },
                    "bookmarks": {
                      "type": "array",
                      "description": "The list of bookmarks that are present for the asset. It is returned only as part of contentInstances API",
                      "items": {
                        "type": "string",
                        "description": "The bookmark name and offset"
                      }
                    },
                    "linearInstanceId": {
                      "type": "string",
                      "description": "Corresponding linear asset Id, for catchup asset only"
                    },
                    "restartContentId": {
                      "type": "string",
                      "description": "Corresponding restart asset Id, applicable for linear asset with restartAvailable content flag. This property is provided only as part of contentInstances API. It should be used to create restart play session with /devices/me/playsessions/<restartContentId> API"
                    },
                    "branding": {
                      "type": "string",
                      "description": "In case of shop in shop asset - optional branding information of the provider"
                    },
                    "collapsedItemsCount": {
                      "type": "integer",
                      "description": "Number of collapsed items for this asset. Present only for show/season/group assets."
                    },
                    "collapsedItemsContentType": {
                      "type": "string",
                      "description": "The contentType of collapsed items. In case of show collapsed items can be of type season in case of series with season or episodes in case of open series. Present only for show/season/group assets.",
                      "enum": [
                        "standalone",
                        "episode",
                        "season"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The main display title for this asset.  For 'episodes' and 'seasons' this will be the 'show' title."
                    },
                    "episodeTitle": {
                      "type": "string",
                      "description": "Optionally provided, for episode assets only. This is the title of the episode."
                    },
                    "seasonNumber": {
                      "type": "string",
                      "description": "The number of the season.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "episodeNumber": {
                      "type": "string",
                      "description": "The number of the episode.  Only supplied for Asset of type 'episode'"
                    },
                    "showId": {
                      "type": "string",
                      "description": "The identifier of the associated Show.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "seasonId": {
                      "type": "string",
                      "description": "The identifier of the associated Season.  Only supplied for asset of type 'episode'"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "External content/video identifier for third party video applications, coming from federated search sources, i.e. youtube or netflix"
                    },
                    "externalPackageId": {
                      "type": "string",
                      "description": "External content/video Package identifier which comes from ADI ingest and used by service provider in order to track content package"
                    },
                    "productionYear": {
                      "type": "integer",
                      "description": "The year the asset content was produced"
                    },
                    "productionLocation": {
                      "type": "string",
                      "description": "The location in which the asset content was produced"
                    },
                    "starRating": {
                      "type": "integer",
                      "description": "The editorially supplied star rating for the asset.  Supplied as an integer.  The platform will define the supplyer of the rating and hence the range, (e.g. 1-5, 1-10, 100%)  The UI will determine how this value is to be presented."
                    },
                    "audioLanguages": {
                      "type": "array",
                      "description": "The display strings for the available audio languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "audioFormat": {
                      "type": "string",
                      "description": "The display string for the audio format this asset is available in.  For example 'Dolby Prologic'.  Note that asset may have several audio formats available, this is the primary display name for the best audio."
                    },
                    "videoFormat": {
                      "type": "string",
                      "description": "The display string for the video format this asset is available in.  For example '1080i HD'.  Note that asset may be available in other video formats, this is the primary display name for the best video format."
                    },
                    "subtitleLanguages": {
                      "type": "array",
                      "description": "The display strings for the available subtitle languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contentAdvisories": {
                      "type": "array",
                      "description": "The advisory flags applicable for this asset. This is personalized for the client.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalFlags": {
                      "type": "array",
                      "description": "Externally driven flags associated with this asset. Values are controlled by the operator and are opaque to API. Application code can use the flags as UI indications.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalLinks": {
                      "type": "object",
                      "properties": {
                        "assetPage": {
                          "type": "string",
                          "description": "the detail page to display for this external asset"
                        },
                        "playback": {
                          "type": "string",
                          "description": "the link to invoke for playback of this external asset"
                        },
                        "type": {
                          "type": "string",
                          "description": "the type of link for the external content",
                          "enum": [
                            "externalApp",
                            "webPage"
                          ]
                        }
                      },
                      "description": "A set of links to allow the client to access external content"
                    },
                    "media": {
                      "type": "array",
                      "description": "Media to use to present this asset.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "credits": {
                      "type": "object",
                      "properties": {
                        "actors": {
                          "type": "array",
                          "description": "The list of actors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directors": {
                          "type": "array",
                          "description": "The list of directors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "genres": {
                      "type": "array",
                      "description": "array of genres.",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "synopsis": {
                      "type": "string",
                      "description": "A short form of synopsis to display when Asset is displayed in a list, summary or grid view.  Always supplied when synopsis is available.  Note: some Asset may have no synopsis"
                    },
                    "longSynopsis": {
                      "type": "string",
                      "description": "A long form of synopsis to display when Asset is displayed in detail.  It is returned only as part of contentInstances API and in groupContent responses, but not from other aggregation   Note: some Asset may have no synopsis or no long synopsis"
                    },
                    "studioCode": {
                      "type": "string",
                      "description": "The registration code assigned to the asset by the studio providing it"
                    },
                    "parentalRating": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The display string to use to indicate this parental rating."
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value to use for enforcing parental control policies"
                        }
                      },
                      "description": "The parental rating assigned to this asset."
                    },
                    "externalStarRatings": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "List of star rating provided by external providers like IMdb.",
                      "items": {
                        "required": [
                          "provider",
                          "score"
                        ],
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "imdb"
                            ]
                          },
                          "score": {
                            "type": "number"
                          }
                        },
                        "description": "external provider star rating object."
                      }
                    },
                    "trailer": {
                      "type": "object",
                      "properties": {
                        "trailerContentId": {
                          "type": "string",
                          "description": "Trailer Identifier, this id can be used to play the trailer."
                        }
                      },
                      "description": "Trailer information for this asset"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The channel description. The property is not supplied when asset is already part of channel schema (/agg/grid API) or in conflict schema."
                    },
                    "recordingState": {
                      "type": "string",
                      "description": "State of the recording progress for a booking.",
                      "enum": [
                        "notStarted",
                        "inProgress",
                        "ended",
                        "failed"
                      ]
                    },
                    "locator": {
                      "type": "string",
                      "description": "Locator of the asset that can be used in paging requests."
                    },
                    "bookingStatesKey": {
                      "type": "string",
                      "description": "A key which can be used to find booking state of this asset inside booking state list provided by API /personal/bookingStates. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "restartEventKey": {
                      "type": "string",
                      "description": "A key which can be used to find restart information for this asset inside restartEvents list provided by API /shared/restartEvents. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "entitledPpvKey": {
                      "type": "string",
                      "description": "A key which can be used to find entitled state of this asset inside ppvEntitlements list provided by API /personal/ppvEntitlements. This property is provided only for ppv events as part of non-personalized API /shared/grid"
                    },
                    "viewHistoryKey": {
                      "type": "string",
                      "description": "A key which can be used to find viewing history of this asset inside viewHistory list provided by API /personal/viewingHistory. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "offerKeys": {
                      "type": "string",
                      "description": "A list of offer keys which can be used to check entitlement status of this asset by matching with entitled offers list provided by API /personal/entitledOffers. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "consentGroup": {
                      "type": "string",
                      "description": "The dynamic ads provider identifier for this asset, relevant for VOD assets only. Opting in or out to getting targeted advertisements is done per consentGroup"
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Base Schema for an asset which can be either a concrete episode/standalone event or a grouped content (season/show/group aka boxset). This schema replaces instance.schema and content.schema starting from API version 1.6.0",
                  "example": {
                    "id": "IID_6543",
                    "resource": "asset",
                    "contentType": "group",
                    "title": "Harry Potter Movies",
                    "isVodFavorite": true,
                    "genres": [
                      {
                        "name": "drama",
                        "genreId": "drama"
                      }
                    ],
                    "expirationDate": "2015-05-04T16:00:00.000Z",
                    "media": [
                      {
                        "mimeType": "image/jpeg",
                        "url": "65900.jpg"
                      }
                    ],
                    "purchases": [
                      {
                        "offerId": "1234",
                        "isAuthorized": false,
                        "expirationDate": "2020-09-14T10:38:54.290Z",
                        "price": 99900,
                        "currencySymbol": "USD",
                        "marketingMsg": "Purchase Harry potter movies for 9.99 USD",
                        "groupId": "IID_6543",
                        "authorizationType": "Bundle",
                        "purchaseWindowStartDate": "2020-09-14T10:38:54.290Z",
                        "purchaseWindowEndDate": "2020-09-14T10:38:54.290Z",
                        "purchaseOptionStatus": "active"
                      }
                    ],
                    "source": "vod",
                    "synopsis": "Harry potter movies groups"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/group/{groupId}/trailer/{contentTrailerId}": {
      "get": {
        "description": "Get meta data for a trailer.   The example of url is  /content/<contentId>/trailer/<contentTrailerId>",
        "operationId": "GET_content-group-groupId-trailer-contentTrailerId",
        "parameters": [
          {
            "name": "contentTrailerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "example": {
                    "trailerContentId": "Trailter12345",
                    "duration": 600,
                    "parentalRating": {
                      "name": "PG16",
                      "value": 16
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contentInstances/{instanceId}": {
      "get": {
        "description": "Get an Instance resource\n",
        "operationId": "GET_contentInstances-instanceId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Can be supplied as a hint to the server as to the status of the instanceId that is being fetched.\nOnly necessary for use cases where the client received the instanceId from an external agent other than a ctap refAPI response.\nValid values:\n* ltv - broadcast TV content\n* vod - video on demand content\n* pvr - pvr recorded content\n* catchup - online catchup content\n* restart - restart broadcast content\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentType",
                    "id",
                    "resource",
                    "source",
                    "title"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this asset"
                    },
                    "resource": {
                      "type": "string",
                      "enum": [
                        "asset"
                      ]
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The type of this asset.  Determines if the asset has any parent or child relationships to other assets",
                      "enum": [
                        "standalone",
                        "episode",
                        "season",
                        "show",
                        "group"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "The different sources of an asset. In case of grouped content, this is the source of the collapsed items",
                      "enum": [
                        "ltv",
                        "vod",
                        "pvr",
                        "youtube",
                        "catchup"
                      ]
                    },
                    "startDateTime": {
                      "type": "string",
                      "description": "For ltv,catchup,pvr standalone/episodes assets, the date-time this asset is broadcast on the associated channel. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "isEntitled": {
                      "type": "boolean",
                      "description": "Determines if this household is entitled to play this asset."
                    },
                    "isVodFavorite": {
                      "type": "boolean",
                      "description": "Determines if this item has been marked as favorite. When property is missing it is considered as false."
                    },
                    "expirationDateTime": {
                      "type": "string",
                      "description": "The date-time at which this instance is no longer available. Provided only if applicable (e.g. CDVR expiration or VOD expiration when expiringSoon content flag is set). Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "rentalExpiration": {
                      "type": "string",
                      "description": "The date-time at which rental entitlements expires. It will be present only for vods that have been rented by the user. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "lastPlayPosition": {
                      "type": "integer",
                      "description": "The last position, in seconds from the start, that the user got to when last viewing this asset. Applicable to standalone/episodes assets of type vod/pvr/catchup.  The value is based on the parameter supplied by the application in the DELETE devices/me/playsessions API when tearing down this asset's playsession. The parameter supplied only when the value is non-zero."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of this asset in seconds.  Only relevant for standalone/episode contentType."
                    },
                    "contentDuration": {
                      "type": "integer",
                      "description": "The original content duration. May be different from duration.  For PVR asset it represents duration of original content. The value is not provided when identical to duration."
                    },
                    "contentFlags": {
                      "type": "string",
                      "description": "The content flags applicable for this asset. This is personalized for the client. In some use cases partial list of contentFlags will be returned, depending on API used"
                    },
                    "booking": {
                      "type": "string",
                      "description": "The booking associated with this asset."
                    },
                    "purchaseDateTime": {
                      "type": "string",
                      "description": "Time stamp reflecting the purchase date (if applicable). format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "purchases": {
                      "type": "array",
                      "description": "The list of Authorization status of the offers associated with the asset",
                      "items": {
                        "type": "string",
                        "description": "The Authorization status of the offers associated with the asset"
                      }
                    },
                    "bookmarks": {
                      "type": "array",
                      "description": "The list of bookmarks that are present for the asset. It is returned only as part of contentInstances API",
                      "items": {
                        "type": "string",
                        "description": "The bookmark name and offset"
                      }
                    },
                    "linearInstanceId": {
                      "type": "string",
                      "description": "Corresponding linear asset Id, for catchup asset only"
                    },
                    "restartContentId": {
                      "type": "string",
                      "description": "Corresponding restart asset Id, applicable for linear asset with restartAvailable content flag. This property is provided only as part of contentInstances API. It should be used to create restart play session with /devices/me/playsessions/<restartContentId> API"
                    },
                    "branding": {
                      "type": "string",
                      "description": "In case of shop in shop asset - optional branding information of the provider"
                    },
                    "collapsedItemsCount": {
                      "type": "integer",
                      "description": "Number of collapsed items for this asset. Present only for show/season/group assets."
                    },
                    "collapsedItemsContentType": {
                      "type": "string",
                      "description": "The contentType of collapsed items. In case of show collapsed items can be of type season in case of series with season or episodes in case of open series. Present only for show/season/group assets.",
                      "enum": [
                        "standalone",
                        "episode",
                        "season"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The main display title for this asset.  For 'episodes' and 'seasons' this will be the 'show' title."
                    },
                    "episodeTitle": {
                      "type": "string",
                      "description": "Optionally provided, for episode assets only. This is the title of the episode."
                    },
                    "seasonNumber": {
                      "type": "string",
                      "description": "The number of the season.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "episodeNumber": {
                      "type": "string",
                      "description": "The number of the episode.  Only supplied for Asset of type 'episode'"
                    },
                    "showId": {
                      "type": "string",
                      "description": "The identifier of the associated Show.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "seasonId": {
                      "type": "string",
                      "description": "The identifier of the associated Season.  Only supplied for asset of type 'episode'"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "External content/video identifier for third party video applications, coming from federated search sources, i.e. youtube or netflix"
                    },
                    "externalPackageId": {
                      "type": "string",
                      "description": "External content/video Package identifier which comes from ADI ingest and used by service provider in order to track content package"
                    },
                    "productionYear": {
                      "type": "integer",
                      "description": "The year the asset content was produced"
                    },
                    "productionLocation": {
                      "type": "string",
                      "description": "The location in which the asset content was produced"
                    },
                    "starRating": {
                      "type": "integer",
                      "description": "The editorially supplied star rating for the asset.  Supplied as an integer.  The platform will define the supplyer of the rating and hence the range, (e.g. 1-5, 1-10, 100%)  The UI will determine how this value is to be presented."
                    },
                    "audioLanguages": {
                      "type": "array",
                      "description": "The display strings for the available audio languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "audioFormat": {
                      "type": "string",
                      "description": "The display string for the audio format this asset is available in.  For example 'Dolby Prologic'.  Note that asset may have several audio formats available, this is the primary display name for the best audio."
                    },
                    "videoFormat": {
                      "type": "string",
                      "description": "The display string for the video format this asset is available in.  For example '1080i HD'.  Note that asset may be available in other video formats, this is the primary display name for the best video format."
                    },
                    "subtitleLanguages": {
                      "type": "array",
                      "description": "The display strings for the available subtitle languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contentAdvisories": {
                      "type": "array",
                      "description": "The advisory flags applicable for this asset. This is personalized for the client.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalFlags": {
                      "type": "array",
                      "description": "Externally driven flags associated with this asset. Values are controlled by the operator and are opaque to API. Application code can use the flags as UI indications.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalLinks": {
                      "type": "object",
                      "properties": {
                        "assetPage": {
                          "type": "string",
                          "description": "the detail page to display for this external asset"
                        },
                        "playback": {
                          "type": "string",
                          "description": "the link to invoke for playback of this external asset"
                        },
                        "type": {
                          "type": "string",
                          "description": "the type of link for the external content",
                          "enum": [
                            "externalApp",
                            "webPage"
                          ]
                        }
                      },
                      "description": "A set of links to allow the client to access external content"
                    },
                    "media": {
                      "type": "array",
                      "description": "Media to use to present this asset.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "credits": {
                      "type": "object",
                      "properties": {
                        "actors": {
                          "type": "array",
                          "description": "The list of actors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directors": {
                          "type": "array",
                          "description": "The list of directors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "genres": {
                      "type": "array",
                      "description": "array of genres.",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "synopsis": {
                      "type": "string",
                      "description": "A short form of synopsis to display when Asset is displayed in a list, summary or grid view.  Always supplied when synopsis is available.  Note: some Asset may have no synopsis"
                    },
                    "longSynopsis": {
                      "type": "string",
                      "description": "A long form of synopsis to display when Asset is displayed in detail.  It is returned only as part of contentInstances API and in groupContent responses, but not from other aggregation   Note: some Asset may have no synopsis or no long synopsis"
                    },
                    "studioCode": {
                      "type": "string",
                      "description": "The registration code assigned to the asset by the studio providing it"
                    },
                    "parentalRating": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The display string to use to indicate this parental rating."
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value to use for enforcing parental control policies"
                        }
                      },
                      "description": "The parental rating assigned to this asset."
                    },
                    "externalStarRatings": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "List of star rating provided by external providers like IMdb.",
                      "items": {
                        "required": [
                          "provider",
                          "score"
                        ],
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "imdb"
                            ]
                          },
                          "score": {
                            "type": "number"
                          }
                        },
                        "description": "external provider star rating object."
                      }
                    },
                    "trailer": {
                      "type": "object",
                      "properties": {
                        "trailerContentId": {
                          "type": "string",
                          "description": "Trailer Identifier, this id can be used to play the trailer."
                        }
                      },
                      "description": "Trailer information for this asset"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The channel description. The property is not supplied when asset is already part of channel schema (/agg/grid API) or in conflict schema."
                    },
                    "recordingState": {
                      "type": "string",
                      "description": "State of the recording progress for a booking.",
                      "enum": [
                        "notStarted",
                        "inProgress",
                        "ended",
                        "failed"
                      ]
                    },
                    "locator": {
                      "type": "string",
                      "description": "Locator of the asset that can be used in paging requests."
                    },
                    "bookingStatesKey": {
                      "type": "string",
                      "description": "A key which can be used to find booking state of this asset inside booking state list provided by API /personal/bookingStates. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "restartEventKey": {
                      "type": "string",
                      "description": "A key which can be used to find restart information for this asset inside restartEvents list provided by API /shared/restartEvents. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "entitledPpvKey": {
                      "type": "string",
                      "description": "A key which can be used to find entitled state of this asset inside ppvEntitlements list provided by API /personal/ppvEntitlements. This property is provided only for ppv events as part of non-personalized API /shared/grid"
                    },
                    "viewHistoryKey": {
                      "type": "string",
                      "description": "A key which can be used to find viewing history of this asset inside viewHistory list provided by API /personal/viewingHistory. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "offerKeys": {
                      "type": "string",
                      "description": "A list of offer keys which can be used to check entitlement status of this asset by matching with entitled offers list provided by API /personal/entitledOffers. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "consentGroup": {
                      "type": "string",
                      "description": "The dynamic ads provider identifier for this asset, relevant for VOD assets only. Opting in or out to getting targeted advertisements is done per consentGroup"
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Base Schema for an asset which can be either a concrete episode/standalone event or a grouped content (season/show/group aka boxset). This schema replaces instance.schema and content.schema starting from API version 1.6.0",
                  "example": {
                    "id": "IID_234534532",
                    "resource": "asset",
                    "source": "ltv",
                    "startDateTime": "2015-09-14T10:38:54.290Z",
                    "lastPlayPosition": 321,
                    "channel": {
                      "id": "CHID_423421",
                      "name": "HBO",
                      "media": [
                        {
                          "type": "inverted",
                          "mimeType": "image/svg+xml",
                          "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/three_hd.svg"
                        },
                        {
                          "type": "regular",
                          "mimeType": "image/svg+xml",
                          "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/three_hd.svg"
                        }
                      ]
                    },
                    "externalPackageId": "71TevPIlPdZGFuyzQENoEkHoNsWWrvAI",
                    "contentType": "standalone",
                    "title": "Toy Story 3",
                    "duration": 6480000,
                    "productionYear": 2010,
                    "credits": {
                      "actors": [
                        "Tom Hanks",
                        "Tim Allen",
                        "Joan Cusack",
                        "Don Rickles",
                        "Wallace Shawn"
                      ],
                      "directors": [
                        "Lee Unkrich"
                      ]
                    },
                    "parentalRating": {
                      "name": "PG-13",
                      "value": 13
                    },
                    "genres": [
                      {
                        "name": "comedy",
                        "genreId": "comedy"
                      }
                    ],
                    "media": [
                      {
                        "type": "large",
                        "mimeType": "image/jpeg",
                        "url": "http://phx-media-server.il.nds.com/VODposters.portrait/6502.jpg",
                        "height": 275,
                        "width": 183
                      }
                    ],
                    "purchases": [
                      {
                        "offerId": "1234",
                        "isAuthorized": false,
                        "expirationDate": "2020-09-14T10:38:54.290Z",
                        "price": 99900,
                        "currencySymbol": "USD",
                        "marketingMsg": "Purchase Game of Thrones for 9.99 USD",
                        "groupId": "IID_6543",
                        "authorizationType": "Bundle",
                        "purchaseWindowStartDate": "2020-09-14T10:38:54.290Z",
                        "purchaseWindowEndDate": "2020-09-14T10:38:54.290Z",
                        "purchaseOptionStatus": "active",
                        "deals": [
                          {
                            "dealId": "deal_0",
                            "endTime": "2020-12-20T23:59:59.000Z",
                            "dealType": "percentageDiscount",
                            "dealMessage": "kid movies now in 10% discount",
                            "dealData": {
                              "discountPercent": 7.5
                            },
                            "price": 50000,
                            "dealPrice": 45000,
                            "currencySymbol": "$"
                          }
                        ]
                      }
                    ],
                    "audioLanguages": [
                      "English",
                      "German",
                      "French"
                    ],
                    "subtitleLanguages": [
                      "German",
                      "French"
                    ],
                    "synopsis": "Andy leaving for college and donating his beloved toys to a daycare",
                    "longSynopsis": "Pixar returns to their first success with Toy Story 3. The movie begins with Andy leaving for college and donating his beloved toys -- including Woody (Tom Hanks) and Buzz (Tim Allen) -- to a daycare. While the crew meets new friends, including Ken (Michael Keaton), they soon grow to hate their new surroundings and plan an escape.",
                    "contentFlags": [
                      "erotic"
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contentInstances/{instanceId}/nextEpisode": {
      "get": {
        "description": "Get next episode for a given content. If the series spans multiple seasons of episodes\nand the asset identified by instanceId refers to the last episode in a season,\nthen the nextEpisode resource represents the first episode of the next season of that series.\n",
        "operationId": "GET_contentInstances-instanceId-nextEpisode",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentType",
                    "id",
                    "resource",
                    "source",
                    "title"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this asset"
                    },
                    "resource": {
                      "type": "string",
                      "enum": [
                        "asset"
                      ]
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The type of this asset.  Determines if the asset has any parent or child relationships to other assets",
                      "enum": [
                        "standalone",
                        "episode",
                        "season",
                        "show",
                        "group"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "The different sources of an asset. In case of grouped content, this is the source of the collapsed items",
                      "enum": [
                        "ltv",
                        "vod",
                        "pvr",
                        "youtube",
                        "catchup"
                      ]
                    },
                    "startDateTime": {
                      "type": "string",
                      "description": "For ltv,catchup,pvr standalone/episodes assets, the date-time this asset is broadcast on the associated channel. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "isEntitled": {
                      "type": "boolean",
                      "description": "Determines if this household is entitled to play this asset."
                    },
                    "isVodFavorite": {
                      "type": "boolean",
                      "description": "Determines if this item has been marked as favorite. When property is missing it is considered as false."
                    },
                    "expirationDateTime": {
                      "type": "string",
                      "description": "The date-time at which this instance is no longer available. Provided only if applicable (e.g. CDVR expiration or VOD expiration when expiringSoon content flag is set). Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "rentalExpiration": {
                      "type": "string",
                      "description": "The date-time at which rental entitlements expires. It will be present only for vods that have been rented by the user. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "lastPlayPosition": {
                      "type": "integer",
                      "description": "The last position, in seconds from the start, that the user got to when last viewing this asset. Applicable to standalone/episodes assets of type vod/pvr/catchup.  The value is based on the parameter supplied by the application in the DELETE devices/me/playsessions API when tearing down this asset's playsession. The parameter supplied only when the value is non-zero."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of this asset in seconds.  Only relevant for standalone/episode contentType."
                    },
                    "contentDuration": {
                      "type": "integer",
                      "description": "The original content duration. May be different from duration.  For PVR asset it represents duration of original content. The value is not provided when identical to duration."
                    },
                    "contentFlags": {
                      "type": "string",
                      "description": "The content flags applicable for this asset. This is personalized for the client. In some use cases partial list of contentFlags will be returned, depending on API used"
                    },
                    "booking": {
                      "type": "string",
                      "description": "The booking associated with this asset."
                    },
                    "purchaseDateTime": {
                      "type": "string",
                      "description": "Time stamp reflecting the purchase date (if applicable). format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "purchases": {
                      "type": "array",
                      "description": "The list of Authorization status of the offers associated with the asset",
                      "items": {
                        "type": "string",
                        "description": "The Authorization status of the offers associated with the asset"
                      }
                    },
                    "bookmarks": {
                      "type": "array",
                      "description": "The list of bookmarks that are present for the asset. It is returned only as part of contentInstances API",
                      "items": {
                        "type": "string",
                        "description": "The bookmark name and offset"
                      }
                    },
                    "linearInstanceId": {
                      "type": "string",
                      "description": "Corresponding linear asset Id, for catchup asset only"
                    },
                    "restartContentId": {
                      "type": "string",
                      "description": "Corresponding restart asset Id, applicable for linear asset with restartAvailable content flag. This property is provided only as part of contentInstances API. It should be used to create restart play session with /devices/me/playsessions/<restartContentId> API"
                    },
                    "branding": {
                      "type": "string",
                      "description": "In case of shop in shop asset - optional branding information of the provider"
                    },
                    "collapsedItemsCount": {
                      "type": "integer",
                      "description": "Number of collapsed items for this asset. Present only for show/season/group assets."
                    },
                    "collapsedItemsContentType": {
                      "type": "string",
                      "description": "The contentType of collapsed items. In case of show collapsed items can be of type season in case of series with season or episodes in case of open series. Present only for show/season/group assets.",
                      "enum": [
                        "standalone",
                        "episode",
                        "season"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The main display title for this asset.  For 'episodes' and 'seasons' this will be the 'show' title."
                    },
                    "episodeTitle": {
                      "type": "string",
                      "description": "Optionally provided, for episode assets only. This is the title of the episode."
                    },
                    "seasonNumber": {
                      "type": "string",
                      "description": "The number of the season.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "episodeNumber": {
                      "type": "string",
                      "description": "The number of the episode.  Only supplied for Asset of type 'episode'"
                    },
                    "showId": {
                      "type": "string",
                      "description": "The identifier of the associated Show.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "seasonId": {
                      "type": "string",
                      "description": "The identifier of the associated Season.  Only supplied for asset of type 'episode'"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "External content/video identifier for third party video applications, coming from federated search sources, i.e. youtube or netflix"
                    },
                    "externalPackageId": {
                      "type": "string",
                      "description": "External content/video Package identifier which comes from ADI ingest and used by service provider in order to track content package"
                    },
                    "productionYear": {
                      "type": "integer",
                      "description": "The year the asset content was produced"
                    },
                    "productionLocation": {
                      "type": "string",
                      "description": "The location in which the asset content was produced"
                    },
                    "starRating": {
                      "type": "integer",
                      "description": "The editorially supplied star rating for the asset.  Supplied as an integer.  The platform will define the supplyer of the rating and hence the range, (e.g. 1-5, 1-10, 100%)  The UI will determine how this value is to be presented."
                    },
                    "audioLanguages": {
                      "type": "array",
                      "description": "The display strings for the available audio languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "audioFormat": {
                      "type": "string",
                      "description": "The display string for the audio format this asset is available in.  For example 'Dolby Prologic'.  Note that asset may have several audio formats available, this is the primary display name for the best audio."
                    },
                    "videoFormat": {
                      "type": "string",
                      "description": "The display string for the video format this asset is available in.  For example '1080i HD'.  Note that asset may be available in other video formats, this is the primary display name for the best video format."
                    },
                    "subtitleLanguages": {
                      "type": "array",
                      "description": "The display strings for the available subtitle languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contentAdvisories": {
                      "type": "array",
                      "description": "The advisory flags applicable for this asset. This is personalized for the client.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalFlags": {
                      "type": "array",
                      "description": "Externally driven flags associated with this asset. Values are controlled by the operator and are opaque to API. Application code can use the flags as UI indications.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalLinks": {
                      "type": "object",
                      "properties": {
                        "assetPage": {
                          "type": "string",
                          "description": "the detail page to display for this external asset"
                        },
                        "playback": {
                          "type": "string",
                          "description": "the link to invoke for playback of this external asset"
                        },
                        "type": {
                          "type": "string",
                          "description": "the type of link for the external content",
                          "enum": [
                            "externalApp",
                            "webPage"
                          ]
                        }
                      },
                      "description": "A set of links to allow the client to access external content"
                    },
                    "media": {
                      "type": "array",
                      "description": "Media to use to present this asset.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "credits": {
                      "type": "object",
                      "properties": {
                        "actors": {
                          "type": "array",
                          "description": "The list of actors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directors": {
                          "type": "array",
                          "description": "The list of directors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "genres": {
                      "type": "array",
                      "description": "array of genres.",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "synopsis": {
                      "type": "string",
                      "description": "A short form of synopsis to display when Asset is displayed in a list, summary or grid view.  Always supplied when synopsis is available.  Note: some Asset may have no synopsis"
                    },
                    "longSynopsis": {
                      "type": "string",
                      "description": "A long form of synopsis to display when Asset is displayed in detail.  It is returned only as part of contentInstances API and in groupContent responses, but not from other aggregation   Note: some Asset may have no synopsis or no long synopsis"
                    },
                    "studioCode": {
                      "type": "string",
                      "description": "The registration code assigned to the asset by the studio providing it"
                    },
                    "parentalRating": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The display string to use to indicate this parental rating."
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value to use for enforcing parental control policies"
                        }
                      },
                      "description": "The parental rating assigned to this asset."
                    },
                    "externalStarRatings": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "List of star rating provided by external providers like IMdb.",
                      "items": {
                        "required": [
                          "provider",
                          "score"
                        ],
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "imdb"
                            ]
                          },
                          "score": {
                            "type": "number"
                          }
                        },
                        "description": "external provider star rating object."
                      }
                    },
                    "trailer": {
                      "type": "object",
                      "properties": {
                        "trailerContentId": {
                          "type": "string",
                          "description": "Trailer Identifier, this id can be used to play the trailer."
                        }
                      },
                      "description": "Trailer information for this asset"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The channel description. The property is not supplied when asset is already part of channel schema (/agg/grid API) or in conflict schema."
                    },
                    "recordingState": {
                      "type": "string",
                      "description": "State of the recording progress for a booking.",
                      "enum": [
                        "notStarted",
                        "inProgress",
                        "ended",
                        "failed"
                      ]
                    },
                    "locator": {
                      "type": "string",
                      "description": "Locator of the asset that can be used in paging requests."
                    },
                    "bookingStatesKey": {
                      "type": "string",
                      "description": "A key which can be used to find booking state of this asset inside booking state list provided by API /personal/bookingStates. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "restartEventKey": {
                      "type": "string",
                      "description": "A key which can be used to find restart information for this asset inside restartEvents list provided by API /shared/restartEvents. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "entitledPpvKey": {
                      "type": "string",
                      "description": "A key which can be used to find entitled state of this asset inside ppvEntitlements list provided by API /personal/ppvEntitlements. This property is provided only for ppv events as part of non-personalized API /shared/grid"
                    },
                    "viewHistoryKey": {
                      "type": "string",
                      "description": "A key which can be used to find viewing history of this asset inside viewHistory list provided by API /personal/viewingHistory. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "offerKeys": {
                      "type": "string",
                      "description": "A list of offer keys which can be used to check entitlement status of this asset by matching with entitled offers list provided by API /personal/entitledOffers. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "consentGroup": {
                      "type": "string",
                      "description": "The dynamic ads provider identifier for this asset, relevant for VOD assets only. Opting in or out to getting targeted advertisements is done per consentGroup"
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Base Schema for an asset which can be either a concrete episode/standalone event or a grouped content (season/show/group aka boxset). This schema replaces instance.schema and content.schema starting from API version 1.6.0",
                  "example": {
                    "id": "IID_45668",
                    "resource": "asset",
                    "source": "vod",
                    "contentType": "episode",
                    "title": "Pilot",
                    "genres": [
                      {
                        "name": "drama",
                        "genreId": "drama"
                      },
                      {
                        "name": "crime",
                        "genreId": "crime"
                      }
                    ],
                    "duration": 42,
                    "isEntitled": true,
                    "media": [
                      {
                        "mimeType": "image/jpeg",
                        "url": "http://img.server.com/45668.jpg",
                        "height": 300,
                        "width": 200
                      }
                    ],
                    "seasonNumber": "1",
                    "episodeNumber": "1",
                    "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                  }
                }
              }
            }
          },
          "204": {
            "description": "The content instance is part of a series but the next episode is not availablie.\nThis can be in case the next episode is not available in the catalog, or if this is the last episode of the last season.\n",
            "content": {}
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The given content instance is not part of a show.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contentInstances/{instanceId}/lastPlayPosition": {
      "put": {
        "description": "Sets the last played position in seconds from the beginning of the contentInstance.\n",
        "operationId": "PUT_contentInstances-instanceId-lastPlayPosition",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Can be supplied as a hint to the server as to the status of the asset that is being set.\nOnly necessary for use cases where the client received the instanceId from an external agent other than a ctap refAPI response.\nValid values:\n* vod - video on demand content\n* pvr - pvr recorded content\n* catchup - online catchup content\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "playPosition"
                ],
                "type": "object",
                "properties": {
                  "playPosition": {
                    "type": "integer",
                    "description": "The position in seconds from the beginning of the asset."
                  }
                },
                "description": "Schema to update the lastPlayposition of played content",
                "example": {
                  "playPosition": 300
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The last played position has been successfully updated.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required query parameter (position) was not provided.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Query parameter not provided"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server was unable to process this request because an invalid content instance Id was provided.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "Invalid Instance Id"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/ids/contentInstance": {
      "get": {
        "description": "Generate contentInstanceId",
        "operationId": "GET_ids-contentInstance",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "description": "Unique identifier for a content item.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "query",
            "description": "Identifier for an instance of a specific content.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "The source of the given content. Valid values:\n* ltv - broadcast TV content\n* vod - video on demand content\n* pvr - pvr recorded content\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentInstanceId"
                  ],
                  "type": "object",
                  "properties": {
                    "contentInstanceId": {
                      "type": "string",
                      "description": "The contentInstanceId built from the given contentId, instanceId and source"
                    }
                  },
                  "description": "contentInstanceId generated by Infinite Home, opaque to the client",
                  "example": {
                    "contentInstanceId": "CIID_234234"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ids/contentInstance/{contentInstanceId}": {
      "get": {
        "description": "Get external identifiers from contentInstanceId",
        "operationId": "GET_ids-contentInstance-contentInstanceId",
        "parameters": [
          {
            "name": "contentInstanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentId",
                    "contentInstanceId",
                    "instanceId",
                    "source"
                  ],
                  "type": "object",
                  "properties": {
                    "contentInstanceId": {
                      "type": "string",
                      "description": "The contentInstanceId"
                    },
                    "contentId": {
                      "type": "string",
                      "description": "Unique identifier for a content item"
                    },
                    "instanceId": {
                      "type": "string",
                      "description": "Identifier for an instance of a specific content"
                    },
                    "source": {
                      "type": "string",
                      "description": "The source of the content.",
                      "enum": [
                        "ltv",
                        "vod",
                        "pvr"
                      ]
                    }
                  },
                  "description": "contentInstanceId and external identifiers used to generate it",
                  "example": {
                    "contentInstanceId": "CIID_234234",
                    "contentId": "2342",
                    "instanceId": "34",
                    "source": "ltv"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/keywords/suggest": {
      "get": {
        "description": "Get search keyword suggestion based on a given phrase",
        "operationId": "GET_keywords-suggest",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The phrase to base the suggestions on\nNOTE: q query parameter is optional only when using historyCount query parameter in query, otherwise it's mandatory.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximal number of suggested keywords to return",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma separated list to filter content instance source. Valid values:\n* ltv - broadcast TV content\n* vod - video on demand content\n* pvr - pvr recorded content\n* catchup - online catchup content\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "historyCount",
            "in": "query",
            "description": "Maximum number of matched history phrases strings that should be returned in suggestion keywords response\nNOTE:\nhistoryCount query parameter is mandatory in case q query parameter is not set in query.\nhistoryCount value number can not be higher than value number set in limit query parameter.\n",
            "schema": {
              "maximum": 30,
              "type": "integer"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "description": "A list of search suggestion string based upon the search criteria supplied",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "A search suggestion string based upon the search criteria supplied"
                          }
                        }
                      }
                    }
                  },
                  "description": "Schema for list of suggestions",
                  "example": {
                    "suggestions": [
                      {
                        "name": "Game of Thornes"
                      },
                      {
                        "name": "Hunger Games"
                      },
                      {
                        "name": "The imitation Game"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userProfiles": {
      "get": {
        "description": "Retrieves a list of all existing user profiles in the current household.\n",
        "operationId": "GET_userProfiles",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "profileSource",
            "in": "query",
            "description": "enum : [userDefined, systemDefined, all]\nSupported values:\n* userDefined - userProfiles which have been created by the user.\n* systemDefined - userProfiles which have been created by the system, e.g: the default profile.\n* all - return all the userProfiles that are defined for this household.\nFor backwards compatibility reasons, the default behavior in case this parameter is not specified is\nthat only the default userProfile and the userDefined userProfiles will be returned.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema for list of userProfiles",
                  "example": [
                    {
                      "userProfileId": "hh_up_1",
                      "userProfileSettings": {
                        "uiLanguage": "eng",
                        "audioLanguage": "eng",
                        "subtitlesLanguage": "eng",
                        "presentSubtitles": false,
                        "parentalRatingThreshold": 10,
                        "clockFormat": "24H",
                        "presentClosedCaptions": true,
                        "closedCaptionsTrack": "cc1",
                        "displayName": "Elza",
                        "maxAge": 12,
                        "avatarId": "avatar~5"
                      }
                    },
                    {
                      "userProfileId": "hh_up_2",
                      "userProfileSettings": {
                        "uiLanguage": "eng",
                        "audioLanguage": "eng",
                        "subtitlesLanguage": "eng",
                        "presentSubtitles": false,
                        "parentalRatingThreshold": 15,
                        "clockFormat": "24H",
                        "presentClosedCaptions": true,
                        "closedCaptionsTrack": "cc1",
                        "displayName": "Father's Profile",
                        "maxAge": 12,
                        "avatarId": "avatar~1"
                      }
                    }
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new user profile and associate it with the current household. Note - it is will not be the active profile on any device until\nit is explicitly activated on that device by invoking PUT /devices/me/activeUserProfile.\n",
        "operationId": "POST_userProfiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "avatarId",
                  "displayName",
                  "maxAge"
                ],
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "The name of the user profile"
                  },
                  "maxAge": {
                    "type": "integer",
                    "description": "The maximum age of the users who will be using this profile. This is used for example to bring relevant recommendations."
                  },
                  "avatarId": {
                    "type": "string",
                    "description": "The ID of the user profile avatar"
                  }
                },
                "description": "Schema for creating a user profile",
                "example": {
                  "displayName": "Elza",
                  "maxAge": 12,
                  "avatarId": "avatar~5"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "The new user profile successfully added to the household. The newly created user profile is returned in the response body.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for a userProfile",
                  "example": {
                    "userProfileId": "hh_up_1",
                    "userProfileSettings": {
                      "uiLanguage": "eng",
                      "audioLanguage": "eng",
                      "subtitlesLanguage": "eng",
                      "presentSubtitles": false,
                      "parentalRatingThreshold": 10,
                      "clockFormat": "24H",
                      "presentClosedCaptions": true,
                      "closedCaptionsTrack": "cc1",
                      "displayName": "Elza",
                      "maxAge": 12,
                      "avatarId": "avatar~1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "ENonUniqueProfileName",
                    "errors": [
                      "userProfile validation failed. household contains another userProfile with the same profileName"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/userProfiles/me/history/recentChannels": {
      "delete": {
        "description": "deletes the recently viewed channels list of the calling client's active user profile.\n",
        "operationId": "DELETE_userProfiles-me-history-recentChannels",
        "responses": {
          "200": {
            "description": "the recently viewed channels list of the user profile was successfully deleted.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userProfiles/{userProfileId}": {
      "delete": {
        "description": "Deletes the given user profile from the household.\nNote: A user profile that is the active user profile on the current device should not be deleted. The app\nshould first give the user a way to switch over to a different profile.  The available profiles in the household\ncan be listed by the GET /userProfiles API.\n",
        "operationId": "DELETE_userProfiles-userProfileId",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user profile has been successfully deleted.\n",
            "content": {}
          },
          "403": {
            "description": "The user profile can not be deleted. Expected in case the userProfileId is the active user profile on the current device.\n",
            "content": {}
          }
        }
      }
    },
    "/userProfiles/{userProfileId}/settings": {
      "get": {
        "description": "Retrieves the settings for the given user profile.\n",
        "operationId": "GET_userProfiles-userProfileId-settings",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for user profile settings",
                  "example": {
                    "uiLanguage": "eng",
                    "audioLanguage": "eng",
                    "subtitlesLanguage": "eng",
                    "presentSubtitles": false,
                    "parentalRatingThreshold": 10,
                    "clockFormat": "24H",
                    "presentClosedCaptions": true,
                    "closedCaptionsTrack": "cc1",
                    "displayName": "Elza",
                    "maxAge": 12,
                    "isDefault": false,
                    "avatarId": "avatar~1",
                    "filterSDChannels": true,
                    "filterUnEntitledChannels": false,
                    "buyingProtectionForOnDemand": false,
                    "masterPersonalizationFlag": false
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Update the settings for the given user profile.\n",
        "operationId": "POST_userProfiles-userProfileId-settings",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pin-token",
            "in": "header",
            "description": "Identifies the token received in PIN verification response.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uiLanguage": {
                    "type": "string",
                    "description": "Language to use within the UI for display.  ISO 639-2 format."
                  },
                  "audioLanguage": {
                    "type": "string",
                    "description": "Preferred audio language to use when playing content.  ISO 639-2 format."
                  },
                  "subtitlesLanguage": {
                    "type": "string",
                    "description": "Preferred language to use when displaying subtitles.  ISO 639-2 format."
                  },
                  "presentSubtitles": {
                    "type": "boolean",
                    "description": "Flag to indicate if subtitles should be displayed by default when playing content."
                  },
                  "parentalRatingThreshold": {
                    "type": "integer",
                    "description": "The parental rating threshold set for this user."
                  },
                  "clockFormat": {
                    "type": "string",
                    "description": "Determines if the clock is shown in 24 hour or 12 hour format.",
                    "enum": [
                      "24H",
                      "12H"
                    ]
                  },
                  "closedCaptionsTrack": {
                    "type": "string",
                    "description": "default closed caption track to use"
                  },
                  "presentClosedCaptions": {
                    "type": "boolean",
                    "description": "Boolean flag indicating if you present closed captions for this user"
                  },
                  "masterPersonalizationFlag": {
                    "type": "boolean",
                    "description": "Boolean flag indicating whether or not the Master Household flag of personalized services is enabled."
                  },
                  "allowUpsell": {
                    "type": "boolean"
                  },
                  "upsellTnCVersion": {
                    "type": "string"
                  },
                  "adultFilteringEnabled": {
                    "type": "boolean"
                  },
                  "personalizationTnCVersion": {
                    "type": "string"
                  },
                  "bingeEnabled": {
                    "type": "boolean",
                    "description": "Indicates if automatic binge watching is enabled for this user profile"
                  },
                  "filterSDChannels": {
                    "type": "boolean",
                    "description": "control whether SD channels should be filtered out of the /channels and /agg/grid responses",
                    "default": false
                  },
                  "filterUnEntitledChannels": {
                    "type": "boolean",
                    "description": "control whether unentitled channels should be filtered out of the /channels and /agg/grid responses",
                    "default": false
                  },
                  "buyingProtectionForOnDemand": {
                    "type": "boolean",
                    "description": "Boolean flag indicating whether or not On Demand purchases (VOD, PPV…) are PIN protected."
                  },
                  "avatarId": {
                    "type": "string",
                    "description": "The ID of the user profile avatar"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name for the user profile"
                  },
                  "maxAge": {
                    "type": "integer",
                    "description": "The maximum age of the users who will be using this profile. This is used for example to bring relevant recommendations."
                  },
                  "isDefault": {
                    "type": "boolean",
                    "description": "true if this user profile is the default user profile. this setting cannot be set by the client"
                  },
                  "isKidsExperience": {
                    "type": "boolean",
                    "description": "true if this user profile is the KidsExperience user profile. this setting cannot be set by the client"
                  },
                  "isSystemDefined": {
                    "type": "boolean",
                    "description": "true if this user profile is defined by the system. will be true for both the default user profile and the kidsExperience user profile. this setting cannot be set by the client"
                  }
                },
                "description": "Schema for user profile settings",
                "example": {
                  "uiLanguage": "eng",
                  "audioLanguage": "eng",
                  "subtitlesLanguage": "eng",
                  "presentSubtitles": false,
                  "parentalRatingThreshold": 10,
                  "clockFormat": "24H",
                  "presentClosedCaptions": true,
                  "closedCaptionsTrack": "cc1",
                  "displayName": "Elza",
                  "maxAge": 12,
                  "isDefault": false,
                  "avatarId": "avatar~1",
                  "filterSDChannels": true,
                  "filterUnEntitledChannels": false,
                  "buyingProtectionForOnDemand": false,
                  "masterPersonalizationFlag": false
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The user profile has been successfully updated.",
            "content": {}
          },
          "400": {
            "description": "Invalid body or request params",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL ERROR",
                    "errors": [
                      "invalid body"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "ENonUniqueProfileName",
                    "errors": [
                      "userProfile validation failed. household contains another userProfile with the same profileName"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "patch": {
        "description": "Update the settings for the given user profile.\n",
        "operationId": "PATCH_userProfiles-userProfileId-settings",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-pin-token",
            "in": "header",
            "description": "Identifies the token received in PIN verification response.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uiLanguage": {
                    "type": "string",
                    "description": "Language to use within the UI for display.  ISO 639-2 format."
                  },
                  "audioLanguage": {
                    "type": "string",
                    "description": "Preferred audio language to use when playing content.  ISO 639-2 format."
                  },
                  "subtitlesLanguage": {
                    "type": "string",
                    "description": "Preferred language to use when displaying subtitles.  ISO 639-2 format."
                  },
                  "presentSubtitles": {
                    "type": "boolean",
                    "description": "Flag to indicate if subtitles should be displayed by default when playing content."
                  },
                  "parentalRatingThreshold": {
                    "type": "integer",
                    "description": "The parental rating threshold set for this user."
                  },
                  "clockFormat": {
                    "type": "string",
                    "description": "Determines if the clock is shown in 24 hour or 12 hour format.",
                    "enum": [
                      "24H",
                      "12H"
                    ]
                  },
                  "closedCaptionsTrack": {
                    "type": "string",
                    "description": "default closed caption track to use"
                  },
                  "presentClosedCaptions": {
                    "type": "boolean",
                    "description": "Boolean flag indicating if you present closed captions for this user"
                  },
                  "masterPersonalizationFlag": {
                    "type": "boolean",
                    "description": "Boolean flag indicating whether or not the Master Household flag of personalized services is enabled."
                  },
                  "allowUpsell": {
                    "type": "boolean"
                  },
                  "upsellTnCVersion": {
                    "type": "string"
                  },
                  "adultFilteringEnabled": {
                    "type": "boolean"
                  },
                  "personalizationTnCVersion": {
                    "type": "string"
                  },
                  "bingeEnabled": {
                    "type": "boolean",
                    "description": "Indicates if automatic binge watching is enabled for this user profile"
                  },
                  "filterSDChannels": {
                    "type": "boolean",
                    "description": "control whether SD channels should be filtered out of the /channels and /agg/grid responses",
                    "default": false
                  },
                  "filterUnEntitledChannels": {
                    "type": "boolean",
                    "description": "control whether unentitled channels should be filtered out of the /channels and /agg/grid responses",
                    "default": false
                  },
                  "buyingProtectionForOnDemand": {
                    "type": "boolean",
                    "description": "Boolean flag indicating whether or not On Demand purchases (VOD, PPV…) are PIN protected."
                  },
                  "avatarId": {
                    "type": "string",
                    "description": "The ID of the user profile avatar"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name for the user profile"
                  },
                  "maxAge": {
                    "type": "integer",
                    "description": "The maximum age of the users who will be using this profile. This is used for example to bring relevant recommendations."
                  },
                  "isDefault": {
                    "type": "boolean",
                    "description": "true if this user profile is the default user profile. this setting cannot be set by the client"
                  },
                  "isKidsExperience": {
                    "type": "boolean",
                    "description": "true if this user profile is the KidsExperience user profile. this setting cannot be set by the client"
                  },
                  "isSystemDefined": {
                    "type": "boolean",
                    "description": "true if this user profile is defined by the system. will be true for both the default user profile and the kidsExperience user profile. this setting cannot be set by the client"
                  }
                },
                "description": "Schema for user profile settings",
                "example": {
                  "uiLanguage": "eng",
                  "audioLanguage": "eng",
                  "subtitlesLanguage": "eng",
                  "presentSubtitles": false,
                  "parentalRatingThreshold": 10,
                  "clockFormat": "24H",
                  "presentClosedCaptions": true,
                  "closedCaptionsTrack": "cc1",
                  "displayName": "Elza",
                  "maxAge": 12,
                  "isDefault": false,
                  "avatarId": "avatar~1",
                  "filterSDChannels": true,
                  "filterUnEntitledChannels": false,
                  "buyingProtectionForOnDemand": false,
                  "masterPersonalizationFlag": false
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The user profile has been successfully updated.",
            "content": {}
          },
          "400": {
            "description": "Invalid body or request params",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL ERROR",
                    "errors": [
                      "invalid body"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "ENonUniqueProfileName",
                    "errors": [
                      "userProfile validation failed. household contains another userProfile with the same profileName"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/userProfiles/{userProfileId}/settings/lockedChannels": {
      "get": {
        "description": "Retrieve a list of locked channels. The list includes only the channelId and possibly logicalChannelNumber of the channels. To\nsee the channels' full metadata use the /channels API. The locked channels in the /channels response will have the isLocked flag set.\n",
        "operationId": "GET_userProfiles-userProfileId-settings-lockedChannels",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema for retrieving the locked channel list from settings.  A list of channel IDs and logical channel numbers",
                  "example": [
                    {
                      "channelId": "CHID_1",
                      "isTimeLocked": false,
                      "logicalChannelNumber": "1"
                    },
                    {
                      "channelId": "CHID_10",
                      "isTimeLocked": false,
                      "logicalChannelNumber": "5"
                    },
                    {
                      "channelId": "CHID_50",
                      "isTimeLocked": false,
                      "logicalChannelNumber": "55"
                    }
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Sets the list of locked channels. The given list will replace the existing locked channels.\n",
        "operationId": "PUT_userProfiles-userProfileId-settings-lockedChannels",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Schema for replacing the locked channel list in settings.  A list of locked channels",
                "example": [
                  {
                    "channelId": "CHID_1"
                  },
                  {
                    "channelId": "CHID_10"
                  },
                  {
                    "channelId": "CHID_50"
                  }
                ],
                "items": {
                  "type": "string",
                  "description": "A locked channel"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/userProfiles/{userProfileId}/settings/lockedChannels/{channelId}": {
      "post": {
        "description": "Add a given channel to the locked channels list.\n",
        "operationId": "POST_userProfiles-userProfileId-settings-lockedChannels-channelId",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "channelId"
                ],
                "type": "object",
                "properties": {
                  "channelId": {
                    "type": "string",
                    "description": "Channel ID"
                  },
                  "isTimeLocked": {
                    "type": "boolean",
                    "description": "is the locking limited by time. currently not supported and if present will always be false."
                  },
                  "logicalChannelNumber": {
                    "type": "string",
                    "description": "Logical channel number of the channel"
                  }
                },
                "description": "Schema for a locked channel",
                "example": {
                  "channelId": "CHID_1",
                  "isTimeLocked": false
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Channel successfully added to the locked list.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server was unable to process this request because an invalid channelId was provided.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_LOCKED_CHANNELS_ERROR",
                    "errors": [
                      "Invalid Channel Id"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "description": "Delete a given channel from locked channels list.\n",
        "operationId": "DELETE_userProfiles-userProfileId-settings-lockedChannels-channelId",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server was unable to process this request because an invalid channelId was provided.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_LOCKED_CHANNELS_ERROR",
                    "errors": [
                      "Invalid Channel Id"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userProfiles/{userProfileId}/settings/favoriteChannels": {
      "get": {
        "description": "Retrieve a list of favorite channels. The list includes channelId+logicalChannelNumber only. To get a list of\nfavorite channels with metadata - use the /channels API with the isFavourite filter.\n",
        "operationId": "GET_userProfiles-userProfileId-settings-favoriteChannels",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema for retrieving the favourite channel list from settings.  A list of channel IDs and logical channel numbers",
                  "example": [
                    {
                      "id": "CHID_1",
                      "logicalChannelNumber": "1"
                    },
                    {
                      "id": "CHID_10",
                      "logicalChannelNumber": "5"
                    },
                    {
                      "id": "CHID_50",
                      "logicalChannelNumber": "55"
                    }
                  ],
                  "items": {
                    "required": [
                      "id"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "An ID for a channel"
                      },
                      "logicalChannelNumber": {
                        "type": "string",
                        "description": "The logical channel number, or number the user sees the channel as."
                      }
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Sets the list of favorite channels. The given list will replace the existing favorite channels\n",
        "operationId": "PUT_userProfiles-userProfileId-settings-favoriteChannels",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Schema for replacing the favourite channel list in settings.  A list of channel IDs",
                "example": [
                  "CHID_1",
                  "CHID_10",
                  "CHID_50"
                ],
                "items": {
                  "type": "string",
                  "description": "An ID for a channel to add as a favourite"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/userProfiles/{userProfileId}/settings/favoriteChannels/{channelId}": {
      "post": {
        "description": "add a given channel to the favorite channels list\n",
        "operationId": "POST_userProfiles-userProfileId-settings-favoriteChannels-channelId",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Channel successfully added to the favorite list",
            "content": {}
          },
          "400": {
            "description": "Invalid body",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "invalid body"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, the server rejects the request due to maximum limit reached\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "FORBIDDEN_REASON_MAX_VOD_FAVORITES_REACHED",
                    "errors": [
                      "cannot have more than 100 favorites"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "delete a given channel from favorite channels list\n",
        "operationId": "DELETE_userProfiles-userProfileId-settings-favoriteChannels-channelId",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Invalid Channel Id"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userProfiles/{userProfileId}/settings/vodFavorites": {
      "post": {
        "description": "Adds the given content to the list of VOD favorites.\nOnly one of the contentInstanceId/groupId/showId parameters can be used in a single invocation of the end point\n",
        "operationId": "POST_userProfiles-userProfileId-settings-vodFavorites",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentInstanceId",
            "in": "query",
            "description": "id of the standalone/episode asset to be added to the VOD favorite list",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "id of the group (boxset) to be added to the VOD favorite list",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showId",
            "in": "query",
            "description": "showId (VOD series) to be added to the VOD favorite list. This must be the 'showId' field of the show (not the 'id' field of the show)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "vod asset successfully added to the favorite list",
            "content": {}
          },
          "400": {
            "description": "Invalid body or request params",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "invalid body"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, the server rejects the request due to maximum limit reached\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "FORBIDDEN_REASON_MAX_VOD_FAVORITES_REACHED",
                    "errors": [
                      "cannot have more than 100 vod favorites"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userProfiles/{userProfileId}/settings/vodFavorites/{contentId}": {
      "delete": {
        "description": "Delete a given asset or group (boxset) or show (series) from VOD favorite list\nNote: For a show asset the 'showId' should be given. For a boxset/episode/standalone asset, the 'id' should be given.\n",
        "operationId": "DELETE_userProfiles-userProfileId-settings-vodFavorites-contentId",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "asset/group/show was successfully removed from the favorite list",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userProfiles/{userProfileId}/settings/favoriteCategories": {
      "post": {
        "description": "Adds the given category to the list of favorites categories.\n",
        "operationId": "POST_userProfiles-userProfileId-settings-favoriteCategories",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "categoryId"
                ],
                "type": "object",
                "properties": {
                  "categoryId": {
                    "type": "string",
                    "description": "ID of the category to be added to the favorites list"
                  }
                },
                "description": "schema for body of POST /userProfiles/me/settings/favoriteCategories API",
                "example": {
                  "categoryId": "MOVIES"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "category successfully added to the favorite list",
            "content": {}
          },
          "400": {
            "description": "Invalid body",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "categoryId is required"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, the server rejects the request due to maximum limit reached\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "FORBIDDEN_REASON_MAX_VOD_FAVORITES_REACHED",
                    "errors": [
                      "cannot have more than 100 favorite categories"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/userProfiles/{userProfileId}/settings/favoriteCategories/{categoryId}": {
      "delete": {
        "description": "Delete the given category from the favorite category list\n",
        "operationId": "DELETE_userProfiles-userProfileId-settings-favoriteCategories-categoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Invalid Content Instance Id"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userProfiles/{userProfileId}/settings/personalizedChannels": {
      "put": {
        "description": "Create personal sorting for channels of this user. This sort order will then be applied to all refAPI responses that return channel lists.\nThe profileId must be set to the special value 'me'.\nThe input 'channelIdList' field is an array of channel ids.\nIt must contain the *entire* sorted channel list even if the user changed the order of only one channel.\nFor example:\nSay there are total of five channels in the schedule and the user wants to switch the order of the second and third channels.\nThe given 'channelIdList' must be set to [\"1\",\"3\",\"2\",\"4\",\"5\"] even though the order of channels 1 4 and 5 did not change.\n",
        "operationId": "PUT_userProfiles-userProfileId-settings-personalizedChannels",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "channelIdList"
                ],
                "type": "object",
                "properties": {
                  "channelIdList": {
                    "type": "array",
                    "description": "array of channelId containing the order of the channels sorted by user",
                    "items": {
                      "type": "string",
                      "description": "channelId (service equivalence key)"
                    }
                  }
                },
                "description": "Schema for sorting personal channel list",
                "example": {
                  "channelIdList": [
                    "51",
                    "58",
                    "64",
                    "73"
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "New channel sorting was successfully applied according to the given channelId list.",
            "content": {}
          },
          "400": {
            "description": "Invalid or wrong body request params.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "invalid body request params"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "api not supported in this environment.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "personalizedChannels api is not supported"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "EPersonalSortingGeneralError",
                    "errors": [
                      "internal vfps connectivity issue"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "description": "Removes personal channel sorting for the given user profile.\nThe profileId must be set to the special value 'me'\nThis will cause the entire channel list to be reset to the default schedule sorting.\n",
        "operationId": "DELETE_userProfiles-userProfileId-settings-personalizedChannels",
        "parameters": [
          {
            "name": "userProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User will return to use default schedule sort order of channels.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "api not supported in this environment.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "personalizedChannels api is not supported"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me": {
      "get": {
        "description": "Get the details of the calling client's household.",
        "operationId": "GET_household-me",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for household",
                  "example": {
                    "id": "cgw-dev",
                    "firstName": "John",
                    "lastName": "Smith",
                    "auxHouseholdId": "cgw-dev-1234",
                    "accountId": "1234",
                    "community": "VGW_KD_V3",
                    "userProfileQuota": 10,
                    "householdOptions": [
                      "CDVR"
                    ],
                    "householdStatus": "ACTIVE",
                    "lastAuthorizationDate": "2015-09-20T00:00:00.000Z"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me/diskQuota": {
      "get": {
        "description": "Provides the disk quota for the household\n",
        "operationId": "GET_household-me-diskQuota",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a representing disk quota for the household",
                  "example": {
                    "percentageAvailable": 40,
                    "percentageReserved": 10,
                    "percentageUsed": 50,
                    "recordingQuota": [
                      {
                        "contentResolution": "hd",
                        "recordingTime": 18768,
                        "totalRecordingTime": 45125
                      },
                      {
                        "contentResolution": "sd",
                        "recordingTime": 24758,
                        "totalRecordingTime": 45125
                      },
                      {
                        "contentResolution": "4kuhd",
                        "recordingTime": 12758,
                        "totalRecordingTime": 45125
                      },
                      {
                        "contentResolution": "any",
                        "recordingTime": 45345,
                        "totalRecordingTime": 54323
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me/inAppPurchaseTransaction": {
      "post": {
        "description": "Create Appstore purchase transaction\n",
        "operationId": "POST_household-me-inAppPurchaseTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Schema for the purchase intent object",
                "example": {
                  "authorizationType": "Subscription",
                  "status": "started",
                  "inAppOfferKey": "SUB1",
                  "skuId": "external-sku-id-1",
                  "inAppPackageID": "app-service-id-1"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "transactionId"
                  ],
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Transaction ID related to the Appstore purchase "
                    }
                  },
                  "description": "Schema definition for the transactionId related to an Appstore purchase",
                  "example": {
                    "transactionId": "houseHoldId~inAppPackageID"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "UNSUPPORTED_OFFER_TYPE",
                    "errors": [
                      "Unsupported offer type: XXX"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "UPM_AUTHORIZATION_ALREADY_EXISTS",
                    "errors": [
                      "Authorization for offerKey=XXX already exists"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "RECEIPT_ALREADY_REPORTED",
                    "errors": [
                      "Receipt=XXX already reported"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/inAppPurchaseTransaction/{transactionId}": {
      "put": {
        "description": "Update the purchasing completion status of an asset on the Appstore\n",
        "operationId": "PUT_household-me-inAppPurchaseTransaction-transactionId",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "status"
                ],
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of the transaction",
                    "enum": [
                      "completed",
                      "failed",
                      "cancelled"
                    ]
                  },
                  "appStoreReceipt": {
                    "type": "string",
                    "description": "App store receipt if the transaction status was completed"
                  },
                  "failureReason": {
                    "type": "string",
                    "description": "error description, if the status was failed"
                  }
                },
                "description": "Schema definition for reporting an Appstore purchase status",
                "example": {
                  "status": "completed",
                  "appStoreReceipt": "app-store-receipt-1234"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "UNSUPPORTED_OFFER_TYPE",
                    "errors": [
                      "Unsupported offer type: XXX"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "UPM_AUTHORIZATION_ALREADY_EXISTS",
                    "errors": [
                      "Authorization for offerKey=XXX already exists"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "RECEIPT_ALREADY_REPORTED",
                    "errors": [
                      "Receipt=XXX already reported"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/inAppPurchaseTransaction/recovery": {
      "put": {
        "description": "Completing the purchase process after reboot - for purchases that were not fully completed\n",
        "operationId": "PUT_household-me-inAppPurchaseTransaction-recovery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "appStoreReceipt",
                  "inAppPackageID"
                ],
                "type": "object",
                "properties": {
                  "appStoreReceipt": {
                    "type": "string",
                    "description": "Apple App store receipt for the transaction"
                  },
                  "inAppPackageID": {
                    "type": "string",
                    "description": "Apple App store packageID for the transaction"
                  },
                  "appStoreType": {
                    "type": "string",
                    "description": "Type of App store - ios or google play store. Place holder for future"
                  }
                },
                "description": "Schema definition for reporting an Appstore purchase recovery receipt",
                "example": {
                  "appStoreReceipt": "app-store-receipt-1234",
                  "inAppPackageID": "app-service-id-1"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "UNSUPPORTED_OFFER_TYPE",
                    "errors": [
                      "Unsupported offer type: XXX"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "The server was unable to process this request because the context of the request was wrong\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "UNSUPPORTED_OFFER_TYPE",
                    "errors": [
                      "Unsupported offer type: XXX"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "RECEIPT_ALREADY_REPORTED",
                    "errors": [
                      "Receipt=XXX already reported"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/purchase": {
      "post": {
        "operationId": "POST_household-me-purchase",
        "parameters": [
          {
            "name": "x-pin-token",
            "in": "header",
            "description": "Identifies the token received in PIN verification response.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Schema for the purchase asset post request",
                "example": {
                  "purchase": [
                    {
                      "offer": {
                        "offerId": "TVOD_OFFER_107"
                      },
                      "contentInstanceId": "InstanceId_ABC"
                    },
                    {
                      "offer": {
                        "offerId": "105"
                      },
                      "purchaseOption": "ff3bef32-2e5c-4d3a-a0b6-744913ca4da7",
                      "metadata": {
                        "authorizationType": "Subscription"
                      }
                    },
                    {
                      "offer": {
                        "offerId": "107"
                      },
                      "bundleOffer": {
                        "offerId": [
                          "1001",
                          "1007",
                          "1010",
                          "1022",
                          "1033"
                        ]
                      },
                      "metadata": {
                        "authorizationType": "Bundle"
                      }
                    },
                    {
                      "offer": {
                        "offerId": "TVOD_OFFER_107"
                      },
                      "contentInstanceId": "InstanceId_ABC",
                      "dealPrice": 45000,
                      "dealId": "deal_0"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for response of the purchase request",
                  "example": {
                    "purchase": [
                      {
                        "offerId": "545185",
                        "purchaseId": "ff3bef32-2e5c-4d3a-a0b6-744913ca4da7"
                      },
                      {
                        "offerId": "985411",
                        "purchaseId": "adc45fc2-975c-4dc4-5936-74d593ca23ac"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Missing request body"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/pins/adult": {
      "post": {
        "description": "Validate/set adult pin code. Used for accessing adult content.\nIf the body includes \"pin\", this pin will be validated.\nIf the body include \"newPin\" in addition, the pin will be replaced with the new pin in case of successful validation.\nIf the body includes \"reason\", then the pinValidationResponse contains a pinToken which has to be used for the x-pin-token request header.\n**Errors:**\n- PIN_NOT_SET - The 'pin' value was not set for this Household.\n- PIN_INVALID - The `pin` value is incorrect.  See `data.retriesLeft` for the number of remaining attempts.\n- PIN_MAX_RETRIES_EXCEEDED - An incorrect `pin` value has been tried too many times.  Wait `data.timeLeft` seconds before retrying.\n- PIN_FORMAT_ERROR - The `newPin` supplied does not meet the required PIN format.\n",
        "operationId": "POST_household-me-pins-adult",
        "parameters": [
          {
            "name": "x-pin-token",
            "in": "header",
            "description": "Identifies the token received in PIN verification response.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pin"
                ],
                "type": "object",
                "properties": {
                  "pin": {
                    "type": "string",
                    "description": "The current value of the PIN.  Will be validated by the server against the stored value."
                  },
                  "oneOf": {
                    "type": "string"
                  }
                },
                "description": "Schema for updating a PIN",
                "example": {
                  "pin": "abc123",
                  "newPin": "def456"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for pin validation response",
                  "example": {
                    "pinToken": "abc123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/pins/adult/status": {
      "get": {
        "description": "This API provides the status of the adult pin.\n",
        "operationId": "GET_household-me-pins-adult-status",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "isBlocked",
                    "retriesLeft"
                  ],
                  "type": "object",
                  "properties": {
                    "isBlocked": {
                      "type": "boolean",
                      "description": "Block status of the PIN. true if the PIN is blocked and false otherwise"
                    },
                    "retriesLeft": {
                      "type": "integer",
                      "description": "Number of retries left after which the PIN will be blocked"
                    }
                  },
                  "description": "Schema for retrieving the PIN status",
                  "example": {
                    "isBlocked": false,
                    "retriesLeft": 3
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me/pins/adult/format": {
      "post": {
        "description": "Validate the format of the adult pin code.\n**Errors:**\n- PIN_FORMAT_ERROR - The `pin` supplied does not meet the required PIN format.  See `id` for a more specific code.\n",
        "operationId": "POST_household-me-pins-adult-format",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pin"
                ],
                "type": "object",
                "properties": {
                  "pin": {
                    "type": "string",
                    "description": "String representing the current PIN"
                  }
                },
                "description": "Schema for validating the PIN format",
                "example": {
                  "pin": "1234"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Pin code format successfully validated. No body",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/pins/parental": {
      "post": {
        "description": "Validate/set parental pin code. Used for accessing content in youth restricted hours.\nIf the body includes \"pin\", this pin will be validated.\nIf the body include \"newPin\" in addition, the pin will be replaced with the new pin in case of successful validation.\nIf the body includes \"reason\", then the pinValidationResponse contains a pinToken which has to be used for the x-pin-token request header.\n**Errors:**\n- PIN_NOT_SET - The 'pin' value was not set for this Household.\n- PIN_INVALID - The `pin` value is incorrect.  See `data.retriesLeft` for the number of remaining attempts.\n- PIN_MAX_RETRIES_EXCEEDED - An incorrect `pin` value has been tried too many times.  Wait `data.timeLeft` seconds before retrying.\n- PIN_FORMAT_ERROR - The `newPin` supplied does not meet the required PIN format.\n",
        "operationId": "POST_household-me-pins-parental",
        "parameters": [
          {
            "name": "x-pin-token",
            "in": "header",
            "description": "Identifies the token received in PIN verification response.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pin"
                ],
                "type": "object",
                "properties": {
                  "pin": {
                    "type": "string",
                    "description": "The current value of the PIN.  Will be validated by the server against the stored value."
                  },
                  "oneOf": {
                    "type": "string"
                  }
                },
                "description": "Schema for updating a PIN",
                "example": {
                  "pin": "abc123",
                  "newPin": "def456"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for pin validation response",
                  "example": {
                    "pinToken": "abc123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/pins/parental/status": {
      "get": {
        "description": "This API provides the status of the parental pin.\n",
        "operationId": "GET_household-me-pins-parental-status",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "isBlocked",
                    "retriesLeft"
                  ],
                  "type": "object",
                  "properties": {
                    "isBlocked": {
                      "type": "boolean",
                      "description": "Block status of the PIN. true if the PIN is blocked and false otherwise"
                    },
                    "retriesLeft": {
                      "type": "integer",
                      "description": "Number of retries left after which the PIN will be blocked"
                    }
                  },
                  "description": "Schema for retrieving the PIN status",
                  "example": {
                    "isBlocked": false,
                    "retriesLeft": 3
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me/pins/parental/format": {
      "post": {
        "description": "Validate the format of the parental pin code.\n**Errors:**\n- PIN_FORMAT_ERROR - The `pin` supplied does not meet the required PIN format.  See `id` for a more specific code.\n",
        "operationId": "POST_household-me-pins-parental-format",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pin"
                ],
                "type": "object",
                "properties": {
                  "pin": {
                    "type": "string",
                    "description": "String representing the current PIN"
                  }
                },
                "description": "Schema for validating the PIN format",
                "example": {
                  "pin": "1234"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Pin code format successfully validated. No body",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/pins/purchase": {
      "post": {
        "description": "Validate/set purchase pin code. Used for purchasing.\nIf the body includes \"pin\", this pin will be validated.\nIf the body include \"newPin\" in addition, the pin will be replaced with the new pin in case of successful validation.\nIf the body includes \"reason\", then the pinValidationResponse contains a pinToken which has to be used for the x-pin-token request header.\n**Errors:**\n- PIN_NOT_SET - The 'pin' value was not set for this Household.\n- PIN_INVALID - The `pin` value is incorrect.  See `data.retriesLeft` for the number of remaining attempts.\n- PIN_MAX_RETRIES_EXCEEDED - An incorrect `pin` value has been tried too many times.  Wait `data.timeLeft` seconds before retrying.\n- PIN_FORMAT_ERROR - The `newPin` supplied does not meet the required PIN format.\n",
        "operationId": "POST_household-me-pins-purchase",
        "parameters": [
          {
            "name": "x-pin-token",
            "in": "header",
            "description": "Identifies the token received in PIN verification response.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pin"
                ],
                "type": "object",
                "properties": {
                  "pin": {
                    "type": "string",
                    "description": "The current value of the PIN.  Will be validated by the server against the stored value."
                  },
                  "oneOf": {
                    "type": "string"
                  }
                },
                "description": "Schema for updating a PIN",
                "example": {
                  "pin": "abc123",
                  "newPin": "def456"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for pin validation response",
                  "example": {
                    "pinToken": "abc123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/pins/purchase/status": {
      "get": {
        "description": "This API provides the status of the purchase pin.\n",
        "operationId": "GET_household-me-pins-purchase-status",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "isBlocked",
                    "retriesLeft"
                  ],
                  "type": "object",
                  "properties": {
                    "isBlocked": {
                      "type": "boolean",
                      "description": "Block status of the PIN. true if the PIN is blocked and false otherwise"
                    },
                    "retriesLeft": {
                      "type": "integer",
                      "description": "Number of retries left after which the PIN will be blocked"
                    }
                  },
                  "description": "Schema for retrieving the PIN status",
                  "example": {
                    "isBlocked": false,
                    "retriesLeft": 3
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me/pins/purchase/format": {
      "post": {
        "description": "Validate the format of the purchase pin code.\n**Errors:**\n- PIN_FORMAT_ERROR - The `pin` supplied does not meet the required PIN format.  See `id` for a more specific code.\n",
        "operationId": "POST_household-me-pins-purchase-format",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pin"
                ],
                "type": "object",
                "properties": {
                  "pin": {
                    "type": "string",
                    "description": "String representing the current PIN"
                  }
                },
                "description": "Schema for validating the PIN format",
                "example": {
                  "pin": "1234"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Pin code format successfully validated. No body",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/devices": {
      "get": {
        "description": "Retrieve the list of devices associated with the given household.\n",
        "operationId": "GET_household-me-devices",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Devices",
                  "example": {
                    "devices": [
                      {
                        "id": "50555",
                        "type": "STB",
                        "displayDeviceType": "G10_RDK",
                        "settings": {
                          "lastChannel": "1234",
                          "displayName": "STB",
                          "manufacturer": "Synamedia",
                          "model": "G10",
                          "operatingSystemName": "RDK",
                          "operatingSystemVersion": "2",
                          "applicationVersion": "2.34.1234",
                          "IPAddresses": [
                            {
                              "address": "1.2.3.4",
                              "type": "ipv4"
                            }
                          ]
                        },
                        "registeredDateTime": "2015-06-25T14:51:54.402Z",
                        "drmType": "VGDRM",
                        "deviceFeatures": [
                          "homeBase"
                        ]
                      },
                      {
                        "id": "50573",
                        "type": "COMPANION",
                        "displayDeviceType": "iOS-iPad",
                        "settings": {
                          "lastChannel": "1234",
                          "displayName": "Little iPad",
                          "manufacturer": "Apple",
                          "model": "iPad Air",
                          "operatingSystemName": "iOS",
                          "operatingSystemVersion": "8.1.3",
                          "applicationVersion": "2.34.1234"
                        },
                        "registeredDateTime": "2015-07-01T18:46:32.322Z",
                        "drmType": "VGDRM"
                      },
                      {
                        "id": "50574",
                        "type": "COMPANION",
                        "displayDeviceType": "Windows-PC",
                        "settings": {
                          "lastChannel": "1234",
                          "displayName": "New Laptop",
                          "manufacturer": "Lenovo",
                          "model": "Yoga",
                          "operatingSystemName": "Microsoft Windows",
                          "operatingSystemVersion": "10",
                          "applicationVersion": "2.34.1234"
                        },
                        "registeredDateTime": "2015-07-02T18:46:32.322Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me/devices/me": {
      "get": {
        "description": "Retrieve the details of a specific device an application has access to.\nOnly details of the current user's device can be fetched.\n",
        "operationId": "GET_household-me-devices-me",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for a Device",
                  "example": {
                    "id": "50555",
                    "type": "COMPANION",
                    "displayDeviceType": "Windows-PC",
                    "settings": {
                      "displayName": "UND",
                      "manufacturer": "SONY",
                      "model": "1.1",
                      "operatingSystemName": "OS",
                      "operatingSystemVersion": "2",
                      "applicationVersion": "998",
                      "deviceSerialNumber": "123",
                      "uiFullscreenHintShown": 4,
                      "deploymentMode": "iptvMulticast"
                    },
                    "drmType": "VGDRM",
                    "ipAddress": "1.2.3.4",
                    "registeredDateTime": "2015-06-25T14:51:54.402Z",
                    "activeUserProfile": "50555_HH_3"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me/promotion": {
      "post": {
        "description": "Create a promotion\n",
        "operationId": "POST_household-me-promotion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "{action=createPromotion, promotionType=invitation, contentId=1234, startPosition=12000, duration=30}"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "promotion": {
                      "deeplinkUrl": "https://api2.branch.io/v1?promotionId=invEnc-eyJjIjoiMTEyMjMzIn0=-f9d29102"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Request missing query parameters: <missing parameters>"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/daiPreferences": {
      "get": {
        "description": "Provides the dynamic ad insertion preferences of the household.\nThis includes the DAI preferences for all the consent groups in the platform.\n",
        "operationId": "GET_household-me-daiPreferences",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of DAI opt information of an household",
                  "example": {
                    "daiPreferences": [
                      {
                        "consentGroup": "disny",
                        "optedIn": false,
                        "tcUri": {
                          "method": "GET",
                          "href": "http://example.com/tc/disny/tc.html"
                        }
                      },
                      {
                        "consentGroup": "HBO",
                        "optedIn": true,
                        "tcText": "Do you agree?"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/household/me/daiPreferences/{consentGroup}": {
      "put": {
        "description": "Update the dai preferences of the household for the given consent group.\n",
        "operationId": "PUT_household-me-daiPreferences-consentGroup",
        "parameters": [
          {
            "name": "consentGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "optedIn"
                ],
                "type": "object",
                "properties": {
                  "optedIn": {
                    "type": "boolean",
                    "description": "Should the user be set as opted in"
                  }
                },
                "description": "Schema for posing dai preferences for specific consent group",
                "example": {
                  "optedIn": true
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The request was successfully processed.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "daiConsentBlob"
                  ],
                  "type": "object",
                  "properties": {
                    "daiConsentBlob": {
                      "type": "string",
                      "description": "The dai opt status base64 encoded blob. This blob should be added by the client during POST playsessions as the value of the query param 'daiConsentBlob'"
                    }
                  },
                  "description": "Schema for PUT dai preferences for specific consent group response",
                  "example": {
                    "daiConsentBlob": "eyJvcHRlZEluIjpmYWxzZX0="
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/household/me/daiPreferences/{consentGroup}/display": {
      "get": {
        "description": "Provides the dynamic ad insertion Terms & Conditions display status of the houshold for the given consentGroup.\n",
        "operationId": "GET_household-me-daiPreferences-consentGroup-display",
        "parameters": [
          {
            "name": "consentGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a display TC response",
                  "example": {
                    "display": true,
                    "tcText": "Do you agree?"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/dealPolicies": {
      "get": {
        "description": "Returns the deal policies supported by the platform.",
        "operationId": "GET_platform-settings-dealPolicies",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "displayCountdownThreshold"
                  ],
                  "type": "object",
                  "properties": {
                    "displayCountdownThreshold": {
                      "type": "integer",
                      "description": "The deal is displayed once the current time is within this threshold. Value is in hours"
                    }
                  },
                  "description": "Schema for the deal policies supported by the platform",
                  "example": {
                    "displayCountdownThreshold": 48
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/defaultGuardTimes": {
      "get": {
        "description": "Returns the default start and end guard times used by the planner when recording events.",
        "operationId": "GET_platform-settings-defaultGuardTimes",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for the default guard times supported by the platform",
                  "example": {
                    "startGuardTime": 120,
                    "endGuardTime": 120
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/maxOfflineDays": {
      "get": {
        "description": "Returns the maximum number of days that a device can be in offline mode.",
        "operationId": "GET_platform-settings-maxOfflineDays",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "maxOfflineDays"
                  ],
                  "type": "object",
                  "properties": {
                    "maxOfflineDays": {
                      "type": "integer",
                      "description": "maximum number of days that a device can be in offline mode"
                    }
                  },
                  "description": "Schema for retrieving the maximal number of days a device can be in offline mode",
                  "example": {
                    "maxOfflineDays": 30
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/languages/audio": {
      "get": {
        "description": "Returns a list of supported audio languages in the system. The language is in ISO 639-3 format.",
        "operationId": "GET_platform-settings-languages-audio",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema for an array of strings",
                  "example": [
                    "eng",
                    "fre"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/languages/subTitles": {
      "get": {
        "description": "Returns a list of supported subtitle languages in the system. The language is in ISO 639-3 format.",
        "operationId": "GET_platform-settings-languages-subTitles",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema for an array of strings",
                  "example": [
                    "eng",
                    "fre"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/languages/ui": {
      "get": {
        "description": "Returns a list of supported ui languages in the system. The language is in ISO 639-3 format.",
        "operationId": "GET_platform-settings-languages-ui",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema for an array of strings",
                  "example": [
                    "eng",
                    "fre"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/pin/parental/policies": {
      "get": {
        "description": "Returns a list of parental PIN policies. This may be a list of rating thresholds or a list of threshold enforcement times.",
        "operationId": "GET_platform-settings-pin-parental-policies",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enforcementTime": {
                      "type": "string",
                      "description": "Array of PIN enforcement windows. if this field is not available, enforcement has to happen always"
                    },
                    "thresholdsOptions": {
                      "type": "array",
                      "description": "Options for pin thresholds range",
                      "items": {
                        "required": [
                          "category",
                          "maxRating"
                        ],
                        "type": "object",
                        "properties": {
                          "category": {
                            "type": "string",
                            "description": "Category of enforcement of the PIN CHILDREN/TEENS"
                          },
                          "maxRating": {
                            "type": "integer",
                            "description": "The rating value applicable for the category"
                          }
                        },
                        "description": "A Credit involved in the creation of the Content"
                      }
                    }
                  },
                  "description": "Schema for pin policies",
                  "example": {
                    "thresholdsOptions": [
                      {
                        "category": "OFF",
                        "maxRating": 30
                      },
                      {
                        "category": "YOUNG_ADULT",
                        "maxRating": 17
                      },
                      {
                        "category": "TEEN",
                        "maxRating": 13
                      },
                      {
                        "category": "CHILDREN",
                        "maxRating": 7
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/tracks/closedCaptions": {
      "get": {
        "description": "Returns a list of system supported closed caption tracks, if closed captions are not supported, return an empty list.\n",
        "operationId": "GET_platform-settings-tracks-closedCaptions",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema array of closed captions",
                  "example": [
                    "cc1"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/settings/sharedCategories": {
      "get": {
        "description": "Returns indication if client should use /shared/categories endpoints vs /categories endpoints for classification tree retrieval",
        "operationId": "GET_platform-settings-sharedCategories",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "sharedCategoriesSupported"
                  ],
                  "type": "object",
                  "properties": {
                    "sharedCategoriesSupported": {
                      "type": "boolean",
                      "description": "Indicates if /shared/categories API is supported for this platform"
                    }
                  },
                  "description": "Schema for retrieving the platform setting if shared API should be used for categories retrieval",
                  "example": {
                    "sharedCategoriesSupported": true
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/avatars": {
      "get": {
        "description": "Returns a list of avatars for user profiles.",
        "operationId": "GET_platform-avatars",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema for list of avatars",
                  "example": [
                    {
                      "avatarId": "avatar~0",
                      "friendlyName": "myAvatar",
                      "media": [
                        {
                          "type": "focus",
                          "width": 30,
                          "height": 60,
                          "url": "http://myavatar0_small.jpg",
                          "mimeType": "image/png"
                        },
                        {
                          "type": "unfocus",
                          "width": 60,
                          "height": 120,
                          "url": "http://myavatar0_big.jpg",
                          "mimeType": "image/png"
                        }
                      ]
                    },
                    {
                      "avatarId": "avatar~1",
                      "media": [
                        {
                          "width": 30,
                          "height": 60,
                          "url": "http://myavatar1_small.jpg",
                          "mimeType": "image/png"
                        },
                        {
                          "width": 60,
                          "height": 120,
                          "url": "http://myavatar1_big.jpg",
                          "mimeType": "image/png"
                        }
                      ]
                    },
                    {
                      "avatarId": "avatar~2",
                      "media": [
                        {
                          "width": 30,
                          "height": 60,
                          "url": "http://myavatar2_small.jpg",
                          "mimeType": "image/png"
                        },
                        {
                          "width": 60,
                          "height": 120,
                          "url": "http://myavatar2_big.jpg",
                          "mimeType": "image/png"
                        }
                      ]
                    }
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/ages": {
      "get": {
        "description": "Returns a list of age ranges for user profiles.",
        "operationId": "GET_platform-ages",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Schema for list of ages",
                  "example": [
                    {
                      "maxAge": 6,
                      "displayString": "0-6",
                      "description": "Babies"
                    },
                    {
                      "maxAge": 12,
                      "displayString": "7-12",
                      "description": "Kids"
                    },
                    {
                      "maxAge": 17,
                      "displayString": "13-17",
                      "description": "Teens"
                    },
                    {
                      "maxAge": 120,
                      "displayString": "18-120",
                      "description": "Adults"
                    }
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/platform/documents": {
      "get": {
        "description": "Get general documentation for the project.",
        "operationId": "GET_platform-documents",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "description": "A list of documents",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "List of documents",
                  "example": {
                    "documents": [
                      {
                        "type": "TermsAndConditions",
                        "title": "Terms and Conditions",
                        "uri": "https://TermsAndConditions.com/TNC",
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "TnCLogo.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ]
                      },
                      {
                        "type": "CancellationRights",
                        "title": "Cancellation Rights",
                        "uri": "https://Cancellation.com/Cancel"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchHistory": {
      "post": {
        "description": "Stores resource (given search result item) into search history.\nDetails about require body data is available in the \"Personal Search History\" notebook.\n",
        "operationId": "POST_searchHistory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "source"
                ],
                "type": "object",
                "properties": {
                  "oneOf": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of the content item",
                    "enum": [
                      "ltv",
                      "vod",
                      "pvr",
                      "catchup"
                    ]
                  },
                  "q": {
                    "type": "string",
                    "description": "The phrase parameter that was used in search request"
                  }
                },
                "description": "Schema for setting item in search history",
                "example": {
                  "contentId": "ID_321",
                  "source": "vod",
                  "q": "ID"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Given search result item successfully added to personal search history list.",
            "content": {}
          },
          "400": {
            "description": "Invalid request params.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "invalid request params"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "SEARCH_HISTORY_GENERAL_ERROR",
                    "errors": [
                      "internal connectivity issue"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/searchHistory/personal": {
      "get": {
        "description": "Retrieve list of personal history search items previously stored for this user.\n",
        "operationId": "GET_searchHistory-personal",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of previously searched items to return in the response list.",
            "schema": {
              "type": "integer",
              "default": 15
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma separated list to filter content instance source. Valid values:\n* ltv - broadcast TV content\n* vod - video on demand content\n* pvr - pvr recorded content\n* catchup - catchup event (from TSTV)\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 115000
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius.",
                        "contentFlags": [
                          "adult"
                        ]
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 38000
                          }
                        ],
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "externalStarRatings": [
                          {
                            "provider": "imdb",
                            "score": 8.7
                          }
                        ],
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes entire list of personal history search items for the selected user profile.\n",
        "operationId": "DELETE_searchHistory-personal",
        "parameters": [
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personal history search items were successfully deleted for selected profile from search history.",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchHistory/topSearches": {
      "get": {
        "description": "Retrieve list of most popular searches items searched by all users in the last (N) days.\nNote: The days period for each source configurable in headend by pillar.\n",
        "operationId": "GET_searchHistory-topSearches",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of previously searched items to return in the response list.",
            "schema": {
              "type": "integer",
              "default": 15
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma separated list to filter content instance source. Valid values:\n* ltv - broadcast TV content\n* vod - video on demand content\n* catchup - catchup event (from TSTV)\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topLevelFilterTag",
            "in": "query",
            "description": "When this query parameter is given, the returned items will be filtered by this value which can either be:\n    1. top level genre.\n    2. filteringTag field returned by vodContent for the given asset.\n(The operator will attach filteringTags to given classifications in VMS. This serves as a kind of alias for the classification.)\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 183,
                    "content": [
                      {
                        "id": "IID_65900",
                        "resource": "asset",
                        "source": "vod",
                        "expirationDateTime": "2015-09-20T00:00:00.000Z",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 115000
                          }
                        ],
                        "contentType": "standalone",
                        "title": "Spider-Man 2",
                        "genres": [
                          {
                            "name": "action",
                            "genreId": "action"
                          },
                          {
                            "name": "adventure",
                            "genreId": "adventure"
                          }
                        ],
                        "duration": 127,
                        "entitled": false,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "synopsis": "Peter Parker is beset with troubles in his failing personal life as he battles a brilliant scientist named Doctor Otto Octavius.",
                        "contentFlags": [
                          "adult"
                        ]
                      },
                      {
                        "id": "IID_45668",
                        "resource": "asset",
                        "source": "vod",
                        "isVodFavorite": true,
                        "bookmarks": [
                          {
                            "name": "closingCredits",
                            "offset": 38000
                          }
                        ],
                        "contentType": "episode",
                        "title": "Pilot",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "duration": 42,
                        "entitled": true,
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "seasonNumber": "1",
                        "episodeNumber": "1",
                        "externalStarRatings": [
                          {
                            "provider": "imdb",
                            "score": 8.7
                          }
                        ],
                        "synopsis": "FBI Agent Booth needs forensic anthropologist Dr. Brennan's help to solve the case of a decomposed body found in a pond in Arlington National Cemetery. She agrees to help if she is a full partner in the case."
                      },
                      {
                        "id": "IID_32421234",
                        "resource": "asset",
                        "contentType": "show",
                        "collapsedItemsCount": 42,
                        "collapsedItemsContentType": "season",
                        "title": "X-Files",
                        "genres": [
                          {
                            "name": "drama",
                            "genreId": "drama"
                          },
                          {
                            "name": "crime",
                            "genreId": "crime"
                          }
                        ],
                        "contentAdvisories": [
                          {
                            "advisoryFlag": "violence",
                            "advisoryDisplay": "Violence"
                          },
                          {
                            "advisoryFlag": "offendingLanguage",
                            "advisoryDisplay": "Offending Language"
                          }
                        ],
                        "media": [
                          {
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/45668.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "source": "vod"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/grid": {
      "get": {
        "description": "Get a list of channels with their events.   The channels includes only channelId field and events include only non-personal metadata.\nThis API can be used to get either current/future events or catchup events for the channels.\nCurrent/future and catchup events cannot be retrieved in the same call.\nIn order to fetch catchup events either the pastEventsLimit param or the catchupFilter flag (with the value 'onlyCatchup') should be used.\nIn order to fetch current/future events the eventsLimit param or the duration params should be used.\nIn order to fetch only channels without events, the GET /channels API should be used.\nThe API uses aligned time windows to allow cachability.  startTime of window is always aligned to 5 minutes.   Duration is in hours.\n",
        "operationId": "GET_shared-grid",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "isPlayable",
            "in": "query",
            "description": "Filter for channels which are consumable in the current device type. If this filter false or not given, both playable and non playable channels are returned. If true, return only playable channels.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "ISO 8601 compliant UTC date time, defining the start of a time windowed response list.\nThe time must be aligned to 5 minutes.\nThis value is inclusive; entities starting earlier and ongoing at this time will be included in the response.\nShall be accompanied by one of `duration` XOR `eventsLimit` XOR `pastEventsLimit`.\nIf not provided, the system will use the current time aligned to 5 minutes down.\nIt is responsibility of the client to truncate unneeded events which are outside of the needed time window.\nExample: \"2015-10-05T14:30Z\" is UTC 5th October 2105 2:30pm.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration in hours, defining the end of a time windowed response list relative to `startTime`.\nShall not be supplied together with `eventsLimit`.\nMaximum value of duration is 24 hours.\nExample: 2 - 2hrs duration.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries (channels) to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "eventsLimit",
            "in": "query",
            "description": "Number of events returned per channel relative to the specified startTime.\nThis parameter shall not be supplied together with `duration`.\nNote that since requested window is always aligned to 5 min,  the client may need to query 1 extra event to have the needed\nnumber of events (and truncate unneeded events on the boundaries)\n",
            "schema": {
              "maximum": 20,
              "type": "integer"
            }
          },
          {
            "name": "pastEventsLimit",
            "in": "query",
            "description": "Number of past events returned per channel relative to the specified aligned startTime.\nThis parameter will be used to fetch catchup events.\nShall not be supplied together with `duration`.\nNote that since requested window is always aligned to 5 min,  the client may need to query 1 extra event to have the needed\nnumber of events (and truncate unneeded events on the boundaries)\n",
            "schema": {
              "maximum": 20,
              "type": "integer"
            }
          },
          {
            "name": "extraEvents",
            "in": "query",
            "description": "This parameter can be supplied only together with `duration` and without `catchupFilter` parameters.\nIt allows to bring some extra events beyond those which are retrieved as part of time window defined by\nstartDateTime and duration.  It should be used to build a local cache that has enough events to display for\nspecific period of time.\nFor example if client application needs to maintain local schedule cache that will allow display of current\nand next event during next 1 hour (without extra API calls), then it should use parameters  duration=1&extraEvents=1\n",
            "schema": {
              "maximum": 5,
              "type": "integer"
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "carousel",
            "in": "query",
            "description": "Flag indicating whether to loop back to the beginning of the response list upon reaching the end.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "__locator__; GUID of the channel that is used as the base location point of the offset in the response list.\nThis channel will be the first in the returned list.\nShall not be supplied together with any other locator, otherwise a 400 response will be returned.\nIf not provided, the system uses the first channel in the channel list for the client\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logicalChannelNumber",
            "in": "query",
            "description": "__locator__; Logical channel number of the channel (relevant for the calling device) that is used as the base location point of the offset in the response list.\nThis channel will be the first in the returned list.\nThis parameter should be used for direct channel access. Shall not be supplied together with any other locator, otherwise a 400 response will be returned.\ndefault is the first channel in the channel list for the client.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "genreId",
            "in": "query",
            "description": "Filter resources to those associated with the supplied genreId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "catchupFilter",
            "in": "query",
            "description": "Filter catchup events.\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlyCatchup"
              ]
            }
          },
          {
            "name": "radioFilter",
            "in": "query",
            "description": "Filter Radio channels. If not provided, radio channels are NOT included in the response.\nwithRadio -> Radio channels AND other channels (video) are provided in the response.\n",
            "schema": {
              "type": "string",
              "enum": [
                "withRadio"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of channels with events",
                  "example": {
                    "total": 107,
                    "count": 2,
                    "channels": [
                      {
                        "id": "10000000025190000",
                        "schedule": [
                          {
                            "id": "uri:prg:EPISODE:DETAIL:30000001558038349~uri:scd:10000000025190000:EPISODE:DETAIL:30000001558038349:07122020123000~ltv",
                            "resource": "asset",
                            "source": "ltv",
                            "contentType": "episode",
                            "title": "Black-ish",
                            "startDateTime": "2020-12-07T12:30:00.000Z",
                            "contentFlags": [
                              "recordableWithoutInteractive",
                              "sportsExperience"
                            ],
                            "duration": 1800,
                            "bookingStatesKey": "2020-12-07T12:30:00Z;10000000025190000",
                            "restartEventKey": "uri:scd:10000000025190000:EPISODE:DETAIL:30000001558038349:07122020123000",
                            "seasonNumber": "5",
                            "episodeNumber": "2",
                            "showId": "PROGRAM:GROUP:30000000550002201",
                            "seasonId": "SEASON:GROUP:46434",
                            "productionYear": 2014,
                            "productionLocation": "Iran",
                            "media": [
                              {
                                "type": "None",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster005_eng.jpg",
                                "height": 1000,
                                "width": 680
                              }
                            ],
                            "genres": [
                              {
                                "name": "Drama",
                                "genreId": "Drama"
                              }
                            ],
                            "synopsis": "Dre and Bow have a hard time accepting their children's decisions and growing pains and amidst the family mayhem, they take in Kyra, Dre's teenage cousin hoping to give her a chance at a better life."
                          },
                          {
                            "id": "uri:prg:EPISODE:DETAIL:30000001558673373~uri:scd:10000000025190000:EPISODE:DETAIL:30000001558673373:07122020130000~ltv",
                            "resource": "asset",
                            "source": "ltv",
                            "contentType": "episode",
                            "title": "Salasel Dahab",
                            "startDateTime": "2020-12-07T13:00:00.000Z",
                            "contentFlags": [
                              "recordableWithoutInteractive"
                            ],
                            "duration": 3600,
                            "bookingStatesKey": "2020-12-07T13:00:00Z;10000000025190000",
                            "restartEventKey": "uri:scd:10000000025190000:EPISODE:DETAIL:30000001558673373:07122020130000",
                            "episodeNumber": "10",
                            "showId": "PROGRAM:GROUP:30000000550587634",
                            "productionYear": 2019,
                            "media": [
                              {
                                "type": "None",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster005_eng.jpg",
                                "height": 1000,
                                "width": 680
                              }
                            ],
                            "genres": [
                              {
                                "name": "Drama",
                                "genreId": "Drama"
                              }
                            ],
                            "synopsis": "Mahyoub faces the nastiest forms of feminine retaliation and cruelty when he divorces his two wives and seizes their properties using fraud, the same methodology his exes apply in their counterattack"
                          }
                        ]
                      },
                      {
                        "id": "10000000025180000",
                        "schedule": [
                          {
                            "id": "uri:prg:EPISODE:DETAIL:30000001558554779~uri:scd:10000000025180000:EPISODE:DETAIL:30000001558554779:07122020120000~ltv",
                            "resource": "asset",
                            "source": "ltv",
                            "contentType": "episode",
                            "title": "Hatha Ana",
                            "startDateTime": "2020-12-07T12:00:00.000Z",
                            "contentFlags": [
                              "recordableWithoutInteractive"
                            ],
                            "duration": 3600,
                            "bookingStatesKey": "2020-12-07T12:00:00Z;10000000025180000",
                            "restartEventKey": "uri:scd:10000000025180000:EPISODE:DETAIL:30000001558554779:07122020120000",
                            "episodeNumber": "9",
                            "showId": "PROGRAM:GROUP:30000000549769526",
                            "media": [
                              {
                                "type": "None",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster005_eng.jpg",
                                "height": 1000,
                                "width": 680
                              }
                            ],
                            "synopsis": "Influencers whose effect was instrumental in certain purviews divulge details of their lives and milestones of success to conclude the encounter with personal opinions of current public issues."
                          },
                          {
                            "id": "uri:prg:EPISODE:DETAIL:30000001560421893~uri:scd:10000000025180000:EPISODE:DETAIL:30000001560421893:07122020130000~ltv",
                            "resource": "asset",
                            "source": "ltv",
                            "contentType": "episode",
                            "title": "Khatam Al Yaqoot",
                            "startDateTime": "2020-12-07T13:00:00.000Z",
                            "contentFlags": [
                              "recordableWithoutInteractive"
                            ],
                            "duration": 3600,
                            "bookingStatesKey": "2020-12-07T13:00:00Z;10000000025180000",
                            "restartEventKey": "uri:scd:10000000025180000:EPISODE:DETAIL:30000001560421893:07122020130000",
                            "episodeNumber": "40",
                            "showId": "PROGRAM:GROUP:30000000550697642",
                            "productionYear": 2017,
                            "media": [
                              {
                                "type": "None",
                                "mimeType": "image/jpeg",
                                "url": "http://phx-media-server.phx.cisco.com/LTVposters/poster005_eng.jpg",
                                "height": 1000,
                                "width": 680
                              }
                            ],
                            "synopsis": "A facial reconstruction that two sisters undergo after an accident swaps their identities. As one is comatose, the other decides to sustain the mistaken identity and assume her sister's personality."
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/channels": {
      "get": {
        "description": "Retrieve a list of channels and their non-personal metadata, but without events.\n",
        "operationId": "GET_shared-channels",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "isPlayable",
            "in": "query",
            "description": "Filter for channels which are consumable in the current device type. If this filter false or not given, both playable and non playable channels are returned. If true, return only playable channels.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for list of channels without events",
                  "example": {
                    "count": 3,
                    "total": 204,
                    "channels": [
                      {
                        "name": "Program 70",
                        "logicalChannelNumber": 1,
                        "id": "CHID_1",
                        "isFavorite": true,
                        "isEntitled": true,
                        "isLocked": false,
                        "isPlayable": true,
                        "videoFormat": "hd",
                        "synopsis": "CNN - Live from US",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                          },
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/twenty_two.svg"
                          },
                          {
                            "type": "poster",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/twenty_two.svg"
                          }
                        ],
                        "channelFlags": [
                          "new"
                        ]
                      },
                      {
                        "name": "HBO 2",
                        "logicalChannelNumber": 2,
                        "id": "CHID_2",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false,
                        "isPlayable": true,
                        "videoFormat": "4k",
                        "synopsis": "Home Box Office Rental",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/three_hd.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/three_hd.svg"
                          },
                          {
                            "type": "poster",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/three_hd.svg"
                          }
                        ]
                      },
                      {
                        "name": "Fox Central",
                        "logicalChannelNumber": 3,
                        "id": "CHID_3",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false,
                        "deliveryTypes": [
                          "DTH"
                        ],
                        "isPlayable": true,
                        "videoFormat": "hd",
                        "synopsis": "Fox News",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/fox_news.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/fox_news.svg"
                          },
                          {
                            "type": "poster",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/fox_news.svg"
                          }
                        ]
                      },
                      {
                        "name": "GalGalatz",
                        "logicalChannelNumber": 5,
                        "id": "CHID_5",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false,
                        "deliveryTypes": [
                          "DTH"
                        ],
                        "isPlayable": true,
                        "synopsis": "cool songs",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/fox_news.svg"
                          }
                        ],
                        "channelFlags": [
                          "radio"
                        ],
                        "externalLinks": {
                          "radioCurrentSong": {
                            "href": "https://cdn.location.com"
                          }
                        }
                      },
                      {
                        "name": "Netflix",
                        "logicalChannelNumber": 999,
                        "id": "999",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false,
                        "deliveryTypes": [
                          "DTH"
                        ],
                        "isPlayable": true,
                        "isApp": true,
                        "appId": "Netflix",
                        "videoFormat": "hd",
                        "synopsis": "Netflix is a subscription service",
                        "media": [
                          {
                            "type": "inverted",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgReg/netflix.svg"
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/netflix.svg"
                          },
                          {
                            "type": "poster",
                            "mimeType": "image/svg+xml",
                            "url": "http://phx-media-server.phx.cisco.com/LogoSvgInv/netflix.svg"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/restartableEvents": {
      "get": {
        "description": "Retrieve a list of restartable events across all channels.\n",
        "operationId": "GET_shared-restartableEvents",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "restartableEvents": {
                      "type": "array",
                      "description": "A list of restartable events",
                      "items": {
                        "required": [
                          "restartKey"
                        ],
                        "type": "object",
                        "properties": {
                          "restartKey": {
                            "type": "string",
                            "description": "A key of restart event that will match restartEventKey inside asset.schema"
                          }
                        }
                      }
                    }
                  },
                  "description": "Schema for list of restartable events",
                  "example": {
                    "restartableEvents": [
                      {
                        "restartKey": "2020-07-26T20:20:00ZCH21~123"
                      },
                      {
                        "restartKey": "2020-07-26T20:10:00ZCH23~123"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Invalid clientToken parameter"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/content": {
      "get": {
        "description": "Get a list of assets matching the supplied criteria.  Used for fetching asset lists.\nNote: the seriesFilter param is currently supported only together with the offerKeys param, and the 'All' value is not currently supported. The default value is 'noSeries'.\n",
        "operationId": "GET_shared-content",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Id of the category to display content for.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Return content that belongs to a specific group",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showId",
            "in": "query",
            "description": "Return content that belongs to a specific vod/catchup showId.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasonId",
            "in": "query",
            "description": "Return content that belongs to a specific vod/catchup seasonId.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isCollapsed",
            "in": "query",
            "description": "Specifies if to return collapsed content or not. By default it is defined by autoCollapse classification specification definition.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to a location where entries in the response list should be selected from.\n",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Comma separated list to filter content instance source. Valid values:\n* vod - video on demand content\n* catchup - online catchup content\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "genreId",
            "in": "query",
            "description": "Filter resources to those associated with the supplied genreId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Define sorting for the result. The optional values are:\n* title - AZ sort by title feild. Used -title to sort in decending order.\n* date - sort by date. Broadcast data for live TV, recording date for PVR, purchase data for phurchased vod and release date for vod\n  use -date to sort by date in decending order.\n* type - sort by content type. The sort is ordered by the order of the types in the type feild.\n* productionYear - sort by producetion year\n* expirationDateTime - sort by content expiry date\n* episodeNumber - for calls to get episodes of a season/open show - sort by episode number.\n  Use -episodeNumber for decending order sort.\n* seasonNumber - for calls to get seasons of a show - sort by seasonNumber.\n  Use -seasonNumber for decending order sort.\n",
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "date",
                "type",
                "productionYear",
                "expirationDateTime"
              ]
            }
          },
          {
            "name": "offerKeys",
            "in": "query",
            "description": "Comma-separated list of offerKeys.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seriesFilter",
            "in": "query",
            "description": "Filter resources which are part of series or a show.\n",
            "schema": {
              "type": "string",
              "enum": [
                "onlySeries",
                "noSeries",
                "All"
              ]
            }
          },
          {
            "name": "locator",
            "in": "query",
            "description": "Identifies a logical location in the list to locate the pagination at.\nThis parameter is used as the location point as a base for the offset parameter.\nValues are opaque to the client and retrieved from previous calls to a list API.\nIf no `locator` or other locating parameter supplied the response will be at the start of the list.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of shared content matching the request query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schema for a list of Content",
                  "example": {
                    "count": 3,
                    "total": 82,
                    "content": [
                      {
                        "id": "TITL0000000000772990~MOVI0000000000772993~vod",
                        "resource": "asset",
                        "source": "vod",
                        "contentType": "standalone",
                        "title": "Stockholm",
                        "contentFlags": [
                          "subscription"
                        ],
                        "duration": 5527,
                        "productionYear": 2018,
                        "audioFormat": "stereo",
                        "videoFormat": "hd",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/jpeg",
                            "url": "http://tr.images.com/VP001254509.JPG",
                            "height": 2160,
                            "width": 3840
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/jpeg",
                            "url": "http://tr.images.com/VP001337592.JPG",
                            "height": 1480,
                            "width": 978
                          }
                        ],
                        "genres": [
                          {
                            "name": "Comedy",
                            "genreId": "Comedy"
                          }
                        ],
                        "synopsis": "Comedy. Based on the absurd but true 1973 bank heist and hostage crisis in Stockholm that was documented in the New Yorker as the origins of the 'Stockholm Syndrome'. With: Ethan Hawke. Dir: Robert Budreau. 2018.",
                        "parentalRating": {
                          "name": "14+",
                          "value": 9
                        },
                        "viewHistoryKey": "TITL0000000000772990",
                        "offerKeys": [
                          "sub1",
                          "sub3",
                          "sub5"
                        ],
                        "locator": "0"
                      },
                      {
                        "id": "TITL0000000001138316~MOVI0000000001138319~vod",
                        "resource": "asset",
                        "source": "vod",
                        "contentType": "standalone",
                        "title": "Ben Is Back",
                        "contentFlags": [
                          "subscription"
                        ],
                        "duration": 5941,
                        "productionYear": 2018,
                        "audioFormat": "stereo",
                        "videoFormat": "hd",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/jpeg",
                            "url": "http://tr.images.com/VP001247050.JPG",
                            "height": 2160,
                            "width": 3840
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/jpeg",
                            "url": "http://tr.images.com/VP001277753.JPG",
                            "height": 1480,
                            "width": 978
                          }
                        ],
                        "genres": [
                          {
                            "name": "Drama",
                            "genreId": "Drama"
                          }
                        ],
                        "synopsis": "Drama. A drug addicted teenage boy shows up unexpectedly at his family's home on Christmas Eve. With: Julia Roberts, Lucas Hedges. Dir: Peter Hedges. 2018.",
                        "parentalRating": {
                          "name": "14+",
                          "value": 9
                        },
                        "viewHistoryKey": "TITL0000000001138316",
                        "offerKeys": [
                          "sub1",
                          "sub2",
                          "sub3",
                          "tvod5"
                        ],
                        "locator": "1"
                      },
                      {
                        "id": "TITL0000000000692305~MOVI0000000000692308~vod",
                        "resource": "asset",
                        "source": "vod",
                        "contentType": "standalone",
                        "title": "Captive State",
                        "isPlayable": true,
                        "contentFlags": [
                          "subscription"
                        ],
                        "duration": 6282,
                        "productionYear": 2019,
                        "audioFormat": "stereo",
                        "videoFormat": "hd",
                        "media": [
                          {
                            "type": "regular",
                            "mimeType": "image/jpeg",
                            "url": "http://tr.images.com/VP001238010.JPG",
                            "height": 2160,
                            "width": 3840
                          },
                          {
                            "type": "regular",
                            "mimeType": "image/jpeg",
                            "url": "http://tr.images.come/VP001320690.JPG",
                            "height": 1480,
                            "width": 978
                          }
                        ],
                        "genres": [
                          {
                            "name": "Science Fiction",
                            "genreId": "Science Fiction"
                          },
                          {
                            "name": "Fantasy",
                            "genreId": "Fantasy"
                          }
                        ],
                        "synopsis": "Thriller. Nearly a decade after an occupation by an extraterrestrial force, 'Captive State' explores the lives on both sides of the collaborators and the dissidents. With: J. Goodman, A. Sanders. Dir: R. Wyatt. 2019.",
                        "parentalRating": {
                          "name": "14+",
                          "value": 9
                        },
                        "viewHistoryKey": "TITL0000000000692305",
                        "offerKeys": [
                          "sub2",
                          "sub3",
                          "sub6"
                        ],
                        "locator": "2"
                      }
                    ],
                    "locators": {
                      "start": "0",
                      "end": "3"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/categories": {
      "get": {
        "description": "Return all root categories. This is the list of root categories. By default it will be returned without child categories or any hypermedia links content.\nWhen depth parameter is given the response will include also children of root categories.\n",
        "operationId": "GET_shared-categories",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of classification tree to include in the response.\n",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for a Category",
                  "example": {
                    "id": "node:root",
                    "type": "category_list",
                    "name": "ROOT",
                    "leaf": false,
                    "categories": [
                      {
                        "id": "vod",
                        "type": "category_list",
                        "name": "VOD Store",
                        "leaf": false,
                        "categories": [
                          {
                            "id": "node:urn:spvss:ih:kd:term:store:GENRES~root",
                            "name": "GENRES",
                            "type": "category_list",
                            "sortOptions": [],
                            "isAdult": false,
                            "leaf": false,
                            "categories": [
                              {
                                "id": "node:urn:spvss:ih:kd:term:store:GENRES:ACTION~node:urn:spvss:ih:kd:term:store:GENRES:ACTION",
                                "name": "ACTION",
                                "type": "content_full",
                                "contentDataModel": "assetList",
                                "defaultSortOrder": "-date",
                                "sortOptions": [
                                  "-date",
                                  "title"
                                ],
                                "isAdult": false,
                                "leaf": true,
                                "source": "vod",
                                "synopsis": {
                                  "long": "ACTION"
                                },
                                "_links": {
                                  "content": {
                                    "method": "GET",
                                    "href": "/agg/content?categoryId=node%3Aurn%3Aspvss%3Aih%3Akd%3Aterm%3Astore%3AGENRES%3AACTION"
                                  }
                                }
                              },
                              {
                                "id": "node:urn:spvss:ih:kd:term:store:GENRES:ADVENTURE~node:urn:spvss:ih:kd:term:store:GENRES:ADVENTURE",
                                "name": "ADVENTURE",
                                "type": "content_full",
                                "contentDataModel": "assetList",
                                "defaultSortOrder": "-date",
                                "sortOptions": [
                                  "-date",
                                  "title"
                                ],
                                "isAdult": false,
                                "leaf": true,
                                "source": "vod",
                                "synopsis": {
                                  "long": "ADVENTURE"
                                },
                                "_links": {
                                  "content": {
                                    "method": "GET",
                                    "href": "/agg/content?categoryId=node%3Aurn%3Aspvss%3Aih%3Akd%3Aterm%3Astore%3AGENRES%3AADVENTURE"
                                  }
                                }
                              }
                            ],
                            "source": "vod",
                            "synopsis": {
                              "long": "GENRES"
                            }
                          }
                        ]
                      },
                      {
                        "id": "vodGenreList",
                        "name": "VOD Genres",
                        "type": "root",
                        "leaf": false
                      },
                      {
                        "id": "appStore",
                        "name": "Application Store",
                        "type": "root",
                        "leaf": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/categories/{categoryId}": {
      "get": {
        "description": "Returns the given category's details and a list of its child categories.\nwhen the depth parameter is given and its value is more than 1, the response will include up do 'depth' levels of children of the given category.\nEvery leaf category in the response will also contain links (regular/shared) for fetching its content.\n",
        "operationId": "GET_shared-categories-categoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of classification tree to include in the response.\n",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Schema for a Category",
                  "example": {
                    "id": "12345",
                    "name": "Category List",
                    "type": "category_list",
                    "displayInfo": {
                      "displayLabel": "text",
                      "backgroundVideo": true
                    },
                    "leaf": false,
                    "categories": [
                      {
                        "id": "4687",
                        "name": "Movies",
                        "type": "content_full",
                        "contentDataModel": "assetList",
                        "leaf": true,
                        "contentDisplayInfo": {
                          "swimlaneConfigName": "swimlane_2_3",
                          "swimlaneContentCount": 10,
                          "collapsedContentDisplay": {
                            "seasonDefaultSort": "-seasonNumber",
                            "episodeDefaultSort": "episodeNumber"
                          }
                        },
                        "displayInfo": {
                          "displayBackgroundImage": true,
                          "displaySideImage": true,
                          "displayLabelPosition": "startAndEnd",
                          "seeAllTitle": "SEE ALL",
                          "seeAllPosition": "end",
                          "channelId": "1234"
                        },
                        "relatedFilteringTags": [
                          "Drama",
                          "Kids"
                        ],
                        "contentUxInfo": {
                          "swimlaneDirectPlay": true,
                          "startFromLastTunedChannel": true,
                          "swimlaneDisplayCatchup": true
                        },
                        "synopsis": {
                          "short": "Movies from all times",
                          "long": "Long movies from all times"
                        },
                        "_links": {
                          "content": {
                            "href": "/agg/content?categoryId=4687{&offset,limit,sort}"
                          }
                        }
                      },
                      {
                        "id": "2687",
                        "name": "Sports",
                        "type": "content_full",
                        "leaf": true,
                        "contentDataModel": "assetList",
                        "displayInfo": {
                          "seeAllLabel": "image",
                          "seeAllPosition": "startAndEnd"
                        },
                        "contentDisplayInfo": {
                          "swimlaneConfigName": "hero_16_9",
                          "swimlaneContentCount": 15,
                          "swimlaneContentCountPerRow": 6
                        },
                        "media": [
                          {
                            "type": "background_side",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          },
                          {
                            "type": "background",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/659001.jpg",
                            "height": 300,
                            "width": 200
                          },
                          {
                            "type": "see_all_start",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/65900.jpg",
                            "height": 300,
                            "width": 200
                          },
                          {
                            "type": "see_all_end",
                            "mimeType": "image/jpeg",
                            "url": "http://img.server.com/659001.jpg",
                            "height": 300,
                            "width": 200
                          }
                        ],
                        "_links": {
                          "content": {
                            "href": "/agg/content?categoryId=2687{&offset,limit}"
                          }
                        }
                      },
                      {
                        "id": "1308",
                        "name": "Recommended Genres",
                        "type": "content_full",
                        "contentDataModel": "recommendationGroups",
                        "leaf": true,
                        "contentDisplayInfo": {
                          "swimlaneConfigName": "hero_16_9",
                          "swimlaneContentCount": 15
                        },
                        "_links": {
                          "content": {
                            "href": "/agg/recommendations/groupings/becauseYouWatchedGenre"
                          }
                        }
                      },
                      {
                        "id": "12687",
                        "name": "Animax",
                        "type": "category_shop",
                        "leaf": false,
                        "branding": {
                          "media": [
                            {
                              "type": "logo_bottom",
                              "mimeType": "image/jpeg",
                              "url": "http://img.server.com/65900.jpg",
                              "height": 300,
                              "width": 200
                            },
                            {
                              "type": "logo_top",
                              "mimeType": "image/jpeg",
                              "url": "http://img.server.com/659001.jpg",
                              "height": 300,
                              "width": 200
                            }
                          ]
                        }
                      },
                      {
                        "id": "AboutToExpire",
                        "name": "About To Expire",
                        "type": "content_full",
                        "contentDataModel": "assetList",
                        "sortOptions": [
                          "expirationDateTime"
                        ],
                        "leaf": true,
                        "_links": {
                          "content": {
                            "href": "/agg/content?categoryId=AboutToExpire{&offset,limit}"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/bulkContent/{categoryId}": {
      "get": {
        "description": "Returns the non-personal metadata of assets from multiple child categories under specific category",
        "operationId": "GET_shared-bulkContent-categoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "eventsLimit",
            "in": "query",
            "description": "Maximum number of entries to return for each of the children categories.\n",
            "required": true,
            "schema": {
              "maximum": 30,
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdult",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Adult in the resulting list. If this parameter is not defined the adult content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isErotic",
            "in": "query",
            "description": "Setting the parameter to true will include content marked as Erotic in the resulting list. If this parameter is not defined the erotic content will be filtered out.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of asset metadata for multiple categories",
                  "example": {
                    "categories": [
                      {
                        "id": "category1",
                        "count": 3,
                        "total": 82,
                        "content": [
                          {
                            "id": "TITL0000000000772990~MOVI0000000000772993~vod",
                            "resource": "asset",
                            "source": "vod",
                            "contentType": "standalone",
                            "title": "Stockholm",
                            "contentFlags": [
                              "subscription"
                            ],
                            "duration": 5527,
                            "productionYear": 2018,
                            "audioFormat": "stereo",
                            "videoFormat": "hd",
                            "media": [
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001254509.JPG",
                                "height": 2160,
                                "width": 3840
                              },
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001337592.JPG",
                                "height": 1480,
                                "width": 978
                              }
                            ],
                            "genres": [
                              {
                                "name": "Comedy",
                                "genreId": "Comedy"
                              }
                            ],
                            "synopsis": "Comedy. Based on the absurd but true 1973 bank heist and hostage crisis in Stockholm that was documented in the New Yorker as the origins of the 'Stockholm Syndrome'. With: Ethan Hawke. Dir: Robert Budreau. 2018.",
                            "parentalRating": {
                              "name": "14+",
                              "value": 9
                            },
                            "viewHistoryKey": "TITL0000000000772990",
                            "offerKeys": [
                              "sub1",
                              "sub3",
                              "sub5"
                            ],
                            "locator": "0"
                          },
                          {
                            "id": "TITL0000000001138316~MOVI0000000001138319~vod",
                            "resource": "asset",
                            "source": "vod",
                            "contentType": "standalone",
                            "title": "Ben Is Back",
                            "contentFlags": [
                              "subscription"
                            ],
                            "duration": 5941,
                            "productionYear": 2018,
                            "audioFormat": "stereo",
                            "videoFormat": "hd",
                            "media": [
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001247050.JPG",
                                "height": 2160,
                                "width": 3840
                              },
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001277753.JPG",
                                "height": 1480,
                                "width": 978
                              }
                            ],
                            "genres": [
                              {
                                "name": "Drama",
                                "genreId": "Drama"
                              }
                            ],
                            "synopsis": "Drama. A drug addicted teenage boy shows up unexpectedly at his family's home on Christmas Eve. With: Julia Roberts, Lucas Hedges. Dir: Peter Hedges. 2018.",
                            "parentalRating": {
                              "name": "14+",
                              "value": 9
                            },
                            "viewHistoryKey": "TITL0000000001138316",
                            "offerKeys": [
                              "sub1",
                              "sub2",
                              "sub3",
                              "tvod5"
                            ],
                            "locator": "1"
                          },
                          {
                            "id": "TITL0000000000692305~MOVI0000000000692308~vod",
                            "resource": "asset",
                            "source": "vod",
                            "contentType": "standalone",
                            "title": "Captive State",
                            "isPlayable": true,
                            "contentFlags": [
                              "subscription"
                            ],
                            "duration": 6282,
                            "productionYear": 2019,
                            "audioFormat": "stereo",
                            "videoFormat": "hd",
                            "media": [
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001238010.JPG",
                                "height": 2160,
                                "width": 3840
                              },
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.come/VP001320690.JPG",
                                "height": 1480,
                                "width": 978
                              }
                            ],
                            "genres": [
                              {
                                "name": "Science Fiction",
                                "genreId": "Science Fiction"
                              },
                              {
                                "name": "Fantasy",
                                "genreId": "Fantasy"
                              }
                            ],
                            "synopsis": "Thriller. Nearly a decade after an occupation by an extraterrestrial force, 'Captive State' explores the lives on both sides of the collaborators and the dissidents. With: J. Goodman, A. Sanders. Dir: R. Wyatt. 2019.",
                            "parentalRating": {
                              "name": "14+",
                              "value": 9
                            },
                            "viewHistoryKey": "TITL0000000000692305",
                            "offerKeys": [
                              "sub2",
                              "sub3",
                              "sub6"
                            ],
                            "locator": "2"
                          }
                        ],
                        "locators": {
                          "start": "0",
                          "end": "3"
                        }
                      },
                      {
                        "id": "category2",
                        "count": 3,
                        "total": 82,
                        "content": [
                          {
                            "id": "TITL0000000000772330~MOVI0000000000772993~vod",
                            "resource": "asset",
                            "source": "vod",
                            "contentType": "standalone",
                            "title": "Stockholm",
                            "contentFlags": [
                              "subscription"
                            ],
                            "duration": 5527,
                            "productionYear": 2018,
                            "audioFormat": "stereo",
                            "videoFormat": "hd",
                            "media": [
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001254509.JPG",
                                "height": 2160,
                                "width": 3840
                              },
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001337592.JPG",
                                "height": 1480,
                                "width": 978
                              }
                            ],
                            "genres": [
                              {
                                "name": "Comedy",
                                "genreId": "Comedy"
                              }
                            ],
                            "synopsis": "Comedy. Based on the absurd but true 1973 bank heist and hostage crisis in Stockholm that was documented in the New Yorker as the origins of the 'Stockholm Syndrome'. With: Ethan Hawke. Dir: Robert Budreau. 2018.",
                            "parentalRating": {
                              "name": "14+",
                              "value": 9
                            },
                            "viewHistoryKey": "TITL0000000000772330",
                            "offerKeys": [
                              "sub1",
                              "sub3",
                              "sub5"
                            ],
                            "locator": "0"
                          },
                          {
                            "id": "TITL0000000001138319~MOVI0000000001138319~vod",
                            "resource": "asset",
                            "source": "vod",
                            "contentType": "standalone",
                            "title": "Ben Is Back",
                            "contentFlags": [
                              "subscription"
                            ],
                            "duration": 5941,
                            "productionYear": 2018,
                            "audioFormat": "stereo",
                            "videoFormat": "hd",
                            "media": [
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001247050.JPG",
                                "height": 2160,
                                "width": 3840
                              },
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001277753.JPG",
                                "height": 1480,
                                "width": 978
                              }
                            ],
                            "genres": [
                              {
                                "name": "Drama",
                                "genreId": "Drama"
                              }
                            ],
                            "synopsis": "Drama. A drug addicted teenage boy shows up unexpectedly at his family's home on Christmas Eve. With: Julia Roberts, Lucas Hedges. Dir: Peter Hedges. 2018.",
                            "parentalRating": {
                              "name": "14+",
                              "value": 9
                            },
                            "viewHistoryKey": "TITL0000000001138319",
                            "offerKeys": [
                              "sub1",
                              "sub2",
                              "sub3",
                              "tvod5"
                            ],
                            "locator": "1"
                          },
                          {
                            "id": "TITL0000000000692388~MOVI0000000000692308~vod",
                            "resource": "asset",
                            "source": "vod",
                            "contentType": "standalone",
                            "title": "Captive State",
                            "isPlayable": true,
                            "contentFlags": [
                              "subscription"
                            ],
                            "duration": 6282,
                            "productionYear": 2019,
                            "audioFormat": "stereo",
                            "videoFormat": "hd",
                            "media": [
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.com/VP001238010.JPG",
                                "height": 2160,
                                "width": 3840
                              },
                              {
                                "type": "regular",
                                "mimeType": "image/jpeg",
                                "url": "http://tr.images.come/VP001320690.JPG",
                                "height": 1480,
                                "width": 978
                              }
                            ],
                            "genres": [
                              {
                                "name": "Science Fiction",
                                "genreId": "Science Fiction"
                              },
                              {
                                "name": "Fantasy",
                                "genreId": "Fantasy"
                              }
                            ],
                            "synopsis": "Thriller. Nearly a decade after an occupation by an extraterrestrial force, 'Captive State' explores the lives on both sides of the collaborators and the dissidents. With: J. Goodman, A. Sanders. Dir: R. Wyatt. 2019.",
                            "parentalRating": {
                              "name": "14+",
                              "value": 9
                            },
                            "viewHistoryKey": "TITL0000000000692388",
                            "offerKeys": [
                              "sub2",
                              "sub3",
                              "sub6"
                            ],
                            "locator": "2"
                          }
                        ],
                        "locators": {
                          "start": "0",
                          "end": "3"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/resources/uisettings": {
      "get": {
        "description": "Get a set of UI configurations to be applied in the app. These are app configs, hosted in the server.\nRelevant only for Synamedia apps.\nThis is expected to be called as part of the app boot sequence, after the call to /resources/initial\nThe client should create the URL based on the 'ApiCache' endpoint prefix provided by CSDS.\nThis API is supported starting from REF API version 1.6.0\n",
        "operationId": "GET_shared-resources-uisettings",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string"
                    },
                    "uiConfigurations": {
                      "type": "object",
                      "properties": {}
                    },
                    "uiConfigurationKidsMode": {
                      "type": "object",
                      "properties": {}
                    },
                    "uiConfigurationGuestMode": {
                      "type": "object",
                      "properties": {}
                    },
                    "iaConfiguration": {
                      "type": "string",
                      "description": "General Information Architecture definition, per device type"
                    },
                    "iaConfigurationKidsMode": {
                      "type": "string",
                      "description": "Kids mode Information Architecture definition, per device type"
                    },
                    "iaConfigurationGuestMode": {
                      "type": "string",
                      "description": "Guest mode Information Architecture definition, per device type"
                    },
                    "features": {
                      "type": "object",
                      "properties": {}
                    },
                    "featureConfigurations": {
                      "type": "object",
                      "properties": {}
                    },
                    "appStoreUrl": {
                      "type": "string"
                    },
                    "appEndpoint": {
                      "type": "string"
                    },
                    "modes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "resourceType": "configuration",
                    "uiConfigurations": {
                      "uiSchema": "productK",
                      "TABLET": {
                        "onVideo": {
                          "unfocusColor": "#ffffffff",
                          "progressBar": {
                            "foregroundColor": "#ffffffff",
                            "backgroundColor": "#FF3C3C3C",
                            "cursorColor": "#ffffffff"
                          },
                          "button": {
                            "foregroundColor": "#ffffffff",
                            "backgroundColor": "#00000000",
                            "foregroundColorSelected": "#ff000000",
                            "backgroundColorSelected": "#ffffffff"
                          },
                          "dimmerTransparencyLevel": 0.5
                        },
                        "onStatusBar": {
                          "unfocusColor": "#B3EBEBEB",
                          "focusColor": "#FFEBEBEB",
                          "background": {
                            "colorFrom": "#ff000000",
                            "colorTo": "#ff000000",
                            "orientation": "horizontal"
                          }
                        },
                        "onPopup": {
                          "unfocusColor": "#90EBEBEB",
                          "pressColor": "#FFEBEBEB",
                          "background": {
                            "colorFrom": "#FF424242",
                            "colorTo": "#FF424242",
                            "orientation": "horizontal"
                          }
                        },
                        "popupMenu": {
                          "foregroundColor": "#ffebebeb",
                          "backgroundColor": "#ffffffff",
                          "backgroundColorSelected": "#ff646464"
                        },
                        "gestures": {
                          "zappingDirection": "natural"
                        },
                        "logo": {
                          "url": "http://appivps3.s3-ap-south-1.amazonaws.com/Appdata/CD/application_logo.png",
                          "positionX": 48,
                          "positionY": 13,
                          "width": 64,
                          "height": 34,
                          "display": "YES",
                          "usePosition": true
                        },
                        "font_config": {
                          "fonts": [
                            {
                              "languages": [
                                "en",
                                "de",
                                "fr",
                                "ru",
                                "pt"
                              ],
                              "font-family": "Roboto",
                              "weights": {
                                "Lt": "file://Roboto-Light.ttf",
                                "Rg": "file://Roboto-Regular.ttf",
                                "Md": "file://Roboto-Medium.ttf",
                                "Bd": "file://Roboto-Bold.ttf",
                                "Blk": "file://Roboto-Black.ttf",
                                "Icons": "file://IVPIcons-Regular.ttf",
                                "BdIt": "file://Roboto-BoldItalic.ttf",
                                "BlkIt": "file://Roboto-BoldItalic.ttf",
                                "MdIt": "file://Roboto-ThinItalic.ttf",
                                "Input": "file://Roboto-Light.ttf"
                              }
                            },
                            {
                              "languages": [
                                "he",
                                "iw",
                                "ar"
                              ],
                              "font-family": "Noto Sans",
                              "weights": {
                                "Lt": "file://NotoSans-Light.ttf",
                                "Rg": "file://NotoSans-Regular.ttf",
                                "Md": "file://NotoSans-Medium.ttf",
                                "Bd": "file://NotoSans-Bold.ttf",
                                "Blk": "file://NotoSans-Black.ttf",
                                "Icons": "file://IVPIcons-Regular.ttf",
                                "BdIt": "file://NotoSans-BoldItalic.ttf",
                                "BlkIt": "file://NotoSans-BlackItalic.ttf",
                                "MdIt": "file://NotoSans-MediumItalic.ttf",
                                "Input": "file://NotoSans-Light.ttf"
                              }
                            }
                          ]
                        },
                        "menuConfiguration": {
                          "settingsMenuItems": [
                            "PREFERENCES",
                            "DEVICE_MANAGEMENT",
                            "MY_DEVICES",
                            "HELP",
                            "LOGOUT"
                          ],
                          "filterMenuItems": {
                            "LIBRARY": [
                              "MOVIES_AND_SHOW",
                              "NEXT_TO_SEE",
                              "RENTALS",
                              "SERIES_RECORDINGS",
                              "MANAGE_RECORDINGS",
                              "WATCHLIST",
                              "MY_DOWNLOADS"
                            ],
                            "STORE": [
                              "PROMOTION",
                              "FOR_YOU"
                            ],
                            "TELEVISION": [
                              "PROMOTION",
                              "FOR_YOU",
                              "MOST_POPULAR",
                              "FAVORITE_CHANNELS",
                              "ON_AIR"
                            ]
                          },
                          "hubTopItems": [
                            "TELEVISION",
                            "LIBRARY",
                            "STORE",
                            "GUIDE",
                            "SETTINGS"
                          ]
                        },
                        "guideConfiguration": {
                          "guideDaysCount": {
                            "guideForwardGridDaysCount": 7,
                            "guideReverseGridDaysCount": 7
                          },
                          "progIndicatorBackgroundGradient": {
                            "colorFrom": "#ff7DC145",
                            "colorTo": "#ff00A79C",
                            "color3": "#ff244D9D"
                          },
                          "gridCellCurrentBackgroundGradient": {
                            "colorFrom": "#803E3E3E",
                            "colorTo": "#803E3E3E"
                          },
                          "gridCellBackgroundGradient": {
                            "colorFrom": "#803E3E3E",
                            "colorTo": "#803E3E3E"
                          },
                          "channelCellBackgroundGradient": {
                            "colorFrom": "#FF323232",
                            "colorTo": "#ff7DC145"
                          },
                          "gridCellTitleColors": {
                            "unfocusColor": "#99FFFFFF"
                          },
                          "gridCellIconColors": {
                            "unfocusColor": "#80FFFFFF"
                          },
                          "gridCellSeparatorColors": {
                            "unfocusColor": "#FF000000"
                          },
                          "channelCellNumberColors": {
                            "unfocusColor": "#FFFFFFFF"
                          },
                          "channelCellIconColors": {
                            "unfocusColor": "#FFFFFFFF"
                          },
                          "timeHeaderTextColors": {
                            "unfocusColor": "#99FFFFFF"
                          }
                        },
                        "onSearch": {
                          "searchField": {
                            "searchFieldHeight": [
                              36,
                              40
                            ],
                            "searchFieldLeadingSpace": [
                              16,
                              126
                            ],
                            "searchFieldTrailingSpace": [
                              80,
                              126
                            ],
                            "searchBorderWidth": 0
                          },
                          "searchResultsCell": {
                            "searchResultsCellHeight": [
                              53,
                              41
                            ]
                          }
                        },
                        "onZapList": {
                          "container": {
                            "background": {
                              "colorFrom": "#FF000000",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "logo": {
                            "background": {
                              "colorFrom": "#FF323232",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "itemExpanded": {
                            "background": {
                              "colorFrom": "#FF1F1F1F",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "itemCollapsed": {
                            "background": {
                              "colorFrom": "#ff1F1F1F",
                              "colorTo": "#FF2a2e3b",
                              "orientation": "vertical"
                            }
                          },
                          "zapListProgressBar": {
                            "foregroundColor": "#FF323232",
                            "backgroundBefore": "#ff1F1F1F",
                            "backgroundAfter": "#406f6e6e",
                            "cursor": "#ff1f212d"
                          }
                        },
                        "settings": {
                          "headerview": {
                            "backgroundColor": "#803E3E3E",
                            "background": {
                              "colorFrom": "#00000000",
                              "colorTo": "#00000000",
                              "orientation": "vertical"
                            },
                            "borderColor": "#33979797",
                            "titleColor": "#ffffffff",
                            "backTitleColor": "#ffEBEBEB",
                            "menuTitleColor": "#ffffffff"
                          },
                          "menu": {
                            "menuItem": {
                              "unfocusColor": "#B3EBEBEB",
                              "focusColor": "#FFEBEBEB"
                            },
                            "focus": {
                              "foregroundColor": "#ffffffff",
                              "backgroundColor": "#ff3E3E3E"
                            },
                            "unfocus": {
                              "foregroundColor": "#ffffffff",
                              "backgroundColor": "#00000000"
                            },
                            "backgroundColor": "#803E3E3E",
                            "background": {
                              "colorFrom": "#803E3E3E",
                              "colorTo": "#803E3E3E",
                              "orientation": "vertical"
                            },
                            "headerview": {
                              "background": {
                                "colorFrom": "#00000000",
                                "colorTo": "#00000000",
                                "orientation": "vertical"
                              }
                            },
                            "verticalBorderColor": "#33979797"
                          },
                          "submenu": {
                            "titleColor": "#ffffffff",
                            "subTitleColor": "#B3ffffff",
                            "optionColor": "#B3EBEBEB",
                            "seperatorColor": "#33979797",
                            "button": {
                              "borderColor": "#00000000",
                              "backgroundColor": "#1Affffff",
                              "borderWidth": 1
                            },
                            "backgroundColor": "#803E3E3E",
                            "background": {
                              "colorFrom": "#803E3E3E",
                              "colorTo": "#803E3E3E",
                              "orientation": "vertical"
                            },
                            "focus": {
                              "foregroundColor": "#ffffffff",
                              "switchActiveColor": "#ff4CD964"
                            },
                            "unfocus": {
                              "foregroundColor": "#4Dffffff"
                            }
                          },
                          "termsandcondition": {
                            "titleColor": "#ff030303",
                            "dividerColor": "#BF4D4D4D",
                            "backgroundColor": "#80ffffff",
                            "button": {
                              "unfocus": {
                                "foregroundColor": "#ff007AFF"
                              }
                            }
                          },
                          "pinPopUp": {
                            "backgroundColor": "#ffF7F7F7",
                            "keyboardBackGroundColor": "#E6D2D5DB"
                          }
                        },
                        "onFrame": {
                          "unfocusColor": "#B3EBEBEB",
                          "focusColor": "#ffEBEBEB",
                          "progressBar": {
                            "foregroundColor": "#FFEBEBEB",
                            "backgroundColor": "#FF6E6E6E",
                            "cursorColor": "#FFEBEBEB"
                          },
                          "button": {
                            "focus": {
                              "foregroundColor": "#ffebebeb",
                              "backgroundColor": "#1affffff"
                            },
                            "unfocus": {
                              "foregroundColor": "#ffebebeb",
                              "backgroundColor": "#1affffff"
                            },
                            "borderColor": "#00000000",
                            "borderWidth": 0,
                            "cornerRadius": 0,
                            "foregroundColor": "#ffffffff",
                            "backgroundColor": "#ff000000",
                            "foregroundColorSelected": "#ffffffff",
                            "backgroundColorSelected": "#ffffffff"
                          },
                          "recordButton": {
                            "foregroundColor": "#ffd0141b"
                          },
                          "background": {
                            "colorFrom": "#FF101010",
                            "colorTo": "#FF101010",
                            "orientation": "horizontal"
                          },
                          "eventTimeDurationDisplayFormat": "hh:mm"
                        },
                        "fontStyles": [
                          {
                            "id": "Hero_Banner_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "26",
                                "font-color": "#ffffffff"
                              }
                            }
                          },
                          {
                            "id": "Action_Menu_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "24",
                                "font-color": "#ffffffff"
                              }
                            }
                          },
                          {
                            "id": "Panel_Program_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "24",
                                "font-color": "#ffffffff"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Nextepisode_in",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "14",
                                "font-color": "#B3FFFFFF"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Sec",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Bold",
                                "font-weight": "",
                                "font-size": "14",
                                "font-color": "#FFFFFFFF"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Episode",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "17",
                                "font-color": "#FFFFFFFF"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Duration",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "14",
                                "font-color": "#B3EBEBEB"
                              }
                            }
                          },
                          {
                            "id": "Binge_Title_Parental_Rating",
                            "styles": {
                              "en": {
                                "font-family": "IVPIcons-Regular",
                                "font-weight": "",
                                "font-size": "14",
                                "font-color": "#B3FFFFFF"
                              }
                            }
                          }
                        ],
                        "defaultPoster": {
                          "foregroundColor": "#ffffff",
                          "background": {
                            "colorFrom": "#ff365D63",
                            "colorTo": "#ff1C2E49",
                            "orientation": "vertical"
                          }
                        },
                        "onBingeBanner": {
                          "autoPlaySec": 10
                        },
                        "menu": {
                          "background": {
                            "linear-gradient": {
                              "color": [
                                "#00000000",
                                "#00000000"
                              ],
                              "orientation": "vertical"
                            },
                            "image": [
                              {
                                "resolution": "image resolution",
                                "url": "",
                                "docking-point": "top_left"
                              }
                            ]
                          }
                        },
                        "settingsMenuItem": {
                          "left": "0",
                          "right": "37",
                          "width": "44",
                          "height": "44",
                          "isIcon": "true",
                          "isVisible": "false"
                        },
                        "searchMenuItem": {
                          "left": "0",
                          "right": "91",
                          "width": "44",
                          "height": "44",
                          "isIcon": "true",
                          "isVisible": "false"
                        },
                        "actionButtons": [
                          {
                            "id": "regular",
                            "spacing": 8,
                            "height": 81,
                            "width": 70,
                            "background": {
                              "shape": "rectangle",
                              "color": "#1AFFFFFF"
                            }
                          },
                          {
                            "id": "selected",
                            "spacing": 8,
                            "height": 81,
                            "width": 70,
                            "background": {
                              "shape": "rectangle",
                              "color": "#80FFFFFF"
                            }
                          }
                        ],
                        "radioConfig": {
                          "logoUrl": "",
                          "onRadioPlayer": {
                            "background": {
                              "linear-gradient": {
                                "color": [
                                  "#ff365D63",
                                  "#ff1C2E49"
                                ],
                                "orientation": "vertical"
                              },
                              "image": [
                                {
                                  "url": ""
                                }
                              ]
                            }
                          }
                        },
                        "swimlanes": {
                          "maxNoOFItemsPerSwimlane": 10,
                          "channelPageSwimlaneMaxItems": 10
                        },
                        "channelPageConfig": {
                          "catchupDays": 10,
                          "futureDays": 10
                        }
                      },
                      "PHONE": {
                        "logo": {
                          "url": "http://appivps3.s3-ap-south-1.amazonaws.com/Appdata/CD/application_logo.png",
                          "positionX": 156,
                          "positionY": 7,
                          "width": 56,
                          "height": 30,
                          "display": "YES",
                          "usePosition": true
                        },
                        "hamburgerMenu": {
                          "onHamburgerLogo": {
                            "url": "http://appivps3.s3-ap-south-1.amazonaws.com/Appdata/CD/application_logo.png",
                            "positionX": 24,
                            "positionY": 3,
                            "width": 71,
                            "height": 38,
                            "display": "YES",
                            "usePosition": true
                          }
                        },
                        "menuConfiguration": {
                          "filterMenuItems": {
                            "LIBRARY": [
                              "MOVIES_AND_SHOW",
                              "NEXT_TO_SEE",
                              "SERIES",
                              "MANAGE_RECORDINGS",
                              "WATCHLIST",
                              "MY_DOWNLOADS"
                            ],
                            "STORE": [
                              "PROMOTION",
                              "FOR_YOU"
                            ],
                            "TELEVISION": [
                              "PROMOTION",
                              "FOR_YOU",
                              "MOST_POPULAR",
                              "FAVORITE_CHANNELS",
                              "ON_AIR"
                            ]
                          },
                          "hubTopItems": [
                            "TELEVISION",
                            "LIBRARY",
                            "STORE",
                            "GUIDE",
                            "SETTINGS"
                          ]
                        },
                        "onZapList": {
                          "container": {
                            "background": {
                              "colorFrom": "#FF000000",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "logo": {
                            "background": {
                              "colorFrom": "#FF323232",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "itemExpanded": {
                            "background": {
                              "colorFrom": "#FF202020",
                              "colorTo": "#FF1f212d",
                              "orientation": "vertical"
                            }
                          },
                          "itemCollapsed": {
                            "background": {
                              "colorFrom": "#ff2B2B2B",
                              "colorTo": "#FF2a2e3b",
                              "orientation": "vertical"
                            }
                          },
                          "zapListProgressBar": {
                            "foregroundColor": "#ff3E3E3E",
                            "backgroundBefore": "#ff2B2B2B",
                            "backgroundAfter": "#406f6e6e",
                            "cursor": "#ff1f212d"
                          }
                        },
                        "settings": {
                          "headerview": {
                            "borderColor": "#00000000",
                            "background": {
                              "colorFrom": "#00000000",
                              "colorTo": "#00000000",
                              "orientation": "vertical"
                            }
                          },
                          "submenu": {
                            "button": {
                              "backgroundColor": "#ff161616"
                            },
                            "background": {
                              "colorFrom": "#803E3E3E",
                              "colorTo": "#803E3E3E",
                              "orientation": "vertical"
                            }
                          },
                          "termsandcondition": {
                            "dividerColor": "#00000000",
                            "button": {
                              "unfocus": {
                                "foregroundColor": "#ff007AFF"
                              }
                            }
                          }
                        },
                        "fontStyles": [
                          {
                            "id": "Hero_Banner_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "20",
                                "font-color": "#ffffffff"
                              }
                            }
                          },
                          {
                            "id": "Action_Menu_Title",
                            "styles": {
                              "en": {
                                "font-family": "Roboto-Regular",
                                "font-weight": "",
                                "font-size": "20",
                                "font-color": "#ffffffff"
                              }
                            }
                          }
                        ]
                      },
                      "STB": {
                        "onFrame": {
                          "unfocusColor": "#66ffffff",
                          "focusColor": "#ffffffff",
                          "unselectableColor": "#ffdcdcdc",
                          "progressBar": {
                            "foregroundColor": "#ffffffff",
                            "backgroundBefore": "#ffc8c8c8",
                            "backgroundAfter": "#ffc8c8c8",
                            "cursor": "#ffffffff"
                          }
                        },
                        "offFrame": {
                          "unfocusColor": "#ffffffff",
                          "focusColor": "#ffffffff",
                          "unselectableColor": "#ffdcdcdc",
                          "progressBar": {
                            "foregroundColor": "#ffffffff",
                            "backgroundBefore": "#ffc8c8c8",
                            "backgroundAfter": "#ffc8c8c8",
                            "cursor": "#ffffffff"
                          }
                        },
                        "menuItem": {
                          "backgroundColorFrom": "#00000000",
                          "backgroundColorTo": "#00000000",
                          "gradientOrientation": "vertical",
                          "foregroundColorFocused": "#ffffffff",
                          "foregroundColorUnfocused": "#ffffffff",
                          "foregroundColorSelected": "#ffffffff",
                          "case": "normal"
                        },
                        "frames": {
                          "colorFrom": "#ff000000",
                          "colorTo": "#ff000000",
                          "verticalFrameGradient": "vertical",
                          "horizontalFrameGradient": "horizontal"
                        },
                        "screenSpecificFontGroups": {
                          "clock": {
                            "offFrame": {
                              "unfocus": {
                                "text": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "filter": {
                            "onFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "freeText": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            },
                            "offFrame": {
                              "focus": {
                                "labelItem": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "labelItem": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "actionmenu": {
                            "onFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "leftMetadata": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "summary": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            },
                            "offFrame": {
                              "focus": {
                                "labelItem": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "labelItem": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "search": {
                            "onFrame": {
                              "focus": {
                                "keyboardChar": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "suggestionItem": {
                                  "case": "lowercase",
                                  "color": "#ffffffff",
                                  "colorSelection": "#ff707070"
                                }
                              },
                              "unfocus": {
                                "keyboardChar": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "suggestionItem": {
                                  "color": "#ffffffff",
                                  "case": "lowercase"
                                }
                              }
                            },
                            "offFrame": {
                              "unfocus": {
                                "inputTextField": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "timeline": {
                            "onFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "timelineLabel": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "channelIcon": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "timelineLabel": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "channelNumbers": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            },
                            "offFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "timelineLabel": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "channelIcon": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "channelNumbers": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "message": {
                            "offFrame": {
                              "focus": {
                                "title": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "action": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "text": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                },
                                "action": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          },
                          "trickmode": {
                            "onFrame": {
                              "focus": {
                                "trickmodeIconAndSpeed": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "trickmodeIconAndSpeed": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            },
                            "offFrame": {
                              "focus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              },
                              "unfocus": {
                                "titleAndInfo": {
                                  "color": "#ffffffff",
                                  "case": "normal"
                                }
                              }
                            }
                          }
                        },
                        "logo": {
                          "url": "http://phx-media-server.phx.cisco.com/LTVposters/operator-logo.svg",
                          "height": 50,
                          "width": 86,
                          "positionX": 120,
                          "positionY": 55
                        },
                        "videoFilterStyle": "DIMMER",
                        "dimmerTransparencyLevel": 0.5,
                        "highlightStrategy": "historical",
                        "branding": "KV3"
                      }
                    },
                    "iaConfiguration": {
                      "PHONE": {
                        "hubMenuItems": [
                          {
                            "id": "hubHome",
                            "title": {
                              "dictionaryId": "DIC_MAIN_HUB_HOME"
                            },
                            "icon": {
                              "focus": {
                                "url": "file://iamenuhome.png",
                                "width": 72,
                                "height": 72
                              },
                              "unFocus": {
                                "url": "file://iamenuhome.png",
                                "width": 72,
                                "height": 72
                              }
                            }
                          },
                          {
                            "id": "hubTvShows",
                            "title": {
                              "dictionaryId": "DIC_MAIN_HUB_TV_SHOWS"
                            },
                            "icon": {
                              "focus": {
                                "url": "file://iamenutelevision.png",
                                "width": 72,
                                "height": 72
                              },
                              "unFocus": {
                                "url": "file://iamenutelevision.png",
                                "width": 72,
                                "height": 72
                              }
                            }
                          },
                          {
                            "id": "hubMovies",
                            "title": {
                              "dictionaryId": "DIC_MAIN_HUB_MOVIES"
                            },
                            "icon": {
                              "focus": {
                                "url": "file://iamenupopcornBox.png",
                                "width": 72,
                                "height": 72
                              },
                              "unFocus": {
                                "url": "file://iamenupopcornBox.png",
                                "width": 72,
                                "height": 72
                              }
                            }
                          }
                        ],
                        "swimlaneConfig": {
                          "hubHome": {
                            "items": [
                              {
                                "displayType": "heroBanner",
                                "id": "PROMOTION"
                              },
                              {
                                "displayType": "swimlane",
                                "id": "ON_AIR_BY_EVENT"
                              },
                              {
                                "displayType": "swimlane",
                                "id": "RECENTLY_VIEWED_CHANNELS"
                              },
                              {
                                "displayType": "swimlane",
                                "id": "FOR_YOU"
                              },
                              {
                                "displayType": "swimlane",
                                "id": "COMING_UP"
                              },
                              {
                                "title": {
                                  "dictionaryId": "DIC_HUB_HOME_NEW"
                                },
                                "displayType": "swimlane",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:HOME:New"
                                  }
                                ]
                              }
                            ]
                          },
                          "hubTvShows": {
                            "items": [
                              {
                                "displayType": "heroBanner",
                                "resolution": "16:9",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:TV SHOWS:Featured"
                                  }
                                ]
                              },
                              {
                                "displayType": "swimlane",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:TV SHOWS:New"
                                  }
                                ]
                              },
                              {
                                "displayType": "swimlane",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:TV SHOWS:TV Shows Picks"
                                  }
                                ]
                              }
                            ]
                          },
                          "hubMovies": {
                            "items": [
                              {
                                "displayType": "swimlane",
                                "contents": [
                                  {
                                    "classification": "node:urn:spvss:ih:kd:term:store:BOX SETS:Featured"
                                  }
                                ]
                              },
                              {
                                "displayType": "swimlane",
                                "id": "RECENTLY_VIEWED",
                                "filter": {
                                  "genreId": "Movies",
                                  "source": "vod"
                                }
                              },
                              {
                                "displayType": "swimlane",
                                "id": "CHANNELS_FOR_GENRE",
                                "title": {
                                  "dictionaryId": "DIC_FILTER_TV_CHANNELS"
                                },
                                "filter": {
                                  "genreId": "Movies",
                                  "catchupOnly": false
                                }
                              }
                            ]
                          }
                        }
                      },
                      "SMART_TV": {
                        "hubMenuItems": [
                          {
                            "id": "hubHome",
                            "title": {
                              "dictionaryId": "dict.hub.televisionlabel"
                            }
                          },
                          {
                            "id": "hubMovies",
                            "title": {
                              "dictionaryId": "dict.hub.storelabel"
                            }
                          }
                        ],
                        "swimlaneConfig": {
                          "hubHome": {
                            "items": [
                              {
                                "railType": "swimlane16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.recentlyWatched"
                                },
                                "contentType": "api",
                                "displayByEvent": true,
                                "contents": [
                                  {
                                    "url": "/channels/recent?currentChannelFirst=true",
                                    "tileCount": 10,
                                    "assetType": "linear"
                                  }
                                ]
                              },
                              {
                                "railType": "swimlane16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.favorites"
                                },
                                "contentType": "api",
                                "contents": [
                                  {
                                    "url": "/channels?isFavourite=true",
                                    "tileCount": 15,
                                    "assetType": "linear"
                                  }
                                ]
                              },
                              {
                                "railType": "swimlane16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.basicChannels"
                                },
                                "contentType": "api",
                                "contents": [
                                  {
                                    "url": "/channels?limit=13&carousel=true&genreId=Basic",
                                    "tileCount": 12,
                                    "displaySeeAll": true,
                                    "assetType": "linear"
                                  }
                                ]
                              },
                              {
                                "railType": "swimlane16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.seriesChannels"
                                },
                                "contentType": "api",
                                "contents": [
                                  {
                                    "url": "/channels?limit=13&carousel=true&genreId=Series",
                                    "tileCount": 12,
                                    "displaySeeAll": true,
                                    "assetType": "linear"
                                  }
                                ]
                              },
                              {
                                "railType": "swimlane16_9",
                                "contentType": "classification",
                                "contents": [
                                  {
                                    "classification": "92166",
                                    "tileCount": 23,
                                    "seeAllSort": [
                                      "editorial",
                                      "title",
                                      "-date"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "hubMovies": {
                            "items": [
                              {
                                "railType": "hero16_9",
                                "title": {
                                  "dictionaryId": "dict.hub.storelabel.next2see"
                                },
                                "contentType": "api",
                                "contents": [
                                  {
                                    "url": "/agg/library/recent?topLevelFilterTag=Movies&source=vod&limit=24",
                                    "tileCount": 24,
                                    "assetType": "vod"
                                  }
                                ]
                              },
                              {
                                "railType": "hero16_9",
                                "contentType": "classification",
                                "contents": [
                                  {
                                    "classification": "42202",
                                    "tileCount": 23,
                                    "seeAllSort": [
                                      "editorial",
                                      "title",
                                      "-date"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "general": {
                          "defaultChannel": "CH34"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/resources/dictionary": {
      "get": {
        "description": "Get a dictionary of texts for UI. Relevant only for Synamedia apps.\nThe API is expected to be called as part of the app boot sequence, after the call to /resources/initial.\nIt should also be called when the app switches languages.\nThe app should either use *persistent* http-caching, or it should store the value of the etag together with\nthe dictionary response in the persistent device storage and supply it as the value of the if-none-match header in\nevery /dictionary request\n",
        "operationId": "GET_shared-resources-dictionary",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "example": {
                    "languageCode": "eng",
                    "updateDate": "2000-01-31T22:00:00.000Z",
                    "languageMap": {
                      "dict.hub.storelabel.filterlabel": "VOD",
                      "dict.federatedActionMenu.playwith": "Play With",
                      "dict.hub.storelabel.filterlinklabel": "Full Catalog",
                      "dict.hub.storelabel.description": "See all",
                      "dict.hub.televisionlabel": "Television",
                      "dict.hub.homelabel": "HOME",
                      "dict.hub.showAllChannels": "All Channels",
                      "dict.hub.channellabel": "Channels",
                      "dict.hub.forYou": "For you",
                      "dict.hub.New": "New",
                      "dict.hub.recordings": "Recent Recordings",
                      "dict.hub.featured": "Featured",
                      "dict.hub.favorites": "Favorite Channels",
                      "dict.hub.becauseYouLike": "Because you like %s",
                      "dict.hub.becauseYouWatched": "Because you watched %s",
                      "dict.hub.watchAgain": "Watch Again",
                      "dict.hub.televisionlabel.filterlabel": "Live",
                      "dict.hub.televisionlabel.filterlinklabel": "TV GUIDE AND MORE",
                      "dict.hub.televisionlabel.description": "See all",
                      "dict.hub.mylibrary": "My Library",
                      "dict.hub.mydevicelibrary": "My Box Library",
                      "dict.hub.librarylabel": "Recordings",
                      "dict.hub.librarylabel.filterlabel": "Recordings",
                      "dict.hub.librarylabel.filterlinklabel": "Next To See",
                      "dict.hub.librarylabel.description": "See all",
                      "dict.hub.toplist": "Top List",
                      "dict.hub.tv.guide.allchannel": "All Channels",
                      "dict.hub.tv.guide.sportChannels": "Sports",
                      "dict.hub.tv.guide.moviesChannels": "Movies",
                      "dict.hub.tv.guide.favoriteChannels": "Favorite channels",
                      "dict.hub.tv.guide.entertainmentChannels": "Entertainment",
                      "dict.hub.tv.guide.kidsChannels": "Kids",
                      "dict.hub.tv.guide.newsChannels": "News",
                      "dict.hub.tv.guide.allchannel.info": "Next 14 Days Programs",
                      "dict.hub.tv.guide.sportChannels.info": "Next 14 Days Programs",
                      "dict.hub.tv.guide.moviesChannels.info": "Next 14 Days Programs",
                      "dict.hub.tv.guide.favoriteChannels.info": "Next 14 Days Programs",
                      "dict.hub.tv.guide.entertainmentChannels.info": "Next 14 Days Programs",
                      "dict.hub.tv.guide.kidsChannels.info": "Next 14 Days Programs",
                      "dict.hub.tv.guide.newsChannels.info": "Next 14 Days Programs",
                      "dict.hub.tv.guide.generalChannels": "General Channels",
                      "dict.hub.tv.guide.hdChannels": "HD Channels",
                      "dict.hub.tv.guide.publicChannels": "Public Channels",
                      "dict.hub.tv.guide.filmChannels": "Film Channels",
                      "dict.hub.tv.guide.childrenChannels": "Children Channels",
                      "dict.hub.tv.guide.musicChannels": "Music Channels",
                      "dict.hub.tv.guide.informationChannels": "Information Channels",
                      "dict.hub.tv.guide.familyMovieChannels": "Family Movie Channels",
                      "dict.hub.tv.guide.kidsMovieChannels": "Kids Movie Channels",
                      "dict.hub.tv.guide.documentaryChannels": "Documentary Channels",
                      "dict.hub.tv.guide.lifeStyleChannels": "Lifestyle Channels",
                      "dict.hub.tv.guide.newsBusinessChannels": "Business News Channels"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/apiCache/authorization": {
      "get": {
        "description": "Creates and returns cookies that should be used for all other APIs that use the ApiCache endpoint\nThis is an internal API, generated ONLY by the server and returned as the apiCache/authorizationUrl response.\n",
        "operationId": "GET_shared-apiCache-authorization",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "enum : [cloudfront]\nindicate what kind of cookies should be created.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "authorization cookies successfully created and returned as headers. no body will be returned.",
            "content": {}
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/show/vod/{showId}": {
      "get": {
        "description": "Get the non-personal metadata for a vod show by its showId",
        "operationId": "GET_shared-show-vod-showId",
        "parameters": [
          {
            "name": "showId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentType",
                    "id",
                    "resource",
                    "source",
                    "title"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this asset"
                    },
                    "resource": {
                      "type": "string",
                      "enum": [
                        "asset"
                      ]
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The type of this asset.  Determines if the asset has any parent or child relationships to other assets",
                      "enum": [
                        "standalone",
                        "episode",
                        "season",
                        "show",
                        "group"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "The different sources of an asset. In case of grouped content, this is the source of the collapsed items",
                      "enum": [
                        "ltv",
                        "vod",
                        "pvr",
                        "youtube",
                        "catchup"
                      ]
                    },
                    "startDateTime": {
                      "type": "string",
                      "description": "For ltv,catchup,pvr standalone/episodes assets, the date-time this asset is broadcast on the associated channel. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "isEntitled": {
                      "type": "boolean",
                      "description": "Determines if this household is entitled to play this asset."
                    },
                    "isVodFavorite": {
                      "type": "boolean",
                      "description": "Determines if this item has been marked as favorite. When property is missing it is considered as false."
                    },
                    "expirationDateTime": {
                      "type": "string",
                      "description": "The date-time at which this instance is no longer available. Provided only if applicable (e.g. CDVR expiration or VOD expiration when expiringSoon content flag is set). Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "rentalExpiration": {
                      "type": "string",
                      "description": "The date-time at which rental entitlements expires. It will be present only for vods that have been rented by the user. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "lastPlayPosition": {
                      "type": "integer",
                      "description": "The last position, in seconds from the start, that the user got to when last viewing this asset. Applicable to standalone/episodes assets of type vod/pvr/catchup.  The value is based on the parameter supplied by the application in the DELETE devices/me/playsessions API when tearing down this asset's playsession. The parameter supplied only when the value is non-zero."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of this asset in seconds.  Only relevant for standalone/episode contentType."
                    },
                    "contentDuration": {
                      "type": "integer",
                      "description": "The original content duration. May be different from duration.  For PVR asset it represents duration of original content. The value is not provided when identical to duration."
                    },
                    "contentFlags": {
                      "type": "string",
                      "description": "The content flags applicable for this asset. This is personalized for the client. In some use cases partial list of contentFlags will be returned, depending on API used"
                    },
                    "booking": {
                      "type": "string",
                      "description": "The booking associated with this asset."
                    },
                    "purchaseDateTime": {
                      "type": "string",
                      "description": "Time stamp reflecting the purchase date (if applicable). format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "purchases": {
                      "type": "array",
                      "description": "The list of Authorization status of the offers associated with the asset",
                      "items": {
                        "type": "string",
                        "description": "The Authorization status of the offers associated with the asset"
                      }
                    },
                    "bookmarks": {
                      "type": "array",
                      "description": "The list of bookmarks that are present for the asset. It is returned only as part of contentInstances API",
                      "items": {
                        "type": "string",
                        "description": "The bookmark name and offset"
                      }
                    },
                    "linearInstanceId": {
                      "type": "string",
                      "description": "Corresponding linear asset Id, for catchup asset only"
                    },
                    "restartContentId": {
                      "type": "string",
                      "description": "Corresponding restart asset Id, applicable for linear asset with restartAvailable content flag. This property is provided only as part of contentInstances API. It should be used to create restart play session with /devices/me/playsessions/<restartContentId> API"
                    },
                    "branding": {
                      "type": "string",
                      "description": "In case of shop in shop asset - optional branding information of the provider"
                    },
                    "collapsedItemsCount": {
                      "type": "integer",
                      "description": "Number of collapsed items for this asset. Present only for show/season/group assets."
                    },
                    "collapsedItemsContentType": {
                      "type": "string",
                      "description": "The contentType of collapsed items. In case of show collapsed items can be of type season in case of series with season or episodes in case of open series. Present only for show/season/group assets.",
                      "enum": [
                        "standalone",
                        "episode",
                        "season"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The main display title for this asset.  For 'episodes' and 'seasons' this will be the 'show' title."
                    },
                    "episodeTitle": {
                      "type": "string",
                      "description": "Optionally provided, for episode assets only. This is the title of the episode."
                    },
                    "seasonNumber": {
                      "type": "string",
                      "description": "The number of the season.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "episodeNumber": {
                      "type": "string",
                      "description": "The number of the episode.  Only supplied for Asset of type 'episode'"
                    },
                    "showId": {
                      "type": "string",
                      "description": "The identifier of the associated Show.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "seasonId": {
                      "type": "string",
                      "description": "The identifier of the associated Season.  Only supplied for asset of type 'episode'"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "External content/video identifier for third party video applications, coming from federated search sources, i.e. youtube or netflix"
                    },
                    "externalPackageId": {
                      "type": "string",
                      "description": "External content/video Package identifier which comes from ADI ingest and used by service provider in order to track content package"
                    },
                    "productionYear": {
                      "type": "integer",
                      "description": "The year the asset content was produced"
                    },
                    "productionLocation": {
                      "type": "string",
                      "description": "The location in which the asset content was produced"
                    },
                    "starRating": {
                      "type": "integer",
                      "description": "The editorially supplied star rating for the asset.  Supplied as an integer.  The platform will define the supplyer of the rating and hence the range, (e.g. 1-5, 1-10, 100%)  The UI will determine how this value is to be presented."
                    },
                    "audioLanguages": {
                      "type": "array",
                      "description": "The display strings for the available audio languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "audioFormat": {
                      "type": "string",
                      "description": "The display string for the audio format this asset is available in.  For example 'Dolby Prologic'.  Note that asset may have several audio formats available, this is the primary display name for the best audio."
                    },
                    "videoFormat": {
                      "type": "string",
                      "description": "The display string for the video format this asset is available in.  For example '1080i HD'.  Note that asset may be available in other video formats, this is the primary display name for the best video format."
                    },
                    "subtitleLanguages": {
                      "type": "array",
                      "description": "The display strings for the available subtitle languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contentAdvisories": {
                      "type": "array",
                      "description": "The advisory flags applicable for this asset. This is personalized for the client.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalFlags": {
                      "type": "array",
                      "description": "Externally driven flags associated with this asset. Values are controlled by the operator and are opaque to API. Application code can use the flags as UI indications.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalLinks": {
                      "type": "object",
                      "properties": {
                        "assetPage": {
                          "type": "string",
                          "description": "the detail page to display for this external asset"
                        },
                        "playback": {
                          "type": "string",
                          "description": "the link to invoke for playback of this external asset"
                        },
                        "type": {
                          "type": "string",
                          "description": "the type of link for the external content",
                          "enum": [
                            "externalApp",
                            "webPage"
                          ]
                        }
                      },
                      "description": "A set of links to allow the client to access external content"
                    },
                    "media": {
                      "type": "array",
                      "description": "Media to use to present this asset.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "credits": {
                      "type": "object",
                      "properties": {
                        "actors": {
                          "type": "array",
                          "description": "The list of actors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directors": {
                          "type": "array",
                          "description": "The list of directors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "genres": {
                      "type": "array",
                      "description": "array of genres.",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "synopsis": {
                      "type": "string",
                      "description": "A short form of synopsis to display when Asset is displayed in a list, summary or grid view.  Always supplied when synopsis is available.  Note: some Asset may have no synopsis"
                    },
                    "longSynopsis": {
                      "type": "string",
                      "description": "A long form of synopsis to display when Asset is displayed in detail.  It is returned only as part of contentInstances API and in groupContent responses, but not from other aggregation   Note: some Asset may have no synopsis or no long synopsis"
                    },
                    "studioCode": {
                      "type": "string",
                      "description": "The registration code assigned to the asset by the studio providing it"
                    },
                    "parentalRating": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The display string to use to indicate this parental rating."
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value to use for enforcing parental control policies"
                        }
                      },
                      "description": "The parental rating assigned to this asset."
                    },
                    "externalStarRatings": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "List of star rating provided by external providers like IMdb.",
                      "items": {
                        "required": [
                          "provider",
                          "score"
                        ],
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "imdb"
                            ]
                          },
                          "score": {
                            "type": "number"
                          }
                        },
                        "description": "external provider star rating object."
                      }
                    },
                    "trailer": {
                      "type": "object",
                      "properties": {
                        "trailerContentId": {
                          "type": "string",
                          "description": "Trailer Identifier, this id can be used to play the trailer."
                        }
                      },
                      "description": "Trailer information for this asset"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The channel description. The property is not supplied when asset is already part of channel schema (/agg/grid API) or in conflict schema."
                    },
                    "recordingState": {
                      "type": "string",
                      "description": "State of the recording progress for a booking.",
                      "enum": [
                        "notStarted",
                        "inProgress",
                        "ended",
                        "failed"
                      ]
                    },
                    "locator": {
                      "type": "string",
                      "description": "Locator of the asset that can be used in paging requests."
                    },
                    "bookingStatesKey": {
                      "type": "string",
                      "description": "A key which can be used to find booking state of this asset inside booking state list provided by API /personal/bookingStates. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "restartEventKey": {
                      "type": "string",
                      "description": "A key which can be used to find restart information for this asset inside restartEvents list provided by API /shared/restartEvents. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "entitledPpvKey": {
                      "type": "string",
                      "description": "A key which can be used to find entitled state of this asset inside ppvEntitlements list provided by API /personal/ppvEntitlements. This property is provided only for ppv events as part of non-personalized API /shared/grid"
                    },
                    "viewHistoryKey": {
                      "type": "string",
                      "description": "A key which can be used to find viewing history of this asset inside viewHistory list provided by API /personal/viewingHistory. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "offerKeys": {
                      "type": "string",
                      "description": "A list of offer keys which can be used to check entitlement status of this asset by matching with entitled offers list provided by API /personal/entitledOffers. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "consentGroup": {
                      "type": "string",
                      "description": "The dynamic ads provider identifier for this asset, relevant for VOD assets only. Opting in or out to getting targeted advertisements is done per consentGroup"
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Base Schema for an asset which can be either a concrete episode/standalone event or a grouped content (season/show/group aka boxset). This schema replaces instance.schema and content.schema starting from API version 1.6.0",
                  "example": {
                    "id": "astro.com.my_47_PACK0000000000299314~vod",
                    "resource": "asset",
                    "source": "vod",
                    "contentType": "show",
                    "title": "Tom And Jerry Theatricals",
                    "contentFlags": [
                      "expiringSoon"
                    ],
                    "showId": "astro.com.my_47_PACK0000000000299314",
                    "collapsedItemsContentType": "episode",
                    "collapsedItemsCount": 8,
                    "productionYear": 1940,
                    "media": [
                      {
                        "type": "regular",
                        "mimeType": "image/jpeg",
                        "url": "http://vod-poster.astro.com.my/prod/IVP(STB_OTT_STV)_49132_IVP_LAND_672x378_2021326_184440.jpg",
                        "height": 378,
                        "width": 672
                      },
                      {
                        "type": "regular",
                        "mimeType": "image/jpeg",
                        "url": "http://vod-poster.astro.com.my/prod/IVP(STB_OTT_STV)_49132_IVP_LAND_448x252_2021326_184440.jpg",
                        "height": 252,
                        "width": 448
                      },
                      {
                        "type": "regular",
                        "mimeType": "image/jpeg",
                        "url": "http://vod-poster.astro.com.my/prod/IVP(STB_OTT_STV)_49132_IVP_LAND_432x243_2021326_184440.jpg",
                        "height": 243,
                        "width": 432
                      },
                      {
                        "type": "regular",
                        "mimeType": "image/jpeg",
                        "url": "http://vod-poster.astro.com.my/prod/IVP(STB_OTT_STV)_49132_IVP_LAND_288x162_2021326_184440.jpg",
                        "height": 162,
                        "width": 288
                      }
                    ],
                    "genres": [
                      {
                        "name": "Cartoons",
                        "genreId": "Cartoons"
                      }
                    ],
                    "synopsis": "The series centers on the rivalry between the titular characters of a cat named Tom and a mouse named Jerry.",
                    "parentalRating": {
                      "name": "U",
                      "value": 1
                    },
                    "externalFlags": [
                      "OTT"
                    ],
                    "bookmarks": [
                      {
                        "name": "closingCredits",
                        "offset": -3000
                      }
                    ],
                    "longSynopsis": "The series centers on the rivalry between the titular characters of a cat named Tom and a mouse named Jerry."
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shared/asset/{instanceId}": {
      "get": {
        "description": "Get the non-personal metadata for an asset. Currently supported only for vod assets.",
        "operationId": "GET_shared-asset-instanceId",
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Can be supplied as a hint to the server as to the status of the asset that is being fetched.\nOnly necessary for use cases where the client received the instanceId from an external agent other than a ctap refAPI response.\nValid values:\n* vod - video on demand content.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientToken",
            "in": "query",
            "description": "Client token which should be retrieved using /resources/initial OR /personal/clientToken API before making calls to any /shared APIs.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contentType",
                    "id",
                    "resource",
                    "source",
                    "title"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this asset"
                    },
                    "resource": {
                      "type": "string",
                      "enum": [
                        "asset"
                      ]
                    },
                    "contentType": {
                      "type": "string",
                      "description": "The type of this asset.  Determines if the asset has any parent or child relationships to other assets",
                      "enum": [
                        "standalone",
                        "episode",
                        "season",
                        "show",
                        "group"
                      ]
                    },
                    "source": {
                      "type": "string",
                      "description": "The different sources of an asset. In case of grouped content, this is the source of the collapsed items",
                      "enum": [
                        "ltv",
                        "vod",
                        "pvr",
                        "youtube",
                        "catchup"
                      ]
                    },
                    "startDateTime": {
                      "type": "string",
                      "description": "For ltv,catchup,pvr standalone/episodes assets, the date-time this asset is broadcast on the associated channel. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "isEntitled": {
                      "type": "boolean",
                      "description": "Determines if this household is entitled to play this asset."
                    },
                    "isVodFavorite": {
                      "type": "boolean",
                      "description": "Determines if this item has been marked as favorite. When property is missing it is considered as false."
                    },
                    "expirationDateTime": {
                      "type": "string",
                      "description": "The date-time at which this instance is no longer available. Provided only if applicable (e.g. CDVR expiration or VOD expiration when expiringSoon content flag is set). Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "rentalExpiration": {
                      "type": "string",
                      "description": "The date-time at which rental entitlements expires. It will be present only for vods that have been rented by the user. Format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "lastPlayPosition": {
                      "type": "integer",
                      "description": "The last position, in seconds from the start, that the user got to when last viewing this asset. Applicable to standalone/episodes assets of type vod/pvr/catchup.  The value is based on the parameter supplied by the application in the DELETE devices/me/playsessions API when tearing down this asset's playsession. The parameter supplied only when the value is non-zero."
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of this asset in seconds.  Only relevant for standalone/episode contentType."
                    },
                    "contentDuration": {
                      "type": "integer",
                      "description": "The original content duration. May be different from duration.  For PVR asset it represents duration of original content. The value is not provided when identical to duration."
                    },
                    "contentFlags": {
                      "type": "string",
                      "description": "The content flags applicable for this asset. This is personalized for the client. In some use cases partial list of contentFlags will be returned, depending on API used"
                    },
                    "booking": {
                      "type": "string",
                      "description": "The booking associated with this asset."
                    },
                    "purchaseDateTime": {
                      "type": "string",
                      "description": "Time stamp reflecting the purchase date (if applicable). format is ISO 8601 date-time",
                      "format": "date-time"
                    },
                    "purchases": {
                      "type": "array",
                      "description": "The list of Authorization status of the offers associated with the asset",
                      "items": {
                        "type": "string",
                        "description": "The Authorization status of the offers associated with the asset"
                      }
                    },
                    "bookmarks": {
                      "type": "array",
                      "description": "The list of bookmarks that are present for the asset. It is returned only as part of contentInstances API",
                      "items": {
                        "type": "string",
                        "description": "The bookmark name and offset"
                      }
                    },
                    "linearInstanceId": {
                      "type": "string",
                      "description": "Corresponding linear asset Id, for catchup asset only"
                    },
                    "restartContentId": {
                      "type": "string",
                      "description": "Corresponding restart asset Id, applicable for linear asset with restartAvailable content flag. This property is provided only as part of contentInstances API. It should be used to create restart play session with /devices/me/playsessions/<restartContentId> API"
                    },
                    "branding": {
                      "type": "string",
                      "description": "In case of shop in shop asset - optional branding information of the provider"
                    },
                    "collapsedItemsCount": {
                      "type": "integer",
                      "description": "Number of collapsed items for this asset. Present only for show/season/group assets."
                    },
                    "collapsedItemsContentType": {
                      "type": "string",
                      "description": "The contentType of collapsed items. In case of show collapsed items can be of type season in case of series with season or episodes in case of open series. Present only for show/season/group assets.",
                      "enum": [
                        "standalone",
                        "episode",
                        "season"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "description": "The main display title for this asset.  For 'episodes' and 'seasons' this will be the 'show' title."
                    },
                    "episodeTitle": {
                      "type": "string",
                      "description": "Optionally provided, for episode assets only. This is the title of the episode."
                    },
                    "seasonNumber": {
                      "type": "string",
                      "description": "The number of the season.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "episodeNumber": {
                      "type": "string",
                      "description": "The number of the episode.  Only supplied for Asset of type 'episode'"
                    },
                    "showId": {
                      "type": "string",
                      "description": "The identifier of the associated Show.  Only supplied for Asset of type 'episode' and 'season'"
                    },
                    "seasonId": {
                      "type": "string",
                      "description": "The identifier of the associated Season.  Only supplied for asset of type 'episode'"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "External content/video identifier for third party video applications, coming from federated search sources, i.e. youtube or netflix"
                    },
                    "externalPackageId": {
                      "type": "string",
                      "description": "External content/video Package identifier which comes from ADI ingest and used by service provider in order to track content package"
                    },
                    "productionYear": {
                      "type": "integer",
                      "description": "The year the asset content was produced"
                    },
                    "productionLocation": {
                      "type": "string",
                      "description": "The location in which the asset content was produced"
                    },
                    "starRating": {
                      "type": "integer",
                      "description": "The editorially supplied star rating for the asset.  Supplied as an integer.  The platform will define the supplyer of the rating and hence the range, (e.g. 1-5, 1-10, 100%)  The UI will determine how this value is to be presented."
                    },
                    "audioLanguages": {
                      "type": "array",
                      "description": "The display strings for the available audio languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "audioFormat": {
                      "type": "string",
                      "description": "The display string for the audio format this asset is available in.  For example 'Dolby Prologic'.  Note that asset may have several audio formats available, this is the primary display name for the best audio."
                    },
                    "videoFormat": {
                      "type": "string",
                      "description": "The display string for the video format this asset is available in.  For example '1080i HD'.  Note that asset may be available in other video formats, this is the primary display name for the best video format."
                    },
                    "subtitleLanguages": {
                      "type": "array",
                      "description": "The display strings for the available subtitle languages for this asset.  Note the API will provide the language names in the language of the user profile accessing the API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contentAdvisories": {
                      "type": "array",
                      "description": "The advisory flags applicable for this asset. This is personalized for the client.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalFlags": {
                      "type": "array",
                      "description": "Externally driven flags associated with this asset. Values are controlled by the operator and are opaque to API. Application code can use the flags as UI indications.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "externalLinks": {
                      "type": "object",
                      "properties": {
                        "assetPage": {
                          "type": "string",
                          "description": "the detail page to display for this external asset"
                        },
                        "playback": {
                          "type": "string",
                          "description": "the link to invoke for playback of this external asset"
                        },
                        "type": {
                          "type": "string",
                          "description": "the type of link for the external content",
                          "enum": [
                            "externalApp",
                            "webPage"
                          ]
                        }
                      },
                      "description": "A set of links to allow the client to access external content"
                    },
                    "media": {
                      "type": "array",
                      "description": "Media to use to present this asset.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "credits": {
                      "type": "object",
                      "properties": {
                        "actors": {
                          "type": "array",
                          "description": "The list of actors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "directors": {
                          "type": "array",
                          "description": "The list of directors for this asset.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "genres": {
                      "type": "array",
                      "description": "array of genres.",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "synopsis": {
                      "type": "string",
                      "description": "A short form of synopsis to display when Asset is displayed in a list, summary or grid view.  Always supplied when synopsis is available.  Note: some Asset may have no synopsis"
                    },
                    "longSynopsis": {
                      "type": "string",
                      "description": "A long form of synopsis to display when Asset is displayed in detail.  It is returned only as part of contentInstances API and in groupContent responses, but not from other aggregation   Note: some Asset may have no synopsis or no long synopsis"
                    },
                    "studioCode": {
                      "type": "string",
                      "description": "The registration code assigned to the asset by the studio providing it"
                    },
                    "parentalRating": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The display string to use to indicate this parental rating."
                        },
                        "value": {
                          "type": "integer",
                          "description": "The value to use for enforcing parental control policies"
                        }
                      },
                      "description": "The parental rating assigned to this asset."
                    },
                    "externalStarRatings": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "List of star rating provided by external providers like IMdb.",
                      "items": {
                        "required": [
                          "provider",
                          "score"
                        ],
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "enum": [
                              "imdb"
                            ]
                          },
                          "score": {
                            "type": "number"
                          }
                        },
                        "description": "external provider star rating object."
                      }
                    },
                    "trailer": {
                      "type": "object",
                      "properties": {
                        "trailerContentId": {
                          "type": "string",
                          "description": "Trailer Identifier, this id can be used to play the trailer."
                        }
                      },
                      "description": "Trailer information for this asset"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The channel description. The property is not supplied when asset is already part of channel schema (/agg/grid API) or in conflict schema."
                    },
                    "recordingState": {
                      "type": "string",
                      "description": "State of the recording progress for a booking.",
                      "enum": [
                        "notStarted",
                        "inProgress",
                        "ended",
                        "failed"
                      ]
                    },
                    "locator": {
                      "type": "string",
                      "description": "Locator of the asset that can be used in paging requests."
                    },
                    "bookingStatesKey": {
                      "type": "string",
                      "description": "A key which can be used to find booking state of this asset inside booking state list provided by API /personal/bookingStates. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "restartEventKey": {
                      "type": "string",
                      "description": "A key which can be used to find restart information for this asset inside restartEvents list provided by API /shared/restartEvents. This property is provided only as part of non-personalized API /shared/grid"
                    },
                    "entitledPpvKey": {
                      "type": "string",
                      "description": "A key which can be used to find entitled state of this asset inside ppvEntitlements list provided by API /personal/ppvEntitlements. This property is provided only for ppv events as part of non-personalized API /shared/grid"
                    },
                    "viewHistoryKey": {
                      "type": "string",
                      "description": "A key which can be used to find viewing history of this asset inside viewHistory list provided by API /personal/viewingHistory. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "offerKeys": {
                      "type": "string",
                      "description": "A list of offer keys which can be used to check entitlement status of this asset by matching with entitled offers list provided by API /personal/entitledOffers. This property is provided only as part of non-personalized API /shared/content"
                    },
                    "consentGroup": {
                      "type": "string",
                      "description": "The dynamic ads provider identifier for this asset, relevant for VOD assets only. Opting in or out to getting targeted advertisements is done per consentGroup"
                    },
                    "deals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Base Schema for an asset which can be either a concrete episode/standalone event or a grouped content (season/show/group aka boxset). This schema replaces instance.schema and content.schema starting from API version 1.6.0",
                  "example": {
                    "id": "TITL0000000000291291~CATC0000000000291291~vod",
                    "resource": "asset",
                    "source": "vod",
                    "contentType": "standalone",
                    "title": "GG Bond Anti-Virus Pilot",
                    "isPlayable": true,
                    "contentFlags": [
                      "rental"
                    ],
                    "duration": 27,
                    "externalPackageId": "PACK0000000000291291",
                    "productionYear": 2020,
                    "audioLanguages": [
                      "cmn"
                    ],
                    "audioFormat": "stereo",
                    "videoFormat": "hd",
                    "media": [
                      {
                        "type": "regular",
                        "mimeType": "image/jpeg",
                        "url": "http://vod-poster.astro.com.my/prod/IVP(STB_OTT_STV)_JJGPL_IVP_LAND_432x243_2021118_161954.jpg",
                        "height": 243,
                        "width": 432
                      },
                      {
                        "type": "regular",
                        "mimeType": "image/jpeg",
                        "url": "http://vod-poster.astro.com.my/prod/IVP(STB_OTT_STV)_JJGPL_IVP_LAND_288x162_2021118_161954.jpg",
                        "height": 162,
                        "width": 288
                      },
                      {
                        "type": "regular",
                        "mimeType": "image/jpeg",
                        "url": "http://vod-poster.astro.com.my/prod/IVP(STB_OTT_STV)_JJGPL_IVP_LAND_672x378_2021118_161954.jpg",
                        "height": 378,
                        "width": 672
                      },
                      {
                        "type": "regular",
                        "mimeType": "image/jpeg",
                        "url": "http://vod-poster.astro.com.my/prod/IVP(STB_OTT_STV)_JJGPL_IVP_LAND_448x252_2021118_161954.jpg",
                        "height": 252,
                        "width": 448
                      }
                    ],
                    "genres": [
                      {
                        "name": "Educational",
                        "genreId": "Educational"
                      }
                    ],
                    "synopsis": "GG Bond shows you how to care for your health, stay fit & keep clean. Be a little hero in the battle against Covid-19!",
                    "parentalRating": {
                      "name": "U",
                      "value": 1
                    },
                    "externalFlags": [
                      "OTT"
                    ],
                    "bookmarks": [
                      {
                        "name": "closingCredits",
                        "offset": -3000
                      }
                    ],
                    "longSynopsis": "GG Bond shows you how to care for your health, stay fit & keep clean. Be a little hero in the battle against Covid-19!"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/personal/clientToken": {
      "get": {
        "description": "Get a client token.\n",
        "operationId": "GET_personal-clientToken",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "clientToken"
                  ],
                  "type": "object",
                  "properties": {
                    "clientToken": {
                      "type": "string",
                      "description": "client token for all APIs under /shared endpoint"
                    }
                  },
                  "description": "Object containing client token for non-personal APIs under /shared endpoint",
                  "example": {
                    "clientToken": "v:1,a:5,c:live,r:5678"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/personal/bookingStates": {
      "get": {
        "description": "Get a list of events in a time window which are booked for recording.  The response includes bookings in all channels.\n",
        "operationId": "GET_personal-bookingStates",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "ISO 8601 compliant UTC date time, defining the start of a time windowed response list.\nThis value is inclusive; entities starting earlier and ongoing at this time will be included in the response.\nIf not provided, the system will use the current time.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration in seconds, defining the end of a time windowed response list relative to `startTime`.\nExample: 9000 - 2hrs 30min duration.\n",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bookingStates": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Schema for list of current/future bookings with its states",
                  "example": {
                    "bookingStates": [
                      {
                        "bookingKey": "2020-07-26T20:20:00Z;CH21",
                        "recordingState": "notStarted"
                      },
                      {
                        "bookingKey": "2020-07-26T22:40:00Z;CH22",
                        "recordingState": "notStarted"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/personal/bookingRecurrences": {
      "get": {
        "description": "Get a list of all of the User's booked shows and seasons.\nCan be used to determine the booking type of an episode based on its showId/seasonId.\nIf the episode's showId is present in the response, its booking type is 'show'.\nIf the episode's seasonId is present in the response, its booking type is 'season'.\nIf neither - its booking type is 'event'.\n",
        "operationId": "GET_personal-bookingRecurrences",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bookingRecurrences": {
                      "type": "object",
                      "properties": {
                        "bookedShows": {
                          "type": "string",
                          "description": "List of showIds"
                        },
                        "bookedSeasons": {
                          "type": "string",
                          "description": "List of seasonIds"
                        }
                      }
                    }
                  },
                  "description": "Schema for list of show/season of recurrent bookings",
                  "example": {
                    "bookingRecurrences": {
                      "bookedShows": [
                        "10013244",
                        "10015827",
                        "20000168",
                        "20018322",
                        "20025872",
                        "20028124",
                        "20028414",
                        "20028824"
                      ],
                      "bookedSeasons": [
                        "20047746S3",
                        "20036344S2"
                      ]
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/personal/channels": {
      "get": {
        "description": "Retrieve a list of channels and their personal metadata (without events): channelId, isEntitled, isFavorite, isLocked\n",
        "operationId": "GET_personal-channels",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return in the response list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 1,
              "type": "integer",
              "default": 40
            }
          },
          {
            "name": "isPlayable",
            "in": "query",
            "description": "Filter for channels which are consumable in the current device (i.e. the channel's format is playable on the device). If this filter false or not given, both playable and non playable channels are returned. If true, return only playable channels.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isEntitled",
            "in": "query",
            "description": "Filter for channels which the household associated to this device is entitled to. If this filter is false or not given, return entitled and not entitled channels. If true, return only entitled channels.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "__locator__; GUID of the channel that is used as the base location point of the offset in the response list.\nThis channel will be the first in the returned list.\nShall not be supplied together with any other locator, otherwise a 400 response will be returned.\nIf not provided, the system uses the first channel in the channel list for the client\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logicalChannelNumber",
            "in": "query",
            "description": "__locator__; Logical channel number of the channel (relevant for the calling device) that is used as the base location point of the offset in the response list.\nThis channel will be the first in the returned list.\nThis parameter should be used for direct channel access. Shall not be supplied together with any other locator, otherwise a 400 response will be returned.\ndefault is the first channel in the channel list for the client.\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "genreId",
            "in": "query",
            "description": "Filter resources to those associated with the supplied genreId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radioFilter",
            "in": "query",
            "description": "Filter Radio channels. If not provided, radio channels are NOT included in the response.\nwithRadio -> Radio channels AND other channels (video) are provided in the response.\n",
            "schema": {
              "type": "string",
              "enum": [
                "withRadio"
              ]
            }
          },
          {
            "name": "offerKeys",
            "in": "query",
            "description": "Comma-separated list of offerKeys.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point relative to a location (specified by the locator, channelId or logicalChannelNumber parameter) where entries in the response list should be selected from.\nLimited to 255 to prevent long running queries on the implementation.\nClients should get results to obtain a new locator, channelId or logicalChannelNumber (depending on API) to page further through the list.\n",
            "required": true,
            "schema": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "unique identifier for the channel"
                    },
                    "isFavorite": {
                      "type": "boolean",
                      "description": "Flag indicating whether the channel is part of the favorite list.",
                      "default": false
                    },
                    "isEntitled": {
                      "type": "boolean",
                      "description": "Flag indicating whether the channel is entitled to be played"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Flag indicating whether the channel is locked",
                      "default": false
                    }
                  },
                  "description": "Schema for channel object with personal data only",
                  "example": {
                    "count": 3,
                    "total": 204,
                    "channels": [
                      {
                        "id": "CHID_1",
                        "isFavorite": true,
                        "isEntitled": true,
                        "isLocked": false
                      },
                      {
                        "id": "CHID_2",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false
                      },
                      {
                        "id": "CHID_3",
                        "isFavorite": false,
                        "isEntitled": true,
                        "isLocked": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/personal/ppvEntitlements": {
      "get": {
        "description": "Get list of entitled ppv events in time window on all channels.\n",
        "operationId": "GET_personal-ppvEntitlements",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "ISO 8601 compliant UTC date time, defining the start of a time windowed response list.\nThis value is inclusive; entities starting earlier and ongoing at this time will be included in the response.\nIf not provided, the system will use the current time.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Duration in seconds, defining the end of a time windowed response list relative to `startTime`.\nExample: 9000 - 2hrs 30min duration.\n",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ppvEntitlements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entitledPpvKey": {
                            "type": "string",
                            "description": "A key of entitled event that will match entitledPpvKey inside asset.schema"
                          }
                        }
                      }
                    }
                  },
                  "description": "Schema for list of entitled PPV events",
                  "example": {
                    "ppvEntitlements": [
                      {
                        "entitledPpvKey": "CH21;2020-07-26T20:20:00Z"
                      },
                      {
                        "entitledPpvKey": "CH22;2020-07-26T22:40:00Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/personal/entitledOffers": {
      "get": {
        "description": "Get list of entitled offers\n",
        "operationId": "GET_personal-entitledOffers",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entitledOffers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "offerKey": {
                            "type": "string",
                            "description": "Unique identifier for this offer.  It is matching elements of offerKeys array which is part of asset.schema"
                          },
                          "expirationDateTime": {
                            "type": "string",
                            "description": "The date-time at which this offerKey is no longer available. Provided only if applicable (e.g. VOD rentals). format is ISO 8601 date-time",
                            "format": "date-time"
                          },
                          "expiringSoon": {
                            "type": "boolean",
                            "description": "Indicates if rental offer expiration is within system-configured threshold. Provided only if true. Comes together with expirationDateTime property."
                          }
                        }
                      }
                    }
                  },
                  "description": "Schema for list of entitled offers",
                  "example": {
                    "entitledOffers": [
                      {
                        "offerKey": "sub1"
                      },
                      {
                        "offerKey": "sub3"
                      },
                      {
                        "offerKey": "tvod123",
                        "expirationDateTime": "2020-07-26T22:40:00.000Z"
                      },
                      {
                        "offerKey": "tvod125",
                        "expirationDateTime": "2020-07-25T18:20:00.000Z",
                        "expiringSoon": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/personal/viewingHistory": {
      "get": {
        "description": "Get a list of all assets in this user's viewing history and their lastPlayPosition.\nTo be used with /shared/content APIs to cross-check the viewHistoryKey property from the asset object.\n",
        "operationId": "GET_personal-viewingHistory",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "The source from which to return the viewing history.\n* vod - video on demand content\n* catchup - recorded catchup content\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "vod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "viewingHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "viewHistoryKey": {
                            "type": "string",
                            "description": "Unique identifier for this viewed item.  It is matching viewHistoryKey property which is part of asset.schema"
                          },
                          "lastPlayPosition": {
                            "type": "integer",
                            "description": "Last play position in seconds"
                          }
                        }
                      }
                    }
                  },
                  "description": "Schema for list of viewed history",
                  "example": {
                    "viewHistory": [
                      {
                        "viewHistoryKey": "TITL0000000000692305",
                        "lastPlayPosition": 3569
                      },
                      {
                        "viewHistoryKey": "TITL0000000000692305",
                        "lastPlayPosition": 1201
                      },
                      {
                        "viewHistoryKey": "TITL0000000000692305",
                        "lastPlayPosition": 4568
                      }
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apiCache/authorizationUrl": {
      "get": {
        "description": "Get a signed url which should be invoked in order to set up the http cookies necessary for accessing the ApiCache /shared ctap endpoints\nThe cookies returned with the response to the invocation of the signed url should be stored by the app and sent with every call to the ApiCache /shared ctap endpoints\nThe CSDS response will signal the authorizationType in the ApiCache block. This API should be invoked if that authorizationType is 'CDNAuthorization'\n",
        "operationId": "GET_apiCache-authorizationUrl",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nnote: if the x-response-lang header is also given, its value will take precedence over the value of this header.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          },
          {
            "name": "x-response-lang",
            "in": "header",
            "description": "Identifies the requested response language. This should be an ISO 639-1 two letter code. Subcodes (like en-GB) are aslo supported.\nGive this header in GET methods where the response can be returned in different natural languages.\nThis header is supported in addtion to the standard 'Accept-Language' header. If both are given, the value in this header will be used.\n",
            "required": true,
            "schema": {
              "type": "string",
              "default": "*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "url"
                  ],
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "signed url which should be invoked by the app to fetch headers for authentication against the apiCache server"
                    }
                  },
                  "description": "schema for the signed url that should be invoked in order to get the apiCache authorization cookies",
                  "example": {
                    "url": "https://d3j35dxplamnfc.cloudfront.net/ctap/r1.6.0/shared/apiCache/authorization?type=cloudfront&Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kM2ozNWR4cGxhbW5mYy5jbG91ZGZyb250Lm5ldC9jdGFwL3I~Lj8uPy9zaGFyZWQvKiIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTYxMTU3MTIxMjYyM319fV19&Key-Pair-Id=K2XFS45Y2C2HKQ&Signature=Mry2STOhxOhKN8H69mMzad0WuZ98mFmiqdcIvjfuIBvxL8Tv8Q-9OQmE7v6gickM52RbvWlPaQh~N4LMKw7VqSgmddHspxCkvBtUDSiKyBAaO6j1J7p3xjcEbIMRsvRiBuR0i~Br9vdRVB3TG-He6hQdOEKLkIWQrAJzHsklwBzTUEDbHPYpu2mhcPFxRGtxaxp8fBgR2Xyv~WHvX78dvr5QW0PxU~tOyWSsarWPAwqlxMPoHY0Ff2eQBaTMLOs~xotdpdMDkU2kRZUzLLTJpppZlE5IGl0MWi0VGT8Lba--ebzTrRKclqGxr9M6hp2EK7nf5hkt9FYcJofNab21IQ__"
                  }
                }
              }
            }
          },
          "304": {
            "description": "If the server supports http-caching for this API, this httpCode will be returned\nwhen the data has not changed and therefore will not be returned.\nThe assumption is that the client has also enabled http-caching, and has set the etag from\nthe previous request as the if-none-match value in the subsequent request.\n",
            "content": {}
          },
          "400": {
            "description": "The server was unable to process this request because a required parameter is either missing or malformed, or an invalid parameter combination was given.\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "BAD_REQUEST",
                    "errors": [
                      "Some part of the request is missing or malformed"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find this endpoint.  The client has formed a URL to a resouce that does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "NOT_FOUND",
                    "errors": [
                      "The endpoint '/some/path' was not found"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an error whilst dealing with this request.  The client should try again later.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
                    },
                    "errors": {
                      "type": "array",
                      "description": "A list of one or more developer orientated error messages explaining detail about the error",
                      "items": {
                        "type": "string"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
                    }
                  },
                  "description": "Schema for a Error response from the API",
                  "example": {
                    "id": "GENERAL_ERROR",
                    "errors": [
                      "Error in the server"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "errors": {
        "required": [
          "errors",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "An identifier for this error.  May be used by the client to determine exactly what the error was and the client may be able to take appropriate action.  Consult the specific APIs for the list of possible error codes."
          },
          "errors": {
            "type": "array",
            "description": "A list of one or more developer orientated error messages explaining detail about the error",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "object",
            "properties": {},
            "description": "Some API endpoint provide additional data to the client to understand or respond to the error.  The details of the data provided is specific to each API endpoint."
          }
        },
        "description": "Schema for a Error response from the API"
      },
      "apiVersiondef": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "version information formatted as major.minor.revision"
          }
        }
      }
    }
  }
}
{
  "openapi": "3.0.3",
  "info": {
    "title": "Parsable Public API",
    "contact": {},
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "https://api.us-1.parsable.io/v3",
      "description": "US region"
    },
    {
      "url": "https://api.eu-1.parsable.io/v3",
      "description": "EU region"
    }
  ],
  "tags": [
    {
      "name": "Step Input Fields",
      "description": "Endpoints for entering and updating data in step input fields. Step input fields are the input fields that users interact with while executing a job. Fields may also be marked as N/A (Not Applicable) if they are not relevant to the current job.\n"
    }
  ],
  "paths": {
    "/jobs/{jobId}/procedures/{procedureId}/steps/{stepId}/input-fields/{fieldId}": {
      "patch": {
        "tags": ["Step Input Fields"],
        "summary": "Add data to a field on a step",
        "description": "Update the data for a specific input field on a step within a job's procedure.",
        "parameters": [
          {
            "$ref": "#/components/parameters/path.jobId"
          },
          {
            "$ref": "#/components/parameters/path.procedureId"
          },
          {
            "$ref": "#/components/parameters/path.stepId"
          },
          {
            "$ref": "#/components/parameters/path.fieldId"
          }
        ],
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dtoInputFieldUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Created Field Data Response"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpErrorResponseBody"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpErrorResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Access Denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpErrorResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/httpErrorResponseBody"
                }
              }
            }
          }
        },
        "operationId": "add-data-to-a-field-on-a-step"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "path.jobId": {
        "name": "jobId",
        "in": "path",
        "description": "Job ID",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "path.procedureId": {
        "name": "procedureId",
        "in": "path",
        "description": "Job Procedure ID",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "path.stepId": {
        "name": "stepId",
        "in": "path",
        "description": "Procedure Step ID",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "path.fieldId": {
        "name": "fieldId",
        "in": "path",
        "description": "Procedure Step Input Field ID",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "schemas": {
      "httpErrorResponseBody": {
        "required": ["errorCode", "message", "requestId"],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        }
      },
      "NumberData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "properties": {
              "number": {
                "type": "number"
              },
              "precision": {
                "type": "integer"
              },
              "unitId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": ["number"]
          },
          "type": {
            "type": "string",
            "enum": ["number"]
          }
        },
        "example": {
          "value": {
            "number": 123.45,
            "precision": 2,
            "unitId": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": "number"
        },
        "required": ["value", "type"]
      },
      "TextData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "Some Text"
          },
          "type": {
            "type": "string",
            "enum": ["text"],
            "example": "text"
          }
        },
        "required": ["value", "type"]
      },
      "YesNoData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": ["yes-no"]
          }
        },
        "example": {
          "value": true,
          "type": "yes-no"
        },
        "required": ["value", "type"]
      },
      "ListData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["list"]
          }
        },
        "example": {
          "value": "Some list item",
          "type": "list"
        },
        "required": ["value", "type"]
      },
      "MultiSelectListData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": ["multi-select-list"]
          }
        },
        "example": {
          "value": ["Some selected list item", "Another selected list item"],
          "type": "multi-select-list"
        },
        "required": ["value", "type"]
      },
      "dtoDocumentRef": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["documentId"]
      },
      "PhotosData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dtoDocumentRef"
            },
            "minItems": 1
          },
          "type": {
            "type": "string",
            "enum": ["photos"]
          }
        },
        "example": {
          "value": [
            {
              "documentId": "123e4567-e89b-12d3-a456-426614174000"
            }
          ],
          "type": "photos"
        },
        "required": ["value", "type"]
      },
      "DateData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": ["date"]
          }
        },
        "example": {
          "value": "2020-01-01T00:00:00Z",
          "type": "date"
        },
        "required": ["value", "type"]
      },
      "DateTimeData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": ["date-time"]
          }
        },
        "example": {
          "value": "2023-11-06T12:35:23Z",
          "type": "date-time"
        },
        "required": ["value", "type"]
      },
      "SignatureData": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/dtoDocumentRef"
          },
          "type": {
            "type": "string",
            "enum": ["signature"]
          }
        },
        "example": {
          "value": {
            "documentId": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": "signature"
        },
        "required": ["value", "type"]
      },
      "FileData": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/dtoDocumentRef"
          },
          "type": {
            "type": "string",
            "enum": ["file"]
          }
        },
        "example": {
          "value": {
            "documentId": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": "file"
        },
        "required": ["value", "type"]
      },
      "VideoData": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/dtoDocumentRef"
          },
          "type": {
            "type": "string",
            "enum": ["video"]
          }
        },
        "example": {
          "value": {
            "documentId": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": "video"
        },
        "required": ["value", "type"]
      },
      "AudioData": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/dtoDocumentRef"
          },
          "type": {
            "type": "string",
            "enum": ["audio"]
          }
        },
        "example": {
          "value": {
            "documentId": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": "audio"
        },
        "required": ["value", "type"]
      },
      "LinkData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uri"
          },
          "type": {
            "type": "string",
            "enum": ["link"]
          }
        },
        "example": {
          "value": "https://example.com",
          "type": "link"
        },
        "required": ["value", "type"]
      },
      "DynamicListData": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "level": {
                  "type": "integer"
                },
                "value": {
                  "type": "string"
                },
                "header": {
                  "type": "string"
                }
              },
              "required": ["level", "value", "header"]
            }
          },
          "type": {
            "type": "string",
            "enum": ["dynamic-list"]
          }
        },
        "example": {
          "value": [
            {
              "level": 1,
              "value": "Some dynamic list item",
              "header": "Some dynamic list header"
            }
          ],
          "type": "dynamic-list"
        },
        "required": ["value", "type"]
      },
      "NullData": {
        "type": "object",
        "additionalProperties": false,
        "nullable": true,
        "description": "Set data to null to clear the field"
      },
      "dtoFieldData": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/NumberData"
          },
          {
            "$ref": "#/components/schemas/TextData"
          },
          {
            "$ref": "#/components/schemas/YesNoData"
          },
          {
            "$ref": "#/components/schemas/ListData"
          },
          {
            "$ref": "#/components/schemas/MultiSelectListData"
          },
          {
            "$ref": "#/components/schemas/PhotosData"
          },
          {
            "$ref": "#/components/schemas/DateData"
          },
          {
            "$ref": "#/components/schemas/DateTimeData"
          },
          {
            "$ref": "#/components/schemas/SignatureData"
          },
          {
            "$ref": "#/components/schemas/FileData"
          },
          {
            "$ref": "#/components/schemas/VideoData"
          },
          {
            "$ref": "#/components/schemas/AudioData"
          },
          {
            "$ref": "#/components/schemas/LinkData"
          },
          {
            "$ref": "#/components/schemas/DynamicListData"
          },
          {
            "$ref": "#/components/schemas/NullData"
          }
        ]
      },
      "dtoInputFieldUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": ["data"],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/dtoFieldData"
          },
          "updated": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "clientTime": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}
